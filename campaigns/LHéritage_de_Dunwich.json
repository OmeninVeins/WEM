{"GUID":"e073d5","Name":"Custom_Model_Bag","Transform":{"posX":-85.00218,"posY":0.9800004,"posZ":19.22367,"rotX":-0.000004965651,"rotY":180.000549,"rotZ":5.76045352e-7,"scaleX":0.6144237,"scaleY":0.08580595,"scaleZ":0.6144237},"Nickname":"L'Héritage de Dunwich","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/core_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/762723517667666249/B7EB11E1C48A63D3B8AC233FF2DF0BBAD74ECC6E/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,5}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 4\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-1.25,0.1,6}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.25,0.3,7}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.25,0.3,6}, rotation={0,0,0}, height=500, width=1200,\r\n          font_size=300, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.25,0.3,8}, rotation={0,0,0}, height=500, width=1200,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n          if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={1.25,0.3,8}, rotation={0,0,0}, height=500, width=1200,\r\n                    font_size=230, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={1.25,0.3,7}, rotation={0,0,0}, height=500, width=1200,\r\n                    font_size=300, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-6}, rotation={0,0,0}, height=500, width=1200,\r\n            font_size=300, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={1.4,1,5.85}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-1.4,1,5.85}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={5.85,0.1,0}, rotation={0,270,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"018503\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5212,\"z\":22},\"rot\":{\"x\":0.0109,\"y\":180.0045,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"022ddf\":{\"lock\":false,\"pos\":{\"x\":-52.5,\"y\":0.9824,\"z\":23.5},\"rot\":{\"x\":0.0048,\"y\":180.0124,\"z\":-0.0015}},\"026422\":{\"lock\":false,\"pos\":{\"x\":-25.5,\"y\":1.8054,\"z\":14.5},\"rot\":{\"x\":0,\"y\":180.0004,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"02ae6a\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.5036,\"z\":7},\"rot\":{\"x\":-0.0049,\"y\":269.995,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"0314c8\":{\"lock\":false,\"pos\":{\"x\":23,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9909,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0314fd\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5364,\"z\":-5.9997},\"rot\":{\"x\":0.0049,\"y\":90.0051,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"03dd9b\":{\"lock\":false,\"pos\":{\"x\":-23.0163,\"y\":1.7663,\"z\":28.6754},\"rot\":{\"x\":0,\"y\":0.0001,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"044e47\":{\"lock\":false,\"pos\":{\"x\":-25.4399,\"y\":1.8341,\"z\":11.335},\"rot\":{\"x\":7.8017,\"y\":359.9655,\"z\":0.0086},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"0623c7\":{\"lock\":false,\"pos\":{\"x\":-6,\"y\":1.5201,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"06541a\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7291,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180.0005,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"09de37\":{\"lock\":false,\"pos\":{\"x\":-34.0689,\"y\":1.7663,\"z\":14.7627},\"rot\":{\"x\":0,\"y\":0.01,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"0b2cbf\":{\"lock\":false,\"pos\":{\"x\":-1.5,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9911,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0b34de\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5461,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":90.0095,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0b9474\":{\"lock\":false,\"pos\":{\"x\":23.5001,\"y\":1.5138,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":179.9892,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0dd4f6\":{\"lock\":false,\"pos\":{\"x\":9.5,\"y\":1.5034,\"z\":5},\"rot\":{\"x\":359.9888,\"y\":315,\"z\":0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"0e5993\":{\"lock\":false,\"pos\":{\"x\":-26.5,\"y\":1.7789,\"z\":26},\"rot\":{\"x\":0,\"y\":180.0006,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"102945\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5066,\"z\":20},\"rot\":{\"x\":359.993,\"y\":30.0264,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"104a9a\":{\"lock\":false,\"pos\":{\"x\":-6,\"y\":1.5204,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"118416\":{\"lock\":false,\"pos\":{\"x\":-22.5,\"y\":1.7789,\"z\":8.5},\"rot\":{\"x\":0,\"y\":180.0224,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"14e498\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.83525168895721,\"z\":9.5},\"rot\":{\"x\":-6.03358785156161E-06,\"y\":179.971969604492,\"z\":-1.37593019644555E-07},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"16c9c9\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.5174,\"z\":4.5},\"rot\":{\"x\":0.0109,\"y\":179.9991,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"186784\":{\"lock\":false,\"pos\":{\"x\":-2.0001,\"y\":1.5071,\"z\":18.9997},\"rot\":{\"x\":359.9891,\"y\":-0.0055,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"1ba7b3\":{\"lock\":false,\"pos\":{\"x\":-31.5,\"y\":1.7789,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1d8503\":{\"lock\":false,\"pos\":{\"x\":-27,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9729,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"1e1893\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.54081428050995,\"z\":-5.99989986419678},\"rot\":{\"x\":0.00494766561314464,\"y\":89.9983978271484,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1e79fd\":{\"lock\":false,\"pos\":{\"x\":0.5,\"y\":1.5211,\"z\":22.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1ea2c4\":{\"lock\":false,\"pos\":{\"x\":0.5,\"y\":1.5067,\"z\":18},\"rot\":{\"x\":0.0097,\"y\":119.9912,\"z\":359.993},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"1f3113\":{\"lock\":false,\"pos\":{\"x\":18,\"y\":1.5029,\"z\":6},\"rot\":{\"x\":-0.0042,\"y\":45,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"20b764\":{\"lock\":false,\"pos\":{\"x\":-29.5002,\"y\":1.8006,\"z\":2.4998},\"rot\":{\"x\":0,\"y\":89.9994,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"219139\":{\"lock\":false,\"pos\":{\"x\":-30.5000076293945,\"y\":1.77885723114014,\"z\":3.99999165534973},\"rot\":{\"x\":-5.00305395689793E-06,\"y\":179.986145019531,\"z\":2.75832348961558E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"23a9e6\":{\"lock\":false,\"pos\":{\"x\":-7,\"y\":1.50540482997894,\"z\":8},\"rot\":{\"x\":0.0108898729085922,\"y\":180.020477294922,\"z\":0.00495605310425162},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"259f05\":{\"lock\":false,\"pos\":{\"x\":23.5001010894775,\"y\":1.51380920410156,\"z\":-5.50000715255737},\"rot\":{\"x\":0.0108915250748396,\"y\":180.00080871582,\"z\":0.00494818016886711},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"26b179\":{\"lock\":false,\"pos\":{\"x\":-29,\"y\":1.7789,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180.0005,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"27a3e1\":{\"lock\":false,\"pos\":{\"x\":-34.0002,\"y\":1.8151,\"z\":8.4998},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"282840\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.5193,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":180.0161,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"283e30\":{\"lock\":false,\"pos\":{\"x\":-26.898,\"y\":1.8288,\"z\":24.0002},\"rot\":{\"x\":0,\"y\":179.9908,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"28f6a4\":{\"lock\":false,\"pos\":{\"x\":-1.5,\"y\":1.5201,\"z\":0.5},\"rot\":{\"x\":0,\"y\":180.012,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"29f34e\":{\"lock\":false,\"pos\":{\"x\":-23.0001,\"y\":1.7789,\"z\":4.4999},\"rot\":{\"x\":0,\"y\":180.0021,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2c8685\":{\"lock\":false,\"pos\":{\"x\":-9.5,\"y\":1.51989078521729,\"z\":11.5},\"rot\":{\"x\":0.0108917085453868,\"y\":179.998153686523,\"z\":0.00494794454425573},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2da9ab\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.5049,\"z\":11.5},\"rot\":{\"x\":359.9891,\"y\":359.9896,\"z\":-0.0049},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"2de00b\":{\"lock\":false,\"pos\":{\"x\":-30.5002,\"y\":1.7789,\"z\":4.4998},\"rot\":{\"x\":0,\"y\":179.9998,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2e37c4\":{\"lock\":false,\"pos\":{\"x\":5.0595,\"y\":1.5195,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2ef39e\":{\"lock\":false,\"pos\":{\"x\":-34,\"y\":1.8054,\"z\":3.5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2efca1\":{\"lock\":false,\"pos\":{\"x\":16,\"y\":1.5185,\"z\":15.9993},\"rot\":{\"x\":0.0109,\"y\":179.3915,\"z\":0.0048},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2efd37\":{\"lock\":false,\"pos\":{\"x\":-5.50000047683716,\"y\":0.969936311244965,\"z\":45},\"rot\":{\"x\":1.37537026603241E-05,\"y\":180.026214599609,\"z\":-5.97205580561422E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2fc6f3\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5053,\"z\":10.5},\"rot\":{\"x\":-0.0049,\"y\":270.003,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"30684d\":{\"lock\":false,\"pos\":{\"x\":-60.5,\"y\":0.9822,\"z\":23.5},\"rot\":{\"x\":0.0048,\"y\":180.0108,\"z\":-0.0015}},\"319cd6\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5364,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":89.996,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"35a7d5\":{\"lock\":false,\"pos\":{\"x\":-23,\"y\":1.7789,\"z\":21.5},\"rot\":{\"x\":0,\"y\":180.0151,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3975c8\":{\"lock\":false,\"pos\":{\"x\":-7.5,\"y\":1.5201,\"z\":12.5},\"rot\":{\"x\":0,\"y\":180.0096,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3a0b17\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":27},\"rot\":{\"x\":0,\"y\":180.0036,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3a93d1\":{\"lock\":false,\"pos\":{\"x\":1,\"y\":1.5169,\"z\":0.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3ab510\":{\"lock\":false,\"pos\":{\"x\":-6.99999809265137,\"y\":1.51967489719391,\"z\":11.5},\"rot\":{\"x\":0.0108913611620665,\"y\":180.001907348633,\"z\":0.00494851218536496},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3abdac\":{\"lock\":false,\"pos\":{\"x\":-27.5,\"y\":1.7789,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3bb31a\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.5176,\"z\":7},\"rot\":{\"x\":0.0109,\"y\":180.0001,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3bcad3\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.5054,\"z\":14.5},\"rot\":{\"x\":0.0112,\"y\":135,\"z\":-0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3dc101\":{\"lock\":false,\"pos\":{\"x\":16.9836,\"y\":1.5201,\"z\":12.9902},\"rot\":{\"x\":0,\"y\":179.9908,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3e7375\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":10.5},\"rot\":{\"x\":0,\"y\":180.0037,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3ebb99\":{\"lock\":false,\"pos\":{\"x\":-32,\"y\":1.7789,\"z\":12.5},\"rot\":{\"x\":0,\"y\":180.0008,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3ebbf6\":{\"lock\":false,\"pos\":{\"x\":3.5000011920929,\"y\":0.969945669174194,\"z\":45},\"rot\":{\"x\":1.37388806251693E-05,\"y\":180.023529052734,\"z\":-5.99793893343303E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"418388\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.65692222118378,\"z\":-3},\"rot\":{\"x\":-0.000591028132475913,\"y\":180.000991821289,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"41928b\":{\"lock\":false,\"pos\":{\"x\":-22.001,\"y\":1.8353,\"z\":10.0009},\"rot\":{\"x\":0,\"y\":179.9714,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"43be5c\":{\"lock\":false,\"pos\":{\"x\":3.5,\"y\":1.5028,\"z\":-1},\"rot\":{\"x\":0.005,\"y\":90.0255,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"444795\":{\"lock\":false,\"pos\":{\"x\":-25.5,\"y\":1.7789,\"z\":8.5},\"rot\":{\"x\":0,\"y\":179.9851,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"44b0c5\":{\"lock\":false,\"pos\":{\"x\":14,\"y\":1.5043,\"z\":11.5},\"rot\":{\"x\":-0.0049,\"y\":270,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"44ca63\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5057,\"z\":12.5},\"rot\":{\"x\":-0.0012,\"y\":60.0001,\"z\":359.9881},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"44e5c2\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5187,\"z\":12},\"rot\":{\"x\":0.0109,\"y\":180.0167,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"453f78\":{\"lock\":false,\"pos\":{\"x\":-6.99999809265137,\"y\":1.52100551128387,\"z\":18.5},\"rot\":{\"x\":0.010891349054873,\"y\":180.001693725586,\"z\":0.00494855223223567},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"462b79\":{\"lock\":false,\"pos\":{\"x\":-21.9999,\"y\":1.8288,\"z\":24.0001},\"rot\":{\"x\":0,\"y\":179.9915,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"464e31\":{\"lock\":false,\"pos\":{\"x\":12,\"y\":1.5201,\"z\":22.5},\"rot\":{\"x\":0,\"y\":180.0123,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"46de24\":{\"lock\":false,\"pos\":{\"x\":-7,\"y\":1.5198,\"z\":12},\"rot\":{\"x\":0.0109,\"y\":179.9993,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4763ba\":{\"lock\":false,\"pos\":{\"x\":-21.5002,\"y\":1.7789,\"z\":3.4997},\"rot\":{\"x\":0,\"y\":180.0022,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"47d6f7\":{\"lock\":false,\"pos\":{\"x\":-7.00000047683716,\"y\":1.50673544406891,\"z\":15},\"rot\":{\"x\":0.0108897872269154,\"y\":180.020553588867,\"z\":0.00495636276900768},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"483a34\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.5022,\"z\":-1},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"497aa9\":{\"lock\":false,\"pos\":{\"x\":14.9532,\"y\":1.5201,\"z\":23.5901},\"rot\":{\"x\":0,\"y\":178.862,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4b176b\":{\"lock\":false,\"pos\":{\"x\":23.5001,\"y\":1.5138,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":180.0006,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4badac\":{\"lock\":false,\"pos\":{\"x\":10,\"y\":1.5068,\"z\":23},\"rot\":{\"x\":0.0049,\"y\":90.0001,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4d9bd7\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.50528502464294,\"z\":18.5},\"rot\":{\"x\":0.00494773918762803,\"y\":90.0002975463867,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4e340d\":{\"lock\":false,\"pos\":{\"x\":-32.0002,\"y\":1.8054,\"z\":3.4999},\"rot\":{\"x\":0,\"y\":180.009,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4e84af\":{\"lock\":false,\"pos\":{\"x\":-10,\"y\":0.969931542873383,\"z\":45},\"rot\":{\"x\":1.37747392727761E-05,\"y\":180.025604248047,\"z\":-5.99330123804975E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"4ef076\":{\"lock\":false,\"pos\":{\"x\":20,\"y\":1.5046,\"z\":16},\"rot\":{\"x\":0.0049,\"y\":90.0052,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4fcd01\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.506,\"z\":17.5},\"rot\":{\"x\":-0.0012,\"y\":60.0179,\"z\":359.9881},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"502f4f\":{\"lock\":false,\"pos\":{\"x\":-22.5,\"y\":1.7789,\"z\":4.5},\"rot\":{\"x\":0,\"y\":179.968,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5338a5\":{\"lock\":false,\"pos\":{\"x\":8.00000095367432,\"y\":0.969950318336487,\"z\":45},\"rot\":{\"x\":1.37743436425808E-05,\"y\":180.023071289063,\"z\":-5.9762747696368E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"53ebe8\":{\"lock\":false,\"pos\":{\"x\":-21.507,\"y\":1.7662,\"z\":16.148},\"rot\":{\"x\":0.0002,\"y\":359.9875,\"z\":-0.0009},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"555443\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5364,\"z\":-5.9998},\"rot\":{\"x\":0.005,\"y\":90.0111,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5559ff\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.5035,\"z\":6},\"rot\":{\"x\":-0.0042,\"y\":44.9737,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"55ce4f\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.50404930114746,\"z\":12},\"rot\":{\"x\":359.990264892578,\"y\":299.999694824219,\"z\":0.00696407351642847},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5747c6\":{\"lock\":false,\"pos\":{\"x\":18,\"y\":1.5051,\"z\":17.5},\"rot\":{\"x\":359.9888,\"y\":314.9999,\"z\":0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"577413\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5201,\"z\":22.5},\"rot\":{\"x\":0,\"y\":180.0135,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5915f7\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5412,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":90.0009,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5953bc\":{\"lock\":false,\"pos\":{\"x\":-6,\"y\":1.5062,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":180.0206,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5ae079\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9608,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"5b52fc\":{\"lock\":false,\"pos\":{\"x\":-25.5,\"y\":1.7789,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180.0014,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5bcebd\":{\"lock\":false,\"pos\":{\"x\":-27.4931,\"y\":1.7788,\"z\":24.0001},\"rot\":{\"x\":0.0001,\"y\":179.9916,\"z\":-0.0008},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5c303b\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.52005553245544,\"z\":18.5000038146973},\"rot\":{\"x\":0.0108912903815508,\"y\":180.00163269043,\"z\":0.00494860718026757},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5d5269\":{\"lock\":false,\"pos\":{\"x\":-34.5004,\"y\":1.7789,\"z\":2.9997},\"rot\":{\"x\":0,\"y\":180.0265,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5e20af\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5068,\"z\":19.5},\"rot\":{\"x\":359.9888,\"y\":315.0097,\"z\":0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"618c13\":{\"lock\":false,\"pos\":{\"x\":-28.5005,\"y\":1.7789,\"z\":3.4995},\"rot\":{\"x\":0,\"y\":180.002,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"61f6d6\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5201,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":180.0014,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"684060\":{\"lock\":false,\"pos\":{\"x\":-48.5,\"y\":0.9825,\"z\":23.5},\"rot\":{\"x\":0.0048,\"y\":180.0151,\"z\":-0.0015}},\"687683\":{\"lock\":false,\"pos\":{\"x\":33.2985000610352,\"y\":1.47985982894897,\"z\":11.9968004226685},\"rot\":{\"x\":-1.82769941403649E-08,\"y\":180.001205444336,\"z\":-1.95206606434795E-08},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"69221b\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7676,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180.0002,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6b2b52\":{\"lock\":false,\"pos\":{\"x\":23.5001,\"y\":1.5138,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":180.0057,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6d62ef\":{\"lock\":false,\"pos\":{\"x\":-21.3979,\"y\":1.7789,\"z\":24.0002},\"rot\":{\"x\":0,\"y\":179.9913,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6d7ffc\":{\"lock\":false,\"pos\":{\"x\":-21,\"y\":1.8054,\"z\":14.5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6f06f5\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":1.5071,\"z\":22.5},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"70a53a\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.7789,\"z\":21.5},\"rot\":{\"x\":0,\"y\":179.9825,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"70c3a6\":{\"lock\":false,\"pos\":{\"x\":-1.00000035762787,\"y\":0.969940960407257,\"z\":45},\"rot\":{\"x\":1.36963199111051E-05,\"y\":180.025039672852,\"z\":-5.96587378822733E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"70e81a\":{\"lock\":false,\"pos\":{\"x\":17,\"y\":0.969959616661072,\"z\":45},\"rot\":{\"x\":1.3798322470393E-05,\"y\":180.023239135742,\"z\":-5.97177240706515E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5042,\"z\":7},\"rot\":{\"x\":0.0109,\"y\":180.0205,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7312da\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.5312,\"z\":-5.9998},\"rot\":{\"x\":0.0049,\"y\":90.005,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7594f1\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":0.969955086708069,\"z\":45},\"rot\":{\"x\":1.37150018417742E-05,\"y\":180.023239135742,\"z\":-5.96891695749946E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"76346f\":{\"lock\":false,\"pos\":{\"x\":23.5001,\"y\":1.5138,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7705b1\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5064,\"z\":16},\"rot\":{\"x\":0.0049,\"y\":90.0001,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"770dc6\":{\"lock\":false,\"pos\":{\"x\":-23.1384,\"y\":1.7663,\"z\":29.1792},\"rot\":{\"x\":0,\"y\":0.0005,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"78362e\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.5067,\"z\":21},\"rot\":{\"x\":359.9891,\"y\":359.9896,\"z\":-0.0049},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"78fbe5\":{\"lock\":false,\"pos\":{\"x\":-19.5028,\"y\":1.8353,\"z\":10.0018},\"rot\":{\"x\":0,\"y\":179.9715,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"7911d4\":{\"lock\":false,\"pos\":{\"x\":-18.5,\"y\":1.47985994815826,\"z\":-4.99730014801025},\"rot\":{\"x\":-2.43668381472162E-07,\"y\":180.008102416992,\"z\":5.03021659881142E-08},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"7a97a0\":{\"lock\":false,\"pos\":{\"x\":-23,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9718,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"7aacde\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.502,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":180.013,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"7d1653\":{\"lock\":false,\"pos\":{\"x\":-29,\"y\":1.7789,\"z\":8.5},\"rot\":{\"x\":0,\"y\":179.9909,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7e39d0\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.7789,\"z\":26},\"rot\":{\"x\":0,\"y\":180.0148,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"82a9d3\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5059,\"z\":17.5},\"rot\":{\"x\":-0.0042,\"y\":45.0001,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"837206\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5029,\"z\":0.5},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"84b664\":{\"lock\":false,\"pos\":{\"x\":-32.155,\"y\":1.7663,\"z\":11.3666},\"rot\":{\"x\":0,\"y\":0.0368,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"85249f\":{\"lock\":false,\"pos\":{\"x\":3.9422,\"y\":1.5201,\"z\":0.5734},\"rot\":{\"x\":0,\"y\":179.1233,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"868ba5\":{\"lock\":false,\"pos\":{\"x\":22.9999,\"y\":1.5172,\"z\":12},\"rot\":{\"x\":0.0109,\"y\":179.9961,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"87c21f\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.5053,\"z\":16},\"rot\":{\"x\":-0.0049,\"y\":269.995,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"888c37\":{\"lock\":false,\"pos\":{\"x\":-2.0001,\"y\":1.5059,\"z\":12.9997},\"rot\":{\"x\":359.9891,\"y\":359.9792,\"z\":-0.0049},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"89f177\":{\"lock\":false,\"pos\":{\"x\":-19.5018,\"y\":1.8353,\"z\":13.501},\"rot\":{\"x\":0,\"y\":179.9726,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"8a388a\":{\"lock\":false,\"pos\":{\"x\":-32.0008,\"y\":1.7789,\"z\":3.4993},\"rot\":{\"x\":0,\"y\":180.0036,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8caffb\":{\"lock\":false,\"pos\":{\"x\":-21,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9718,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"8e90ff\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.5312,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8f51ad\":{\"lock\":false,\"pos\":{\"x\":-30.5,\"y\":1.8103,\"z\":9.0001},\"rot\":{\"x\":0,\"y\":180.0017,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9105d6\":{\"lock\":false,\"pos\":{\"x\":15,\"y\":1.5055,\"z\":18.5},\"rot\":{\"x\":0.0109,\"y\":180.0204,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"910c66\":{\"lock\":false,\"pos\":{\"x\":-4,\"y\":1.5192,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":179.9825,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"93ac98\":{\"lock\":false,\"pos\":{\"x\":-23,\"y\":1.8353,\"z\":13.5},\"rot\":{\"x\":0,\"y\":179.9727,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"9474c4\":{\"lock\":false,\"pos\":{\"x\":23.5002,\"y\":1.5138,\"z\":-5.5001},\"rot\":{\"x\":0.0109,\"y\":179.9855,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"94d30e\":{\"lock\":false,\"pos\":{\"x\":15.5,\"y\":1.5169,\"z\":7},\"rot\":{\"x\":0.0109,\"y\":180.0005,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9554e4\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7773,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180.0013,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"95e2ed\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.5047,\"z\":12.5},\"rot\":{\"x\":0.0097,\"y\":120,\"z\":359.993},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"95ee07\":{\"lock\":false,\"pos\":{\"x\":-23.5,\"y\":1.7789,\"z\":21.5},\"rot\":{\"x\":0,\"y\":180.0086,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"966926\":{\"lock\":false,\"pos\":{\"x\":0.5,\"y\":1.5059,\"z\":14},\"rot\":{\"x\":-0.0042,\"y\":44.9946,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"96df71\":{\"lock\":false,\"pos\":{\"x\":-27,\"y\":1.7789,\"z\":21.5},\"rot\":{\"x\":0,\"y\":179.9966,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"97b1ca\":{\"lock\":false,\"pos\":{\"x\":-9.5,\"y\":1.5201,\"z\":12},\"rot\":{\"x\":0,\"y\":180.0047,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"98e04b\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.536,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":90.005,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9c34eb\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.5408,\"z\":-5.9998},\"rot\":{\"x\":0.0049,\"y\":89.9941,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9c60ac\":{\"lock\":false,\"pos\":{\"x\":-23.0001258850098,\"y\":1.80062508583069,\"z\":4.00167036056519},\"rot\":{\"x\":-4.92420076625422E-06,\"y\":179.986129760742,\"z\":1.89665216865365E-09},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9eee13\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.5155,\"z\":-1},\"rot\":{\"x\":0.0109,\"y\":179.9997,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9fea68\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7339,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180.0003,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a1b79c\":{\"lock\":false,\"pos\":{\"x\":-68.5,\"y\":0.982,\"z\":23.5},\"rot\":{\"x\":0.0048,\"y\":179.9999,\"z\":-0.0015}},\"a22db0\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.5077,\"z\":25},\"rot\":{\"x\":0.0049,\"y\":89.9915,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a2cc1c\":{\"lock\":false,\"pos\":{\"x\":-1.50000071525574,\"y\":1.50626051425934,\"z\":15},\"rot\":{\"x\":-0.0011610466754064,\"y\":60.0000076293945,\"z\":359.988098144531},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a35225\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9912,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a4a074\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5046,\"z\":6},\"rot\":{\"x\":0.0112,\"y\":135.0138,\"z\":-0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a5838a\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5069,\"z\":20},\"rot\":{\"x\":0.0119,\"y\":150,\"z\":-0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a5e1e5\":{\"lock\":false,\"pos\":{\"x\":13.0000047683716,\"y\":1.51927828788757,\"z\":18.5},\"rot\":{\"x\":0.0108914710581303,\"y\":179.999710083008,\"z\":0.00494820764288306},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a6dd2a\":{\"lock\":false,\"pos\":{\"x\":15.0688,\"y\":1.5201,\"z\":4.4892},\"rot\":{\"x\":0,\"y\":180.1766,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a730db\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5364,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a7c7d2\":{\"lock\":false,\"pos\":{\"x\":-22.0034,\"y\":1.8353,\"z\":13.5027},\"rot\":{\"x\":0,\"y\":179.9997,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"a7c9c0\":{\"lock\":false,\"pos\":{\"x\":-12,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9913,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a8be35\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.5312,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":90.0016,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a97712\":{\"lock\":false,\"pos\":{\"x\":-26.8502,\"y\":1.7663,\"z\":11.8679},\"rot\":{\"x\":0,\"y\":0,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"a9ecc5\":{\"lock\":false,\"pos\":{\"x\":-32.0001,\"y\":1.7789,\"z\":4.4999},\"rot\":{\"x\":0,\"y\":180.0153,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"aaf560\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.521,\"z\":25},\"rot\":{\"x\":0.0109,\"y\":180.0058,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ad9452\":{\"lock\":false,\"pos\":{\"x\":-27,\"y\":1.7789,\"z\":26},\"rot\":{\"x\":0,\"y\":180.0098,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"adc143\":{\"lock\":false,\"pos\":{\"x\":-19.5000057220459,\"y\":1.81988120079041,\"z\":4.00139284133911},\"rot\":{\"x\":-5.16676846018527E-06,\"y\":180.018402099609,\"z\":6.49451010303892E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ae6a50\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7051,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180.0017,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"afe7ce\":{\"lock\":false,\"pos\":{\"x\":-56.5,\"y\":0.9823,\"z\":23.5},\"rot\":{\"x\":0.0048,\"y\":180.0001,\"z\":-0.0015}},\"b1d0de\":{\"lock\":false,\"pos\":{\"x\":-72.4996,\"y\":0.9819,\"z\":23.5002},\"rot\":{\"x\":0.0048,\"y\":180.0103,\"z\":-0.0015}},\"b302b7\":{\"lock\":false,\"pos\":{\"x\":-6.5,\"y\":1.5072,\"z\":17.5},\"rot\":{\"x\":-0.0042,\"y\":45.0001,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"b31ae7\":{\"lock\":false,\"pos\":{\"x\":23.5001,\"y\":1.5138,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":179.9818,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b3c682\":{\"lock\":false,\"pos\":{\"x\":-24.502,\"y\":1.8353,\"z\":10.0025},\"rot\":{\"x\":0,\"y\":179.9721,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"b3fd28\":{\"lock\":false,\"pos\":{\"x\":12.5000019073486,\"y\":1.53643202781677,\"z\":-5.99991130828857},\"rot\":{\"x\":0.00494830962270498,\"y\":90.0022888183594,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b4cb94\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":1.5182,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180.0003,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b526e3\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9718,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"b80c83\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5316,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":90.0021,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b98f52\":{\"lock\":false,\"pos\":{\"x\":-23,\"y\":1.7789,\"z\":26},\"rot\":{\"x\":0,\"y\":180.0133,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ba3cb2\":{\"lock\":false,\"pos\":{\"x\":-23,\"y\":1.7789,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ba75c0\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9718,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"beaa6e\":{\"lock\":false,\"pos\":{\"x\":-1.5,\"y\":1.507,\"z\":19},\"rot\":{\"x\":-0.0042,\"y\":44.9882,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"bf8897\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.8353,\"z\":13.5},\"rot\":{\"x\":0,\"y\":179.9748,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"bfc6f0\":{\"lock\":false,\"pos\":{\"x\":-6.99999952316284,\"y\":1.51834416389465,\"z\":4.5},\"rot\":{\"x\":0.0108912419527769,\"y\":180.003326416016,\"z\":0.00494893873110414},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"bfd0f7\":{\"lock\":false,\"pos\":{\"x\":9.5,\"y\":1.5048,\"z\":12.5},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"c06148\":{\"lock\":false,\"pos\":{\"x\":-19,\"y\":1.7789,\"z\":21.5},\"rot\":{\"x\":0,\"y\":180.0116,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c078a5\":{\"lock\":false,\"pos\":{\"x\":-34.0002,\"y\":1.7789,\"z\":4.4998},\"rot\":{\"x\":0,\"y\":179.9998,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c17b6c\":{\"lock\":false,\"pos\":{\"x\":-21.5793,\"y\":1.7673,\"z\":15.2138},\"rot\":{\"x\":359.881,\"y\":359.9839,\"z\":0.0001},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"c1ffb8\":{\"lock\":false,\"pos\":{\"x\":14.99,\"y\":1.5201,\"z\":12.5106},\"rot\":{\"x\":0,\"y\":179.8383,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c37089\":{\"lock\":false,\"pos\":{\"x\":-32.0001,\"y\":1.7789,\"z\":8.4999},\"rot\":{\"x\":0,\"y\":180.0167,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c4586b\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7243,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180.0005,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c46ba3\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.5408,\"z\":-5.9999},\"rot\":{\"x\":0.0049,\"y\":90.0022,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c51b95\":{\"lock\":false,\"pos\":{\"x\":16,\"y\":1.5029,\"z\":5.5},\"rot\":{\"x\":359.9891,\"y\":0,\"z\":-0.0049},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"c56db4\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5058,\"z\":12.5},\"rot\":{\"x\":0.0049,\"y\":90.0001,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"c6ab70\":{\"lock\":false,\"pos\":{\"x\":16,\"y\":1.5185,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":180.0003,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c7e721\":{\"lock\":false,\"pos\":{\"x\":-25.0004,\"y\":1.7789,\"z\":3.4996},\"rot\":{\"x\":0,\"y\":180.0016,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c8ca62\":{\"lock\":false,\"pos\":{\"x\":-20.0380992889404,\"y\":1.76625156402588,\"z\":11.6698999404907},\"rot\":{\"x\":5.10272820974933E-06,\"y\":0.0323603078722954,\"z\":3.26922822146969E-09},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"caf9d1\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.50652062892914,\"z\":25},\"rot\":{\"x\":-0.00116098835133016,\"y\":60.0000991821289,\"z\":359.988098144531},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"cbab46\":{\"lock\":false,\"pos\":{\"x\":-23.0000038146973,\"y\":1.77885675430298,\"z\":8.99999046325684},\"rot\":{\"x\":-4.98563213113812E-06,\"y\":180.000045776367,\"z\":2.9715167215727E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"cbdef8\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5054,\"z\":12.5},\"rot\":{\"x\":-0.0042,\"y\":44.9995,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"cdb67c\":{\"lock\":false,\"pos\":{\"x\":-20.2869,\"y\":1.7663,\"z\":11.4502},\"rot\":{\"x\":0,\"y\":359.9768,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"cff541\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5068,\"z\":17.0008},\"rot\":{\"x\":0.0109,\"y\":180.0023,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d0fc2c\":{\"lock\":false,\"pos\":{\"x\":-34.0002,\"y\":1.8103,\"z\":12.4998},\"rot\":{\"x\":0,\"y\":179.9954,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d19c9f\":{\"lock\":false,\"pos\":{\"x\":-24.2854,\"y\":1.7663,\"z\":26.8808},\"rot\":{\"x\":0,\"y\":0.0002,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"d21349\":{\"lock\":false,\"pos\":{\"x\":-22.5002,\"y\":1.8006,\"z\":2.4999},\"rot\":{\"x\":0,\"y\":89.9978,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d2e6e8\":{\"lock\":false,\"pos\":{\"x\":-6,\"y\":1.5191,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180.0003,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d45a71\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.5037,\"z\":3.5},\"rot\":{\"x\":-0.0042,\"y\":45.0047,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d6e449\":{\"lock\":false,\"pos\":{\"x\":-64.5,\"y\":0.9821,\"z\":23.5},\"rot\":{\"x\":0.0048,\"y\":180.0148,\"z\":-0.0015}},\"d87cdb\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9912,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d8c6a2\":{\"lock\":false,\"pos\":{\"x\":-20.7245,\"y\":1.7663,\"z\":11.8366},\"rot\":{\"x\":0,\"y\":0.0003,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"d9bd42\":{\"lock\":false,\"pos\":{\"x\":-26.0002,\"y\":1.8006,\"z\":2.4998},\"rot\":{\"x\":0,\"y\":90.0074,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"da039d\":{\"lock\":false,\"pos\":{\"x\":3.9804,\"y\":1.5195,\"z\":15.501},\"rot\":{\"x\":0.0109,\"y\":179.9996,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"db182f\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.5201,\"z\":1},\"rot\":{\"x\":0,\"y\":180.0117,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"db953a\":{\"lock\":false,\"pos\":{\"x\":-25.5501,\"y\":1.835,\"z\":10.0275},\"rot\":{\"x\":0.0108,\"y\":179.945,\"z\":359.9792},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"df5b1f\":{\"lock\":false,\"pos\":{\"x\":-24.5028,\"y\":1.8353,\"z\":13.5029},\"rot\":{\"x\":0,\"y\":179.9714,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"dfa75b\":{\"lock\":false,\"pos\":{\"x\":21.5,\"y\":0.969964265823364,\"z\":45},\"rot\":{\"x\":1.37579154397827E-05,\"y\":180.023239135742,\"z\":-5.96268182562198E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e12a62\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.7789,\"z\":23},\"rot\":{\"x\":0,\"y\":180.0111,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e191a7\":{\"lock\":false,\"pos\":{\"x\":-23.5,\"y\":1.7789,\"z\":26},\"rot\":{\"x\":0,\"y\":179.9993,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e23149\":{\"lock\":false,\"pos\":{\"x\":14.9999,\"y\":1.5199,\"z\":22.5},\"rot\":{\"x\":0.0109,\"y\":179.9995,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e2ee03\":{\"lock\":false,\"pos\":{\"x\":16,\"y\":1.5157,\"z\":1},\"rot\":{\"x\":0.0109,\"y\":179.9995,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e39d20\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":18.5},\"rot\":{\"x\":0,\"y\":180.0074,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e57ccb\":{\"lock\":false,\"pos\":{\"x\":-1.50000071525574,\"y\":1.50692582130432,\"z\":18.5},\"rot\":{\"x\":0.00494775455445051,\"y\":90.0002746582031,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e59274\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.7789,\"z\":4.4999},\"rot\":{\"x\":0,\"y\":180.0011,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e7750b\":{\"lock\":false,\"pos\":{\"x\":15.5,\"y\":1.5041,\"z\":11.5},\"rot\":{\"x\":359.9891,\"y\":359.9897,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e7aa28\":{\"lock\":false,\"pos\":{\"x\":-28.0001,\"y\":1.8103,\"z\":3.4999},\"rot\":{\"x\":0,\"y\":180.0087,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e8cde0\":{\"lock\":false,\"pos\":{\"x\":-27.5000076293945,\"y\":1.77885723114014,\"z\":3.99999117851257},\"rot\":{\"x\":-5.02995817441843E-06,\"y\":179.986312866211,\"z\":-1.40684406346736E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"eaced4\":{\"lock\":false,\"pos\":{\"x\":-19.5,\"y\":1.7789,\"z\":26},\"rot\":{\"x\":0,\"y\":180.0056,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ebd824\":{\"lock\":false,\"pos\":{\"x\":-22.102,\"y\":1.7663,\"z\":25.5858},\"rot\":{\"x\":0,\"y\":0.0001,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"ebdf49\":{\"lock\":false,\"pos\":{\"x\":-34.4995,\"y\":1.8006,\"z\":7.5002},\"rot\":{\"x\":0,\"y\":179.9875,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ed0d92\":{\"lock\":false,\"pos\":{\"x\":23.5001,\"y\":1.5138,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":179.9968,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ee1de1\":{\"lock\":false,\"pos\":{\"x\":-77,\"y\":0.9818,\"z\":23.5},\"rot\":{\"x\":0.0048,\"y\":179.9909,\"z\":-0.0015}},\"f07c33\":{\"lock\":false,\"pos\":{\"x\":-24,\"y\":1.7789,\"z\":23},\"rot\":{\"x\":0,\"y\":180.0016,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f3a917\":{\"lock\":false,\"pos\":{\"x\":-34,\"y\":1.7789,\"z\":9},\"rot\":{\"x\":0,\"y\":180.0002,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f43d73\":{\"lock\":false,\"pos\":{\"x\":-7,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9913,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f4527f\":{\"lock\":false,\"pos\":{\"x\":5.0008,\"y\":1.5039,\"z\":5.5},\"rot\":{\"x\":359.9891,\"y\":0.1518,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"f59531\":{\"lock\":false,\"pos\":{\"x\":4.1081,\"y\":1.5201,\"z\":23.5402},\"rot\":{\"x\":0,\"y\":179.3325,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f81b6d\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5061,\"z\":16},\"rot\":{\"x\":-0.0049,\"y\":269.995,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"f94ecf\":{\"lock\":false,\"pos\":{\"x\":4.143,\"y\":1.5201,\"z\":12.5683},\"rot\":{\"x\":0,\"y\":179.9961,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fa26f3\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7195,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180.0009,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fa4366\":{\"lock\":false,\"pos\":{\"x\":11,\"y\":1.503,\"z\":3.5},\"rot\":{\"x\":359.9888,\"y\":314.9902,\"z\":0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"fb669f\":{\"lock\":false,\"pos\":{\"x\":-26.5,\"y\":1.7789,\"z\":21.5},\"rot\":{\"x\":0,\"y\":180.0118,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fcc23e\":{\"lock\":false,\"pos\":{\"x\":20.5,\"y\":1.5201,\"z\":12},\"rot\":{\"x\":0,\"y\":179.9999,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fccb36\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5167,\"z\":-1},\"rot\":{\"x\":0.0109,\"y\":180.0003,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fd97c4\":{\"lock\":false,\"pos\":{\"x\":-6,\"y\":1.5048,\"z\":5.5},\"rot\":{\"x\":359.9888,\"y\":315.0002,\"z\":0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"fdfeeb\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.519,\"z\":10},\"rot\":{\"x\":0.0109,\"y\":180.0045,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fedcda\":{\"lock\":false,\"pos\":{\"x\":16,\"y\":1.5172,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180.0001,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ff2fa7\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.5161,\"z\":-1},\"rot\":{\"x\":0.0109,\"y\":179.9918,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ff8177\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.8353,\"z\":13.5},\"rot\":{\"x\":0,\"y\":179.9723,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}}}}","XmlUI":"","ContainedObjects":[{"GUID":"2efd37","Name":"Custom_Model_Bag","Transform":{"posX":-5.500002,"posY":0.9799975,"posZ":45,"rotX":-0.0000050403446,"rotY":180.026184,"rotZ":7.72448061e-7,"scaleX":1.20052135,"scaleY":0.249882281,"scaleZ":1.3145982},"Nickname":"I-B : La Banque Gagne Toujours","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1991184321466654109/F162DCE8476E89A6B4AB9D2FD7B30DEBFEE9C6B6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"14e498\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.8353009223938,\"z\":9.50000095367432},\"rot\":{\"x\":-4.44137822341872E-06,\"y\":179.972015380859,\"z\":-4.77810317534022E-07},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"1e1893\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.54081428050995,\"z\":-5.99989986419678},\"rot\":{\"x\":0.00494778715074062,\"y\":89.9983978271484,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"219139\":{\"lock\":false,\"pos\":{\"x\":-30.5000114440918,\"y\":1.77890622615814,\"z\":3.99998831748962},\"rot\":{\"x\":-5.02628154208651E-06,\"y\":179.986129760742,\"z\":1.1686079659512E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"23a9e6\":{\"lock\":false,\"pos\":{\"x\":-7,\"y\":1.50540482997894,\"z\":8},\"rot\":{\"x\":0.0108899567276239,\"y\":180.020477294922,\"z\":0.00495601957663894},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"259f05\":{\"lock\":false,\"pos\":{\"x\":23.5001010894775,\"y\":1.51380920410156,\"z\":-5.50000858306885},\"rot\":{\"x\":0.0108914095908403,\"y\":180.000762939453,\"z\":0.00494839064776897},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2c8685\":{\"lock\":false,\"pos\":{\"x\":-9.5,\"y\":1.51989078521729,\"z\":11.5},\"rot\":{\"x\":0.0108916256576777,\"y\":179.998138427734,\"z\":0.00494792684912682},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3a0b17\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":27},\"rot\":{\"x\":0,\"y\":180.0036,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3ab510\":{\"lock\":false,\"pos\":{\"x\":-6.99999809265137,\"y\":1.51967489719391,\"z\":11.5},\"rot\":{\"x\":0.010891318321228,\"y\":180.001892089844,\"z\":0.00494858762249351},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3e7375\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":10.5},\"rot\":{\"x\":0,\"y\":180.0037,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"418388\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.65692222118378,\"z\":-3},\"rot\":{\"x\":-0.000591106887441128,\"y\":180.000991821289,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"453f78\":{\"lock\":false,\"pos\":{\"x\":-6.99999809265137,\"y\":1.52100551128387,\"z\":18.5},\"rot\":{\"x\":0.0108913816511631,\"y\":180.001693725586,\"z\":0.00494859274476767},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"47d6f7\":{\"lock\":false,\"pos\":{\"x\":-7.00000095367432,\"y\":1.50673544406891,\"z\":15},\"rot\":{\"x\":0.0108898766338825,\"y\":180.0205078125,\"z\":0.00495603354647756},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4d9bd7\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.50528502464294,\"z\":18.5},\"rot\":{\"x\":0.00494793429970741,\"y\":90.0002975463867,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"55ce4f\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.50404930114746,\"z\":12},\"rot\":{\"x\":359.990264892578,\"y\":299.999694824219,\"z\":0.0069642961025238},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5c303b\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.52005553245544,\"z\":18.5000038146973},\"rot\":{\"x\":0.0108913788571954,\"y\":180.00163269043,\"z\":0.00494853453710675},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6796b4\":{\"lock\":false,\"pos\":{\"x\":-26.5000038146973,\"y\":1.83530128002167,\"z\":3.99999618530273},\"rot\":{\"x\":-7.13025929144351E-06,\"y\":179.984848022461,\"z\":1.48102961006202E-08},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":8.49999904632568,\"y\":1.50606226921082,\"z\":18.5},\"rot\":{\"x\":0.00494864443317056,\"y\":90.0042037963867,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"9c60ac\":{\"lock\":false,\"pos\":{\"x\":-23.000129699707,\"y\":1.8006739616394,\"z\":4.00166845321655},\"rot\":{\"x\":-4.78150468552485E-06,\"y\":179.986175537109,\"z\":-1.43579612199574E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a2cc1c\":{\"lock\":false,\"pos\":{\"x\":-1.50000107288361,\"y\":1.50626051425934,\"z\":15},\"rot\":{\"x\":-0.00116109754890203,\"y\":60.0000228881836,\"z\":359.988098144531},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a5e1e5\":{\"lock\":true,\"pos\":{\"x\":13.0000047683716,\"y\":1.51927828788757,\"z\":18.5},\"rot\":{\"x\":0.01089156139642,\"y\":179.999710083008,\"z\":0.00494821509346366},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"adc143\":{\"lock\":false,\"pos\":{\"x\":-19.5000057220459,\"y\":1.81993019580841,\"z\":4.00139284133911},\"rot\":{\"x\":-5.23391508977511E-06,\"y\":180.018417358398,\"z\":1.24730263451056E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b3fd28\":{\"lock\":false,\"pos\":{\"x\":12.5000028610229,\"y\":1.53643202781677,\"z\":-5.99991226196289},\"rot\":{\"x\":0.00494860345497727,\"y\":90.002311706543,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"bfc6f0\":{\"lock\":false,\"pos\":{\"x\":-6.99999952316284,\"y\":1.51834416389465,\"z\":4.5},\"rot\":{\"x\":0.0108911767601967,\"y\":180.003311157227,\"z\":0.00494892336428165},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c8ca62\":{\"lock\":false,\"pos\":{\"x\":-20.0380992889404,\"y\":1.76630055904388,\"z\":11.6698999404907},\"rot\":{\"x\":5.29111275682226E-06,\"y\":0.0323603339493275,\"z\":9.85509984730015E-08},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"caf9d1\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.50652062892914,\"z\":25},\"rot\":{\"x\":-0.00116101081948727,\"y\":60.0000991821289,\"z\":359.988098144531},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"cbab46\":{\"lock\":false,\"pos\":{\"x\":-23.0000038146973,\"y\":1.77890574932098,\"z\":8.99998950958252},\"rot\":{\"x\":-5.08798166265478E-06,\"y\":180.000076293945,\"z\":2.11650331038982E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e39d20\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":18.5},\"rot\":{\"x\":0,\"y\":180.0074,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e57ccb\":{\"lock\":false,\"pos\":{\"x\":-1.50000143051147,\"y\":1.50692582130432,\"z\":18.5},\"rot\":{\"x\":0.00494793010875583,\"y\":90.0002746582031,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}}}}","XmlUI":"","ContainedObjects":[{"GUID":"119e9a","Name":"Custom_Tile","Transform":{"posX":-5.99995947,"posY":1.24828315,"posZ":43.9999161,"rotX":359.9586,"rotY":90.0041656,"rotZ":0.08713116,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"14e498","Name":"Custom_Model_Bag","Transform":{"posX":-20,"posY":1.83530068,"posZ":9.500001,"rotX":-0.00000503486672,"rotY":179.972076,"rotZ":3.559915e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662301521665/D9C7971B00B015E1D54AD5FE31520A149C29B0C6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"3a0b17\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":27},\"rot\":{\"x\":0,\"y\":180.0036,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3e7375\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":10.5},\"rot\":{\"x\":0,\"y\":180.0037,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e39d20\":{\"lock\":false,\"pos\":{\"x\":22.5,\"y\":1.5201,\"z\":18.5},\"rot\":{\"x\":0,\"y\":180.0074,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"3a0b17","Name":"Card","Transform":{"posX":22.5000114,"posY":1.52007365,"posZ":26.9999924,"rotX":0.0108911963,"rotY":180.00383,"rotZ":0.004948852,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Porte de Derrière","Description":"Club du Trèfle.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02075\",\n  \"locationBack\": {\n    \"connections\": \"Diamond\",\n    \"icons\": \"Hourglass\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond\",\n    \"icons\": \"Tee\"\n  },\n  \"traits\": \"Clover Club.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116910,"SidewaysCard":false,"CustomDeck":{"1169":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3e7375","Name":"Card","Transform":{"posX":22.5000038,"posY":1.51845789,"posZ":18.4999981,"rotX":0.0108911972,"rotY":180.003586,"rotZ":0.00494894059,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Porte de Derrière","Description":"Club du Trèfle.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02076\",\n  \"locationBack\": {\n    \"connections\": \"Diamond\",\n    \"icons\": \"Plus\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond\",\n    \"icons\": \"Tee\"\n  },\n  \"traits\": \"Clover Club.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116909,"SidewaysCard":false,"CustomDeck":{"1169":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e39d20","Name":"Card","Transform":{"posX":22.5000019,"posY":1.51693714,"posZ":10.4999981,"rotX":0.0108908676,"rotY":180.007309,"rotZ":0.00494966749,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Porte de Derrière","Description":"Club du Trèfle.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02077\",\n  \"locationBack\": {\n    \"connections\": \"Diamond\",\n    \"icons\": \"Tilde\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond\",\n    \"icons\": \"Tee\"\n  },\n  \"traits\": \"Clover Club.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116908,"SidewaysCard":false,"CustomDeck":{"1169":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"1e1893","Name":"Deck","Transform":{"posX":17.5,"posY":1.54081428,"posZ":-5.999899,"rotX":0.00494780252,"rotY":89.9984,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte","Description":"La Banque Gagne Toujours","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[14502,14503,14501,14500],"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"0cf38e","Name":"Card","Transform":{"posX":17.5,"posY":4.996218,"posZ":-5.99989748,"rotX":0.00494765257,"rotY":89.99839,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Repli","Description":"Acte 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02069\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14502,"SidewaysCard":true,"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3d7816","Name":"Card","Transform":{"posX":17.5,"posY":4.796218,"posZ":-5.99989748,"rotX":0.00494765257,"rotY":89.99839,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Tout Compris","Description":"Acte 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02068\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14503,"SidewaysCard":true,"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"48223c","Name":"Card","Transform":{"posX":17.5000019,"posY":1.607676,"posZ":-5.99990273,"rotX":0.004412398,"rotY":89.99839,"rotZ":359.9886,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Jeu de Dupes","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02067\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14501,"SidewaysCard":true,"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1e8ed7","Name":"Card","Transform":{"posX":17.5000076,"posY":1.621312,"posZ":-5.99991369,"rotX":0.007918625,"rotY":89.99839,"rotZ":359.987762,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Chance du Débutant","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 4,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02066\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14500,"SidewaysCard":true,"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"219139","Name":"CardCustom","Transform":{"posX":-30.5000248,"posY":1.77890623,"posZ":3.99997258,"rotX":-0.000005125411,"rotY":179.986191,"rotZ":-2.35588345e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Peter Clover","Description":"Toutes les Cartes en Main","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02079\",\n  \"sanity\": 2,\n  \"traits\": \"Humanoid. Criminal.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":558000,"SidewaysCard":false,"CustomDeck":{"5580":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230270044/49552496FCD9A2D5BF67E1B67D75E50986BC5B0C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458235286543751/CFBD8007EA0629896D499363E84F9AEE6A405D78/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"23a9e6","Name":"Custom_Tile","Transform":{"posX":-7,"posY":1.50540483,"posZ":8,"rotX":0.0108898478,"rotY":180.020477,"rotZ":0.004955423,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"259f05","Name":"Card","Transform":{"posX":23.5001011,"posY":1.5138092,"posZ":-5.50001144,"rotX":0.010891499,"rotY":180.000687,"rotZ":0.00494837668,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Référence","Description":"La Banque Gagne Toujours","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116800,"SidewaysCard":false,"CustomDeck":{"1168":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2c8685","Name":"CardCustom","Transform":{"posX":-9.499999,"posY":1.51989079,"posZ":11.5,"rotX":0.01089179,"rotY":179.998077,"rotZ":0.0049477797,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chef de Salle du Club du Trèfle","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02078\",\n  \"traits\": \"Humanoid. Criminal. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1111900,"SidewaysCard":false,"CustomDeck":{"11119":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229763403/62A0641CED0F0CD3587BB669ADD58BCAE6B8ECB8/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458235286397281/EDD671AFB49FF60CC3A7A17A9EA23D2F54CD886E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3ab510","Name":"Card","Transform":{"posX":-6.999997,"posY":1.5196749,"posZ":11.5,"rotX":0.0108914245,"rotY":180.001862,"rotZ":0.0049486747,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Lounge du Club du Trèfle","Description":"Club du Trèfle.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02071\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Square|Triangle\",\n    \"icons\": \"Circle\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Square|Triangle\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Clover Club.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116901,"SidewaysCard":false,"CustomDeck":{"1169":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"418388","Name":"Deck","Transform":{"posX":30.5,"posY":1.65692222,"posZ":-3,"rotX":-0.0005911502,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Rencontre","Description":"La Banque Gagne Toujours","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[18101,18100,18038,18333,18203,18207,1108700,279700,1108800,1105000,18608,18609,18607,18605,18606,18603,18336,18337,18335],"CustomDeck":{"180":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"181":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"182":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"183":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"2797":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229777503/55A13270F3B20A1B9C84A0678370228A453AC62C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0},"11050":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229776378/80A298BDA6AAB46A2F6F6231EA6F663CE41B055B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0},"11087":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229777503/55A13270F3B20A1B9C84A0678370228A453AC62C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0},"11088":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229776378/80A298BDA6AAB46A2F6F6231EA6F663CE41B055B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"3c41d5","Name":"Card","Transform":{"posX":30.5,"posY":7.761457,"posZ":-3.00000024,"rotX":-0.0003815829,"rotY":180.000992,"rotZ":180.000977,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Nuée de Rats","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01159\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18101,"SidewaysCard":false,"CustomDeck":{"181":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8041a2","Name":"Card","Transform":{"posX":30.5,"posY":7.91232443,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Nuée de Rats","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01159\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18100,"SidewaysCard":false,"CustomDeck":{"181":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b1178a","Name":"Card","Transform":{"posX":30.5,"posY":7.712325,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Nuée de Rats","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01159\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18038,"SidewaysCard":false,"CustomDeck":{"180":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b5fe64","Name":"Card","Transform":{"posX":30.5,"posY":5.65191031,"posZ":-3.00000048,"rotX":-0.00112303044,"rotY":180.000992,"rotZ":180.0013,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Un Goût Suspect","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02081\",\n  \"traits\": \"Poison. Illicit.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18333,"SidewaysCard":false,"CustomDeck":{"183":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d5b82e","Name":"Card","Transform":{"posX":30.5,"posY":7.161461,"posZ":-3.00000024,"rotX":-0.00059082103,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pourchassé","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02099\",\n  \"traits\": \"Tactic.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18203,"SidewaysCard":false,"CustomDeck":{"182":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"fcf0e9","Name":"Card","Transform":{"posX":30.5,"posY":7.31232452,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pourchassé","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02099\",\n  \"traits\": \"Tactic.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18207,"SidewaysCard":false,"CustomDeck":{"182":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"612943","Name":"CardCustom","Transform":{"posX":30.5,"posY":7.112325,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Malfrat","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02098\",\n  \"traits\": \"Humanoid. Criminal. Syndicate.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108700,"SidewaysCard":false,"CustomDeck":{"11087":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229777503/55A13270F3B20A1B9C84A0678370228A453AC62C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6faab1","Name":"CardCustom","Transform":{"posX":30.5,"posY":6.561462,"posZ":-3.00000024,"rotX":-0.000590739364,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Malfrat","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02098\",\n  \"traits\": \"Humanoid. Criminal. Syndicate.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":279700,"SidewaysCard":false,"CustomDeck":{"2797":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229777503/55A13270F3B20A1B9C84A0678370228A453AC62C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"113ffe","Name":"CardCustom","Transform":{"posX":30.5,"posY":6.71232557,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Crapule d'O'Bannion","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02097\",\n  \"traits\": \"Humanoid. Criminal. Syndicate.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108800,"SidewaysCard":false,"CustomDeck":{"11088":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229776378/80A298BDA6AAB46A2F6F6231EA6F663CE41B055B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"858dcb","Name":"CardCustom","Transform":{"posX":30.5,"posY":6.512326,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Crapule d'O'Bannion","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02097\",\n  \"traits\": \"Humanoid. Criminal. Syndicate.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1105000,"SidewaysCard":false,"CustomDeck":{"11050":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229776378/80A298BDA6AAB46A2F6F6231EA6F663CE41B055B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d8d1a1","Name":"Card","Transform":{"posX":30.5,"posY":6.312326,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Coup du Sort","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02093\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18608,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0ee4ad","Name":"Card","Transform":{"posX":30.5,"posY":6.11232567,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Coup du Sort","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02093\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18609,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9b7bc0","Name":"Card","Transform":{"posX":30.5,"posY":5.912326,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Coup du Sort","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02093\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18607,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"695a70","Name":"Card","Transform":{"posX":30.5,"posY":5.71232557,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chance Maudite","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02092\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18605,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"941ff9","Name":"Card","Transform":{"posX":30.5,"posY":5.512326,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chance Maudite","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02092\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18606,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"368d2c","Name":"Card","Transform":{"posX":30.5,"posY":5.312326,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chance Maudite","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02092\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18603,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f09129","Name":"Card","Transform":{"posX":30.5,"posY":5.11232567,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Éveiller les Soupçons","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02082\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18336,"SidewaysCard":false,"CustomDeck":{"183":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d92427","Name":"Card","Transform":{"posX":30.5,"posY":4.912326,"posZ":-3.00000024,"rotX":-0.000591103453,"rotY":180.000992,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Éveiller les Soupçons","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02082\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18337,"SidewaysCard":false,"CustomDeck":{"183":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"111a9a","Name":"Card","Transform":{"posX":30.5000019,"posY":1.63478637,"posZ":-2.99999928,"rotX":-0.00258443877,"rotY":180.000992,"rotZ":180.00296,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Un Goût Suspect","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02081\",\n  \"traits\": \"Poison. Illicit.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18335,"SidewaysCard":false,"CustomDeck":{"183":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"453f78","Name":"Card","Transform":{"posX":-6.99999762,"posY":1.52100551,"posZ":18.5,"rotX":0.0108914468,"rotY":180.001648,"rotZ":0.004948546,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bar du Club du Trèfle","Description":"Club du Trèfle.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02072\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Circle\",\n    \"icons\": \"Square\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle|Circle\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Clover Club.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116902,"SidewaysCard":false,"CustomDeck":{"1169":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"47d6f7","Name":"Custom_Tile","Transform":{"posX":-7.00000143,"posY":1.50673532,"posZ":15,"rotX":0.0108898235,"rotY":180.020477,"rotZ":0.00495686475,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"4d9bd7","Name":"Custom_Tile","Transform":{"posX":17.5,"posY":1.505285,"posZ":18.5,"rotX":0.00494784443,"rotY":90.0003,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"55ce4f","Name":"Custom_Tile","Transform":{"posX":17.5,"posY":1.5040493,"posZ":12,"rotX":359.990265,"rotY":299.9997,"rotZ":0.00696437946,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"5c303b","Name":"Card","Transform":{"posX":4,"posY":1.52005553,"posZ":18.5000057,"rotX":0.0108914571,"rotY":180.0016,"rotZ":0.004948549,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Salle de Jeu du Club du Trèfle","Description":"Club du Trèfle.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02073\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Square|Diamond\",\n    \"icons\": \"Triangle\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Square|Diamond\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Clover Club.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116903,"SidewaysCard":false,"CustomDeck":{"1169":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6796b4","Name":"Custom_Model_Bag","Transform":{"posX":-26.5000076,"posY":1.83530128,"posZ":3.999992,"rotX":-0.000006243044,"rotY":179.984879,"rotZ":2.11039676e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Soutiens/faiblesses d'histoire","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/5077277234347423622/F89B4508C6E2782780C2B5593FB68379E0FB2DB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"","LuaScriptState":"{\"ml\":[]}","XmlUI":"","ContainedObjects":[{"GUID":"3ebb99","Name":"Card","Transform":{"posX":-26.5,"posY":1.93749309,"posZ":4,"rotX":0.000150049309,"rotY":179.986267,"rotZ":-0.0000161754488,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 2,\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02040\",\n  \"sanity\": 2,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":115015,"SidewaysCard":false,"CustomDeck":{"1150":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e8cde0","Name":"Card","Transform":{"posX":-26.5,"posY":1.937489,"posZ":3.5,"rotX":0.00305219716,"rotY":180,"rotZ":0.000901966938,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Dr Francis Morgan","Description":"Professeur d'Archéologie","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"combatIcons\": 1,\n  \"cost\": 3,\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02080\",\n  \"sanity\": 1,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117211,"SidewaysCard":false,"CustomDeck":{"1172":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"7234af","Name":"Custom_Tile","Transform":{"posX":8.499999,"posY":1.50606227,"posZ":18.5,"rotX":0.004948649,"rotY":90.0042,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"9c60ac","Name":"Deck","Transform":{"posX":-23.0001373,"posY":1.800674,"posZ":4.00165844,"rotX":-0.000005015461,"rotY":179.986221,"rotZ":4.104464e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Hideuses Abominations","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[17930,17931,17934],"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"c8d931","Name":"Card","Transform":{"posX":-23.0001411,"posY":4.85607767,"posZ":4.001654,"rotX":-0.00000503364,"rotY":179.986252,"rotZ":-1.46318131e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Agglomérat de Sphères","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"id\": \"02103\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17930,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"70c221","Name":"Card","Transform":{"posX":-23.0001411,"posY":5.056078,"posZ":4.001654,"rotX":-0.00000503364,"rotY":179.986252,"rotZ":-1.46318131e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Serviteur du Rôdeur","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"id\": \"02104\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17931,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"87be51","Name":"Card","Transform":{"posX":-23.0001411,"posY":1.87731981,"posZ":4.001654,"rotX":0.00288411626,"rotY":179.986252,"rotZ":-0.00346335815,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Agglomérat de Sphères","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"id\": \"02103\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17934,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"a2cc1c","Name":"Custom_Tile","Transform":{"posX":-1.50000167,"posY":1.50626051,"posZ":15,"rotX":-0.00116104877,"rotY":60.000042,"rotZ":359.9881,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"a5e1e5","Name":"CardCustom","Transform":{"posX":13.0000048,"posY":1.51927829,"posZ":18.5,"rotX":0.0108915614,"rotY":179.99971,"rotZ":0.004948215,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755653629/A77401F8797D68D5D5B5440F2A1D8463A16F0C26/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755653629/A77401F8797D68D5D5B5440F2A1D8463A16F0C26/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"adc143","Name":"Deck","Transform":{"posX":-19.5000057,"posY":1.8199302,"posZ":4.001393,"rotX":-0.000005283318,"rotY":180.018509,"rotZ":1.30979629e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Répandre la Peur","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[18434,18436,18437,18500,18432,18433,18435],"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"365129","Name":"Card","Transform":{"posX":-19.50001,"posY":4.71186924,"posZ":4.001389,"rotX":-0.00000713064946,"rotY":180.018463,"rotZ":0.00000650149923,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18434,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2e3a70","Name":"Card","Transform":{"posX":-19.50001,"posY":5.075334,"posZ":4.001389,"rotX":-0.00000512967563,"rotY":180.018463,"rotZ":-5.932991e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18436,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"68be1e","Name":"Card","Transform":{"posX":-19.50001,"posY":5.275334,"posZ":4.001389,"rotX":-0.00000512967563,"rotY":180.018463,"rotZ":-5.932991e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Paralysé par la Peur","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18437,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0783ce","Name":"Card","Transform":{"posX":-19.50001,"posY":5.47533369,"posZ":4.001389,"rotX":-0.00000512967563,"rotY":180.018463,"rotZ":-5.932991e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Paralysé par la Peur","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18500,"SidewaysCard":false,"CustomDeck":{"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e9a446","Name":"Card","Transform":{"posX":-19.50001,"posY":5.675334,"posZ":4.001389,"rotX":-0.00000512967563,"rotY":180.018463,"rotZ":-5.932991e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voix Dissonantes","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18432,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"07ff5e","Name":"Card","Transform":{"posX":-19.50001,"posY":5.37558651,"posZ":4.001389,"rotX":359.974731,"rotY":180.018127,"rotZ":0.08491409,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voix Dissonantes","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18433,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5e2ae4","Name":"Card","Transform":{"posX":-19.50001,"posY":1.91197836,"posZ":4.001389,"rotX":0.00309270923,"rotY":180.018463,"rotZ":-0.00142397417,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18435,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"b3fd28","Name":"Deck","Transform":{"posX":12.5000019,"posY":1.536432,"posZ":-5.99991751,"rotX":0.0049486123,"rotY":90.0023956,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Intrigue","Description":"La Banque Gagne Toujours","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[14506,14505,14504],"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"430d10","Name":"Card","Transform":{"posX":12.5000019,"posY":4.791836,"posZ":-5.9999156,"rotX":0.004948327,"rotY":90.00241,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chaos au Club du Trèfle","Description":"Intrigue 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 7,\n  \"id\": \"02065\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14506,"SidewaysCard":true,"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ecd977","Name":"Card","Transform":{"posX":12.5000019,"posY":4.591836,"posZ":-5.9999156,"rotX":0.004948327,"rotY":90.00241,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rixe Souterraine","Description":"Intrigue 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 3,\n  \"id\": \"02064\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14505,"SidewaysCard":true,"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f7e2f9","Name":"Card","Transform":{"posX":12.5000086,"posY":1.61307788,"posZ":-5.999931,"rotX":0.00261075562,"rotY":90.00241,"rotZ":359.9881,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Club du Trèfle","Description":"Intrigue 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 4,\n  \"id\": \"02063\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14504,"SidewaysCard":true,"CustomDeck":{"145":{"FaceURL":"https://i.imgur.com/KaarVN0.jpg","BackURL":"https://i.imgur.com/KH4fqod.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"bfc6f0","Name":"Card","Transform":{"posX":-6.99999952,"posY":1.51834416,"posZ":4.5,"rotX":0.0108912224,"rotY":180.003281,"rotZ":0.004948759,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Bella Luna","Description":"Arkham.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02070\",\n  \"locationBack\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Crescent\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Crescent\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116904,"SidewaysCard":false,"CustomDeck":{"1169":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c8ca62","Name":"Custom_Model","Transform":{"posX":-20.0381,"posY":1.76630056,"posZ":11.6699,"rotX":0.000005268761,"rotY":0.0323603377,"rotZ":2.05215187e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Portes de derrière\"}","XmlUI":""},{"GUID":"caf9d1","Name":"Custom_Tile","Transform":{"posX":17.5,"posY":1.50652063,"posZ":25,"rotX":-0.00116120011,"rotY":60.0001,"rotZ":359.9881,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"cbab46","Name":"Card","Transform":{"posX":-23.0000038,"posY":1.77890575,"posZ":8.999985,"rotX":-0.000004864752,"rotY":180.000168,"rotZ":5.695584e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Couloir Obscur","Description":"Club du Trèfle.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02074\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Tee|Hourglass|Plus|Tilde\",\n    \"icons\": \"Diamond\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Clover Club.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":116905,"SidewaysCard":false,"CustomDeck":{"1169":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e57ccb","Name":"Custom_Tile","Transform":{"posX":-1.50000226,"posY":1.50692582,"posZ":18.5,"rotX":0.004947916,"rotY":90.00026,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}}],"AttachedDecals":[{"Transform":{"posX":-0.0021877822,"posY":-0.08963572,"posZ":-0.00288731651,"rotX":270,"rotY":359.869568,"rotZ":0,"scaleX":2.00000215,"scaleY":2.00000238,"scaleZ":2.00000262},"CustomDecal":{"Name":"dunwich_back","ImageURL":"http://cloud-3.steamusercontent.com/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/","Size":7.4}}]},{"GUID":"3ebbf6","Name":"Custom_Model_Bag","Transform":{"posX":3.500001,"posY":0.9799974,"posZ":45,"rotX":-0.00000488011256,"rotY":180.023544,"rotZ":5.075572e-7,"scaleX":1.20052135,"scaleY":0.249882281,"scaleZ":1.3145982},"Nickname":"III : L'Express du Comté d'Essex","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118403754230/0142FE1AC59471A8F7E46F07E089A73F47D59AA5/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"0314c8\":{\"lock\":false,\"pos\":{\"x\":23,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9909,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0b2cbf\":{\"lock\":false,\"pos\":{\"x\":-1.5,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9911,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0b34de\":{\"lock\":false,\"pos\":{\"x\":12.5000076293945,\"y\":1.54606008529663,\"z\":-5.99991130828857},\"rot\":{\"x\":0.00494982535019517,\"y\":90.0095520019531,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1d8503\":{\"lock\":false,\"pos\":{\"x\":-27.0023975372314,\"y\":1.8353009223938,\"z\":10.0013427734375},\"rot\":{\"x\":-5.28698274138151E-06,\"y\":179.973114013672,\"z\":-2.16850267520385E-07},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"283e30\":{\"lock\":false,\"pos\":{\"x\":-26.898,\"y\":1.8288,\"z\":24.0002},\"rot\":{\"x\":0,\"y\":179.9908,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3dc101\":{\"lock\":false,\"pos\":{\"x\":16.9836,\"y\":1.5201,\"z\":12.9902},\"rot\":{\"x\":0,\"y\":179.9908,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"462b79\":{\"lock\":false,\"pos\":{\"x\":-21.9999,\"y\":1.8288,\"z\":24.0001},\"rot\":{\"x\":0,\"y\":179.9915,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5bcebd\":{\"lock\":false,\"pos\":{\"x\":-27.4931,\"y\":1.7788,\"z\":24.0001},\"rot\":{\"x\":0.0001,\"y\":179.9916,\"z\":-0.0008},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6d62ef\":{\"lock\":false,\"pos\":{\"x\":-21.3979,\"y\":1.7789,\"z\":24.0002},\"rot\":{\"x\":0,\"y\":179.9913,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"76346f\":{\"lock\":false,\"pos\":{\"x\":23.5000991821289,\"y\":1.51380920410156,\"z\":-5.50001001358032},\"rot\":{\"x\":0.0108914840966463,\"y\":179.999664306641,\"z\":0.00494825514033437},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8caffb\":{\"lock\":false,\"pos\":{\"x\":-21.0022621154785,\"y\":1.83530080318451,\"z\":10.0008773803711},\"rot\":{\"x\":-5.13690429215785E-06,\"y\":179.971740722656,\"z\":6.15497484091065E-08},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"9fea68\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.73394668102264,\"z\":-3},\"rot\":{\"x\":-0.000591197574976832,\"y\":180.000289916992,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a35225\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9912,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a7c9c0\":{\"lock\":false,\"pos\":{\"x\":-12,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9913,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a8be35\":{\"lock\":false,\"pos\":{\"x\":17.5000076293945,\"y\":1.53118622303009,\"z\":-5.99989986419678},\"rot\":{\"x\":0.00494855595752597,\"y\":90.0016021728516,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a97712\":{\"lock\":false,\"pos\":{\"x\":-26.8502044677734,\"y\":1.76630055904388,\"z\":11.8678960800171},\"rot\":{\"x\":4.82353789266199E-06,\"y\":7.10794556653127E-05,\"z\":1.69713160858009E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"aa2c0f\":{\"lock\":false,\"pos\":{\"x\":-34.0000038146973,\"y\":1.83530139923096,\"z\":2.99999284744263},\"rot\":{\"x\":-6.96869665262057E-06,\"y\":179.985214233398,\"z\":4.35207169857676E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"b3f388\":{\"lock\":false,\"pos\":{\"x\":2.99993443489075,\"y\":1.60163235664368,\"z\":-6.49993276596069},\"rot\":{\"x\":0.0171795170754194,\"y\":180.022598266602,\"z\":0.00566008314490318},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"d19c9f\":{\"lock\":false,\"pos\":{\"x\":-24.2853927612305,\"y\":1.7662992477417,\"z\":26.8808059692383},\"rot\":{\"x\":5.41548752153176E-06,\"y\":0.000298276398098096,\"z\":1.61267820431021E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"d87cdb\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9912,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d8c6a2\":{\"lock\":false,\"pos\":{\"x\":-20.9699153900146,\"y\":1.76630055904388,\"z\":11.9468469619751},\"rot\":{\"x\":4.63048536403221E-06,\"y\":0.000297950231470168,\"z\":1.04862756700186E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"f43d73\":{\"lock\":false,\"pos\":{\"x\":-7,\"y\":1.5201,\"z\":13},\"rot\":{\"x\":0,\"y\":179.9913,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"0314c8","Name":"Card","Transform":{"posX":23,"posY":1.51736915,"posZ":12.9999981,"rotX":0.0108923707,"rotY":179.9909,"rotZ":0.00494654756,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Locomotive","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02177\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22702,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0b2cbf","Name":"Card","Transform":{"posX":-1.49999928,"posY":1.519485,"posZ":12.9999971,"rotX":0.010892245,"rotY":179.991074,"rotZ":0.0049465294,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Wagon","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02170\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22712,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0b34de","Name":"Deck","Transform":{"posX":12.5000086,"posY":1.5460602,"posZ":-5.999914,"rotX":0.004949758,"rotY":90.00959,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Intrigue","Description":"L'Express du Comté d'Essex","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[22606,22605,22604,22603,22602],"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"788383","Name":"Card","Transform":{"posX":12.5000143,"posY":1.59905577,"posZ":-5.99993,"rotX":0.004304204,"rotY":90.00962,"rotZ":359.984924,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Plus de Temps","Description":"Intrigue 5a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 3,\n  \"id\": \"02164\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22606,"SidewaysCard":true,"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"06a836","Name":"Card","Transform":{"posX":12.50001,"posY":1.59386826,"posZ":-5.99991655,"rotX":0.0045258035,"rotY":90.00964,"rotZ":359.9872,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Submergé","Description":"Intrigue 4a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 3,\n  \"id\": \"02163\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22605,"SidewaysCard":true,"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"20a53e","Name":"Card","Transform":{"posX":12.50002,"posY":1.58624136,"posZ":-5.99993849,"rotX":0.00330002885,"rotY":90.00962,"rotZ":359.991241,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Marche Arrière","Description":"Intrigue 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 4,\n  \"id\": \"02162\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22604,"SidewaysCard":true,"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d2e33a","Name":"Card","Transform":{"posX":12.5000114,"posY":1.60907364,"posZ":-5.99992,"rotX":0.004488053,"rotY":90.00962,"rotZ":359.988678,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Fissure s'Élargit","Description":"Intrigue 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 3,\n  \"id\": \"02161\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22603,"SidewaysCard":true,"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"74ebaa","Name":"Card","Transform":{"posX":12.5000172,"posY":1.63040781,"posZ":-5.99993229,"rotX":0.007968523,"rotY":90.00962,"rotZ":359.987762,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Un Accroc dans la Réalité","Description":"Intrigue 1a","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 4,\n  \"id\": \"02160\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22602,"SidewaysCard":true,"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"1d8503","Name":"Custom_Model_Bag","Transform":{"posX":-27.0024,"posY":1.83530092,"posZ":10.0013409,"rotX":-0.000006460353,"rotY":179.97316,"rotZ":-1.81844484e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"Number":0,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1932636167914787917/DED7D4BA88ADFDADA7F3E964D76508687386E957/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"0b2cbf\":{\"lock\":false,\"pos\":{\"x\":0.499998152256012,\"y\":1.5193122625351,\"z\":13.0000038146973},\"rot\":{\"x\":0.0108921462669969,\"y\":179.991333007813,\"z\":0.00494667841121554},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"283e30\":{\"lock\":false,\"pos\":{\"x\":5.99999856948853,\"y\":1.51883733272552,\"z\":13.0000038146973},\"rot\":{\"x\":0.0108920587226748,\"y\":179.992431640625,\"z\":0.00494687771424651},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3dc101\":{\"lock\":false,\"pos\":{\"x\":16.9999980926514,\"y\":1.51788735389709,\"z\":13.0000038146973},\"rot\":{\"x\":0.0108923511579633,\"y\":179.990646362305,\"z\":0.00494653917849064},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5bcebd\":{\"lock\":false,\"pos\":{\"x\":-27.493070602417,\"y\":1.77885508537292,\"z\":24.0001335144043},\"rot\":{\"x\":-1.00130625924066E-06,\"y\":179.991836547852,\"z\":-2.57880510616815E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a35225\":{\"lock\":false,\"pos\":{\"x\":-10.5000028610229,\"y\":1.52026224136353,\"z\":13.0000038146973},\"rot\":{\"x\":0.0108918761834502,\"y\":179.99543762207,\"z\":0.00494740903377533},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a7c9c0\":{\"lock\":false,\"pos\":{\"x\":11.4999980926514,\"y\":1.51836228370667,\"z\":13.0000038146973},\"rot\":{\"x\":0.0108921742066741,\"y\":179.991622924805,\"z\":0.00494659412652254},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d87cdb\":{\"lock\":false,\"pos\":{\"x\":-5.00000143051147,\"y\":1.51978731155396,\"z\":13.0000038146973},\"rot\":{\"x\":0.0108921807259321,\"y\":179.992004394531,\"z\":0.00494690984487534},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f43d73\":{\"lock\":false,\"pos\":{\"x\":-26.8979740142822,\"y\":1.82885408401489,\"z\":24.0002307891846},\"rot\":{\"x\":6.43255179966218E-06,\"y\":179.991577148438,\"z\":-1.2148059795436E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":""},{"GUID":"283e30","Name":"Card","Transform":{"posX":-26.8979969,"posY":1.82890308,"posZ":24.000206,"rotX":0.0000064104006,"rotY":179.99086,"rotZ":-0.0000138380756,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Wagon","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02174\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22711,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3dc101","Name":"Card","Transform":{"posX":16.9836025,"posY":1.51788688,"posZ":12.9901972,"rotX":0.0108922943,"rotY":179.9908,"rotZ":0.004946464,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Wagon","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02167\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22705,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"462b79","Name":"Card","Transform":{"posX":-21.9998951,"posY":1.82890272,"posZ":24.0001049,"rotX":-0.00000634548769,"rotY":179.99147,"rotZ":-0.00010371938,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Locomotive","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02176\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22704,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5bcebd","Name":"Card","Transform":{"posX":-27.4930935,"posY":1.77890408,"posZ":24.0001068,"rotX":-0.0000010945223,"rotY":179.991653,"rotZ":-0.0000263880738,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Wagon","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02173\",\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22707,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6d62ef","Name":"Card","Transform":{"posX":-21.39789,"posY":1.77890456,"posZ":24.00021,"rotX":-0.00000554418466,"rotY":179.991333,"rotZ":0.000005454154,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Locomotive","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02175\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22703,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"76346f","Name":"Card","Transform":{"posX":23.5001011,"posY":1.5138092,"posZ":-5.500012,"rotX":0.010891594,"rotY":179.999634,"rotZ":0.00494803954,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Référence","Description":"L'Express du Comté d'Essex","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22700,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8caffb","Name":"Custom_Model_Bag","Transform":{"posX":-21.0022621,"posY":1.8353008,"posZ":10.0008774,"rotX":-0.000005176108,"rotY":179.971741,"rotZ":1.51134984e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"Number":0,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1932636167914787917/DED7D4BA88ADFDADA7F3E964D76508687386E957/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"0314c8\":{\"lock\":false,\"pos\":{\"x\":-21.9998588562012,\"y\":1.82885372638702,\"z\":24.0001392364502},\"rot\":{\"x\":-7.18877981853439E-06,\"y\":179.99104309082,\"z\":-0.000103843296528794},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"462b79\":{\"lock\":false,\"pos\":{\"x\":-21.3978519439697,\"y\":1.77885556221008,\"z\":24.0002422332764},\"rot\":{\"x\":-5.84115014135023E-06,\"y\":179.991668701172,\"z\":5.55122051082435E-06},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6d62ef\":{\"lock\":false,\"pos\":{\"x\":22.4999980926514,\"y\":1.51741230487823,\"z\":13.0000038146973},\"rot\":{\"x\":0.0108911609277129,\"y\":180.00422668457,\"z\":0.0049489438533783},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":""},{"GUID":"9fea68","Name":"Deck","Transform":{"posX":30.5,"posY":1.73394668,"posZ":-3,"rotX":-0.0005911673,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Rencontre","Description":"L'Express du Comté d'Essex","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[18717,18721,18718,18723,18720,18719,15702,15703,15704,18433,18432,18500,18437,18436,18434,18435,15620,15623,15621,15622,18824,15625,15624,18832,18822,18835,18831,18830,18827,18829,18828,18833,18834,18826,18825],"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"7db7c9","Name":"Card","Transform":{"posX":30.5,"posY":11.38935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Mystérieuse Mélopée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18717,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"898692","Name":"Card","Transform":{"posX":30.5,"posY":11.1893492,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Mystérieuse Mélopée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18721,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"089a5c","Name":"Card","Transform":{"posX":30.5,"posY":10.9893494,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Magicien de l'Ordre","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01170\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18718,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0cf87d","Name":"Card","Transform":{"posX":30.5,"posY":10.78935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Acolyte","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01131\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18723,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3da314","Name":"Card","Transform":{"posX":30.5,"posY":10.58935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Acolyte","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18720,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8a91f9","Name":"Card","Transform":{"posX":30.5,"posY":10.38935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Acolyte","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18719,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1c3c50","Name":"Card","Transform":{"posX":30.5,"posY":10.1893492,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15702,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"67cfd5","Name":"Card","Transform":{"posX":30.5,"posY":9.989349,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15703,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7b9eb5","Name":"Card","Transform":{"posX":30.5,"posY":9.451863,"posZ":-3,"rotX":-0.000590868469,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15704,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"07ff5e","Name":"Card","Transform":{"posX":30.5,"posY":9.58935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voix Dissonantes","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18433,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e9a446","Name":"Card","Transform":{"posX":30.5,"posY":9.38935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voix Dissonantes","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18432,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0783ce","Name":"Card","Transform":{"posX":30.5,"posY":8.851863,"posZ":-3,"rotX":-0.0005908731,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Paralysé par la Peur","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18500,"SidewaysCard":false,"CustomDeck":{"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"68be1e","Name":"Card","Transform":{"posX":30.5,"posY":8.989349,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Paralysé par la Peur","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18437,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2e3a70","Name":"Card","Transform":{"posX":30.5,"posY":8.78935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18436,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"365129","Name":"Card","Transform":{"posX":30.5,"posY":8.58935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18434,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5e2ae4","Name":"Card","Transform":{"posX":30.5,"posY":8.38935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18435,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6533fc","Name":"Card","Transform":{"posX":30.5,"posY":8.189349,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Barrière Mystique","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02102\",\n  \"traits\": \"Hex. Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15620,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e2a503","Name":"Card","Transform":{"posX":30.5,"posY":7.98934937,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Barrière Mystique","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02102\",\n  \"traits\": \"Hex. Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15623,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ff0620","Name":"Card","Transform":{"posX":30.5,"posY":7.789349,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terreur de l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02101\",\n  \"traits\": \"Hex. Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15621,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"62531f","Name":"Card","Transform":{"posX":30.5,"posY":7.58934927,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terreur de l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02101\",\n  \"traits\": \"Hex. Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15622,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d905b5","Name":"Card","Transform":{"posX":30.5,"posY":5.673393,"posZ":-3.00000024,"rotX":-0.0005906551,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Passager Sans Défense","Description":"Allié. Passant.","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02179\",\n  \"sanity\": 1,\n  \"traits\": \"Ally. Bystander.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18824,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"11d71d","Name":"Card","Transform":{"posX":30.5,"posY":7.38935,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Propulsé dans l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02100\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15625,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"217f6b","Name":"Card","Transform":{"posX":30.5,"posY":7.189349,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Propulsé dans l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02100\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15624,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a96642","Name":"Card","Transform":{"posX":30.5,"posY":6.98934937,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Monstruosité Émergente","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"id\": \"02183\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18832,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f7ad7e","Name":"Card","Transform":{"posX":30.5,"posY":6.78935051,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Monstruosité Émergente","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"id\": \"02183\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18822,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"641e6d","Name":"Card","Transform":{"posX":30.5,"posY":6.5893507,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Horreur Agrippante","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02182\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18835,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7404b1","Name":"Card","Transform":{"posX":30.5,"posY":6.38935041,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Horreur Agrippante","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02182\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18831,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b76ae8","Name":"Card","Transform":{"posX":30.5,"posY":5.85186434,"posZ":-3,"rotX":-0.0005907345,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rails Brisés","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02181\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18830,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4e974c","Name":"Card","Transform":{"posX":30.5,"posY":5.98935032,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rails Brisés","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02181\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18827,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"70ba57","Name":"Card","Transform":{"posX":30.5,"posY":5.78935051,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rails Brisés","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02181\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18829,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3e1cb1","Name":"Card","Transform":{"posX":30.5,"posY":5.5893507,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Griffes de Vapeur","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02180\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18828,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f7bd4b","Name":"Card","Transform":{"posX":30.5,"posY":5.38935041,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Griffes de Vapeur","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02180\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18833,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b813bc","Name":"Card","Transform":{"posX":30.5,"posY":4.85186434,"posZ":-3,"rotX":-0.000590871961,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Griffes de Vapeur","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02180\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18834,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"939ba1","Name":"Card","Transform":{"posX":30.5,"posY":4.98935032,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Passager Sans Défense","Description":"Allié. Passant.","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02179\",\n  \"sanity\": 1,\n  \"traits\": \"Ally. Bystander.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18826,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9d6527","Name":"Card","Transform":{"posX":30.5,"posY":4.78935051,"posZ":-3.00000024,"rotX":-0.0005908309,"rotY":180.00029,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Passager Sans Défense","Description":"Allié. Passant.","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02179\",\n  \"sanity\": 1,\n  \"traits\": \"Ally. Bystander.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18825,"SidewaysCard":false,"CustomDeck":{"188":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"a35225","Name":"Card","Transform":{"posX":10.500001,"posY":1.51844871,"posZ":12.9999971,"rotX":0.0108922655,"rotY":179.9912,"rotZ":0.004946563,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Wagon","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02168\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22708,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a7c9c0","Name":"Card","Transform":{"posX":-12.0000029,"posY":1.52039182,"posZ":12.9999971,"rotX":0.01089219,"rotY":179.9913,"rotZ":0.00494661927,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Wagon","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02172\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22710,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a8be35","Name":"Deck","Transform":{"posX":17.50001,"posY":1.53118622,"posZ":-5.9999,"rotX":0.00494821277,"rotY":90.001564,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[22601,22600],"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"97868c","Name":"Card","Transform":{"posX":17.5000134,"posY":1.60574532,"posZ":-5.99990273,"rotX":0.004282026,"rotY":90.0015,"rotZ":359.988464,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Relancer la Locomotive !","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02166\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22601,"SidewaysCard":true,"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"409ce7","Name":"Card","Transform":{"posX":17.5000153,"posY":1.60398173,"posZ":-5.999911,"rotX":0.00781055167,"rotY":90.0015,"rotZ":359.985718,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Courrez !","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02165\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22600,"SidewaysCard":true,"CustomDeck":{"226":{"FaceURL":"https://i.imgur.com/hHavNex.jpg","BackURL":"https://i.imgur.com/WS70v17.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"a97712","Name":"Custom_Model","Transform":{"posX":-26.8502064,"posY":1.76630056,"posZ":11.8678942,"rotX":0.00000520799176,"rotY":-0.00000465694848,"rotZ":6.82819348e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Placement wagons\"}","XmlUI":""},{"GUID":"aa2c0f","Name":"Custom_Model_Bag","Transform":{"posX":-34.00001,"posY":1.8353014,"posZ":2.99998736,"rotX":-0.00000506082552,"rotY":179.985214,"rotZ":9.648964e-10,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Soutiens/faiblesses d'histoire","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/5077277234347423622/F89B4508C6E2782780C2B5593FB68379E0FB2DB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"","LuaScriptState":"{\"ml\":[]}","XmlUI":"","ContainedObjects":[{"GUID":"3907c2","Name":"Deck","Transform":{"posX":-33.5,"posY":1.964005,"posZ":2.5,"rotX":0.00533650164,"rotY":180.000229,"rotZ":-0.0000427810446,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[22701,22701,22701,22701],"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"fa509c","Name":"Card","Transform":{"posX":-23.5000019,"posY":1.77890635,"posZ":2.499997,"rotX":-0.00000519477,"rotY":180.000229,"rotZ":2.81097243e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"À Travers l'Espace et le Temps","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"The Dunwich Legacy\",\n  \"id\": \"02178\",\n  \"traits\": \"Madness.\",\n  \"type\": \"Treachery\",\n  \"weakness\": \"true\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22701,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"af47e9","Name":"Card","Transform":{"posX":-27.5000076,"posY":1.77890646,"posZ":1.49999273,"rotX":-0.000005116823,"rotY":180.00029,"rotZ":-7.108344e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"À Travers l'Espace et le Temps","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"The Dunwich Legacy\",\n  \"id\": \"02178\",\n  \"traits\": \"Madness.\",\n  \"type\": \"Treachery\",\n  \"weakness\": \"true\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22701,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"606e9e","Name":"Card","Transform":{"posX":-31.5000286,"posY":1.77890623,"posZ":2.999973,"rotX":-0.000005108112,"rotY":180.00032,"rotZ":3.70809978e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"À Travers l'Espace et le Temps","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"The Dunwich Legacy\",\n  \"id\": \"02178\",\n  \"traits\": \"Madness.\",\n  \"type\": \"Treachery\",\n  \"weakness\": \"true\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22701,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f16dcc","Name":"Card","Transform":{"posX":-25.5,"posY":1.86823487,"posZ":2.5,"rotX":0.000132816174,"rotY":180.000259,"rotZ":-0.0001645125,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"À Travers l'Espace et le Temps","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"The Dunwich Legacy\",\n  \"id\": \"02178\",\n  \"traits\": \"Madness.\",\n  \"type\": \"Treachery\",\n  \"weakness\": \"true\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22701,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}]},{"GUID":"b3f388","Name":"Custom_Tile","Transform":{"posX":2.99992847,"posY":1.60163236,"posZ":-6.49992847,"rotX":0.0171747115,"rotY":180.0226,"rotZ":0.005655991,"scaleX":1.6428808,"scaleY":1,"scaleZ":1.6428808},"Nickname":"Mise en place du Chaos Bag","Description":"III : L'Express du Comté d'Essex","GMNotes":"{\"data\":\"The Essex County Express\",\"easy\":false,\"expert\":false,\"hard\":false,\"normal\":false,\"standalone\":true}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.8745098,"g":0.8,"b":0.7019608},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend","LuaScriptState":"","XmlUI":""},{"GUID":"d19c9f","Name":"Custom_Model","Transform":{"posX":-24.2853889,"posY":1.76629925,"posZ":26.88081,"rotX":0.00000519779132,"rotY":0.000191075815,"rotZ":-1.93863173e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":350,\"text\":\"Hors Jeu\"}","XmlUI":""},{"GUID":"d87cdb","Name":"Card","Transform":{"posX":4.50000143,"posY":1.51896679,"posZ":12.9999971,"rotX":0.0108923391,"rotY":179.9912,"rotZ":0.00494658248,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Wagon","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02169\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22706,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d8c6a2","Name":"Custom_Model","Transform":{"posX":-20.9699154,"posY":1.76630056,"posZ":11.946847,"rotX":0.00000480822928,"rotY":0.0003587333,"rotZ":3.52912082e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Placement locomotive\"}","XmlUI":""},{"GUID":"f43d73","Name":"Card","Transform":{"posX":-6.99999857,"posY":1.51996,"posZ":12.9999971,"rotX":0.01089221,"rotY":179.991287,"rotZ":0.004946634,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Wagon","Description":"Train.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02171\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Train.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":22709,"SidewaysCard":false,"CustomDeck":{"227":{"FaceURL":"https://i.imgur.com/c9RZqMN.jpg","BackURL":"https://i.imgur.com/ZcuZ22n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}],"AttachedDecals":[{"Transform":{"posX":-0.0021877822,"posY":-0.08963572,"posZ":-0.00288731651,"rotX":270,"rotY":359.869568,"rotZ":0,"scaleX":2.00000215,"scaleY":2.00000238,"scaleZ":2.00000262},"CustomDecal":{"Name":"dunwich_back","ImageURL":"http://cloud-3.steamusercontent.com/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/","Size":7.4}}]},{"GUID":"4e84af","Name":"Custom_Model_Bag","Transform":{"posX":-10,"posY":0.979997635,"posZ":45,"rotX":-0.00000494178676,"rotY":180.025543,"rotZ":5.108418e-7,"scaleX":1.20052135,"scaleY":0.249882281,"scaleZ":1.3145982},"Nickname":"I-A : Activité Extrascolaire","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1991184321466653044/E8248DB08D597167DBA8E3D2CC03941E9FFF96DA/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"018503\":{\"lock\":true,\"pos\":{\"x\":13.4999980926514,\"y\":1.51609861850739,\"z\":2.00000405311584},\"rot\":{\"x\":0.0108912121504545,\"y\":180.004257202148,\"z\":0.00494912592694163},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"104a9a\":{\"lock\":false,\"pos\":{\"x\":-8.50000286102295,\"y\":1.52065980434418,\"z\":16.0000038146973},\"rot\":{\"x\":0.010891567915678,\"y\":179.999938964844,\"z\":0.00494832266122103},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"118416\":{\"lock\":false,\"pos\":{\"x\":-22.5000019073486,\"y\":1.77885675430298,\"z\":8.49999809265137},\"rot\":{\"x\":-5.03218188896426E-06,\"y\":180.022384643555,\"z\":1.89546895512649E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"26b179\":{\"lock\":false,\"pos\":{\"x\":-29.0000057220459,\"y\":1.77885711193085,\"z\":4.49999284744263},\"rot\":{\"x\":-5.03810906593571E-06,\"y\":180.000534057617,\"z\":3.60332762738835E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2e37c4\":{\"lock\":false,\"pos\":{\"x\":2.49999833106995,\"y\":1.51970982551575,\"z\":16.0000038146973},\"rot\":{\"x\":0.010891548357904,\"y\":180,\"z\":0.00494832405820489},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2efca1\":{\"lock\":true,\"pos\":{\"x\":2.49999761581421,\"y\":1.51704859733582,\"z\":2.00000286102295},\"rot\":{\"x\":0.0108912540599704,\"y\":180.003021240234,\"z\":0.00494876550510526},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"444795\":{\"lock\":false,\"pos\":{\"x\":-25.5000038146973,\"y\":1.77885675430298,\"z\":8.49999618530273},\"rot\":{\"x\":-5.09400433656992E-06,\"y\":179.985107421875,\"z\":1.54397081786328E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"44ca63\":{\"lock\":false,\"pos\":{\"x\":-3.00000143051147,\"y\":1.50591492652893,\"z\":12.5000038146973},\"rot\":{\"x\":-0.0011614611139521,\"y\":60.0000648498535,\"z\":359.988067626953},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4badac\":{\"lock\":false,\"pos\":{\"x\":7.99999856948853,\"y\":1.50563025474548,\"z\":16.0000038146973},\"rot\":{\"x\":0.00494756316766143,\"y\":90.0000076293945,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4ef076\":{\"lock\":false,\"pos\":{\"x\":17.4999980926514,\"y\":1.50480973720551,\"z\":16.0000038146973},\"rot\":{\"x\":0.00494849402457476,\"y\":90.0051803588867,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"502f4f\":{\"lock\":false,\"pos\":{\"x\":-22.5000038146973,\"y\":1.77885711193085,\"z\":4.49999666213989},\"rot\":{\"x\":-5.12601218360942E-06,\"y\":179.968017578125,\"z\":9.50900727048065E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5953bc\":{\"lock\":false,\"pos\":{\"x\":-8.50000190734863,\"y\":1.50638973712921,\"z\":12.5000038146973},\"rot\":{\"x\":0.0108898431062698,\"y\":180.0205078125,\"z\":0.00496190926060081},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5b52fc\":{\"lock\":false,\"pos\":{\"x\":-25.5000038146973,\"y\":1.77885711193085,\"z\":4.49999332427979},\"rot\":{\"x\":-4.93731113238027E-06,\"y\":180.001403808594,\"z\":5.52648238283382E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6b2b52\":{\"lock\":false,\"pos\":{\"x\":23.5000991821289,\"y\":1.51380920410156,\"z\":-5.50000143051147},\"rot\":{\"x\":0.010891005396843,\"y\":180.005645751953,\"z\":0.00494918087497354},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":2.49999809265137,\"y\":1.50543987751007,\"z\":12.5000038146973},\"rot\":{\"x\":0.0108897890895605,\"y\":180.020477294922,\"z\":0.00495830876752734},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7705b1\":{\"lock\":false,\"pos\":{\"x\":-3.00000238418579,\"y\":1.50658023357391,\"z\":16.0000038146973},\"rot\":{\"x\":0.00494753243401647,\"y\":90.0000610351563,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7d1653\":{\"lock\":false,\"pos\":{\"x\":-29.0000038146973,\"y\":1.77885675430298,\"z\":8.4999942779541},\"rot\":{\"x\":-4.95620997753576E-06,\"y\":179.990905761719,\"z\":1.14318424948578E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"94d30e\":{\"lock\":true,\"pos\":{\"x\":20.9999980926514,\"y\":1.51811218261719,\"z\":16.0000038146973},\"rot\":{\"x\":0.0108915967866778,\"y\":180,\"z\":0.00494826026260853},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"95e2ed\":{\"lock\":false,\"pos\":{\"x\":7.99999809265137,\"y\":1.5049649477005,\"z\":12.5000038146973},\"rot\":{\"x\":0.00973096955567598,\"y\":120.000015258789,\"z\":359.993041992188},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"98e04b\":{\"lock\":false,\"pos\":{\"x\":17.5000019073486,\"y\":1.53600025177002,\"z\":-5.99989986419678},\"rot\":{\"x\":0.00494927819818258,\"y\":90.0050048828125,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a4055a\":{\"lock\":false,\"pos\":{\"x\":-32,\"y\":1.8353,\"z\":4.5},\"rot\":{\"x\":0,\"y\":179.985,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"a730db\":{\"lock\":false,\"pos\":{\"x\":12.5000009536743,\"y\":1.53643202781677,\"z\":-5.99990177154541},\"rot\":{\"x\":0.00494798365980387,\"y\":90.0000381469727,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b4cb94\":{\"lock\":false,\"pos\":{\"x\":2.49999833106995,\"y\":1.51837921142578,\"z\":9.00000381469727},\"rot\":{\"x\":0.0108915399760008,\"y\":180.000274658203,\"z\":0.00494841253384948},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c37089\":{\"lock\":false,\"pos\":{\"x\":-32.0001068115234,\"y\":1.77885675430298,\"z\":8.49989223480225},\"rot\":{\"x\":-5.05144180351635E-06,\"y\":180.016677856445,\"z\":1.32333639157878E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c51b95\":{\"lock\":false,\"pos\":{\"x\":13.4999980926514,\"y\":1.50315928459167,\"z\":5.50000381469727},\"rot\":{\"x\":359.989105224609,\"y\":-1.25700444186805E-05,\"z\":-0.0049522528424859},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"c6ab70\":{\"lock\":false,\"pos\":{\"x\":13.4999980926514,\"y\":1.51875984668732,\"z\":16.0000038146973},\"rot\":{\"x\":0.0108916126191616,\"y\":180.000259399414,\"z\":0.00494846096262336},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d2e6e8\":{\"lock\":false,\"pos\":{\"x\":-8.50000190734863,\"y\":1.51932919025421,\"z\":9.00000381469727},\"rot\":{\"x\":0.0108916098251939,\"y\":180.000274658203,\"z\":0.00494841579347849},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f4527f\":{\"lock\":false,\"pos\":{\"x\":2.49999809265137,\"y\":1.50410926342011,\"z\":5.50000381469727},\"rot\":{\"x\":359.989105224609,\"y\":0.0127857318148017,\"z\":-0.00495709991082549},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"fa26f3\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.71950459480286,\"z\":-3},\"rot\":{\"x\":-0.000591246644034982,\"y\":180.000900268555,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fedcda\":{\"lock\":false,\"pos\":{\"x\":13.4999980926514,\"y\":1.51742923259735,\"z\":9.00000381469727},\"rot\":{\"x\":0.0108916237950325,\"y\":180.000030517578,\"z\":0.00494846561923623},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"018503","Name":"CardCustom","Transform":{"posX":13.4999981,"posY":1.51609862,"posZ":2.000004,"rotX":0.0108912122,"rotY":180.004257,"rotZ":0.004949126,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755616213/4BA2D77C786D6072A7ECBD7B99A0A7C3C2048E41/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755616213/4BA2D77C786D6072A7ECBD7B99A0A7C3C2048E41/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"104a9a","Name":"Card","Transform":{"posX":-8.500004,"posY":1.5206598,"posZ":16.0000038,"rotX":0.0108915893,"rotY":179.999924,"rotZ":0.00494824257,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bibliothèque Orne","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02050\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Square\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Square\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114605,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"118416","Name":"Card","Transform":{"posX":-22.5000019,"posY":1.77890575,"posZ":8.499998,"rotX":-0.00000485378951,"rotY":180.022415,"rotZ":1.59033647e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bureaux des Enseignants","Description":"[Il se Fait Tard]\nMiskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02055\",\n  \"locationBack\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Tee\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Tee\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114611,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"26b179","Name":"Card","Transform":{"posX":-29.00001,"posY":1.77890611,"posZ":4.49998856,"rotX":-0.00000501534169,"rotY":180.000565,"rotZ":3.11384021e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Mélange Alchimique","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02059\",\n  \"traits\": \"Item. Science.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114812,"SidewaysCard":false,"CustomDeck":{"1148":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2e37c4","Name":"Card","Transform":{"posX":2.49999833,"posY":1.51970983,"posZ":16.0000038,"rotX":0.0108914673,"rotY":180,"rotZ":0.00494818157,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Cour de l'Université","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02048\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Hourglass|Square|Diamond|Circle\",\n    \"icons\": \"Plus\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle|Hourglass|Square|Diamond|Circle\",\n    \"icons\": \"Plus\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114607,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2efca1","Name":"CardCustom","Transform":{"posX":2.49999762,"posY":1.5170486,"posZ":2.00000286,"rotX":0.0108912541,"rotY":180.003021,"rotZ":0.00494876551,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106500,"SidewaysCard":false,"CustomDeck":{"11065":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755654274/E1C516725CC32556A9F093B96384451BDB4AB8D1/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755654274/E1C516725CC32556A9F093B96384451BDB4AB8D1/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"444795","Name":"Card","Transform":{"posX":-25.5000057,"posY":1.77890575,"posZ":8.499995,"rotX":-0.00000498325653,"rotY":179.985138,"rotZ":-3.27899556e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bureaux des Enseignants","Description":"[La Nuit Vient de Tomber]\nMiskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02054\",\n  \"locationBack\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Tee\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Tee\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114603,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"44ca63","Name":"Custom_Tile","Transform":{"posX":-3.00000143,"posY":1.50591481,"posZ":12.5000038,"rotX":-0.00116102549,"rotY":60.0000572,"rotZ":359.9881,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"4badac","Name":"Custom_Tile","Transform":{"posX":7.999999,"posY":1.50563025,"posZ":16.0000038,"rotX":0.00494777132,"rotY":90.00001,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"4ef076","Name":"Custom_Tile","Transform":{"posX":17.4999981,"posY":1.50480974,"posZ":16.0000038,"rotX":0.00494830543,"rotY":90.0051346,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"502f4f","Name":"Card","Transform":{"posX":-22.5000057,"posY":1.77890611,"posZ":4.49999475,"rotX":-0.000005023423,"rotY":179.968018,"rotZ":1.39769043e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Dortoirs","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02052\",\n  \"locationBack\": {\n    \"connections\": \"Diamond\",\n    \"icons\": \"SlantedEquals\",\n    \"uses\": {\n      \"countPerInvestigator\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond\",\n    \"icons\": \"SlantedEquals\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114602,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5953bc","Name":"Custom_Tile","Transform":{"posX":-8.500002,"posY":1.50638974,"posZ":12.5000038,"rotX":0.0108897937,"rotY":180.020477,"rotZ":0.004959387,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"5b52fc","Name":"Card","Transform":{"posX":-25.5000057,"posY":1.77890611,"posZ":4.499991,"rotX":-0.00000498978443,"rotY":180.0014,"rotZ":-5.39853424e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Labo d'Alchimie","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02057\",\n  \"locationBack\": {\n    \"connections\": \"Hourglass\",\n    \"icons\": \"Tilde\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Hourglass\",\n    \"icons\": \"Tilde\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114608,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6b2b52","Name":"Card","Transform":{"posX":23.5001,"posY":1.5138092,"posZ":-5.500002,"rotX":0.0108910808,"rotY":180.0056,"rotZ":0.004949209,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Référence","Description":"Activité Extrascolaire","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114300,"SidewaysCard":false,"CustomDeck":{"1143":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7234af","Name":"Custom_Tile","Transform":{"posX":2.499998,"posY":1.50543988,"posZ":12.5000038,"rotX":0.0108899651,"rotY":180.0205,"rotZ":0.004956644,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"7705b1","Name":"Custom_Tile","Transform":{"posX":-3.00000286,"posY":1.50658023,"posZ":16.0000038,"rotX":0.00494783,"rotY":90.00003,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"7d1653","Name":"Card","Transform":{"posX":-29.0000057,"posY":1.77890575,"posZ":8.499991,"rotX":-0.00000492927074,"rotY":179.990967,"rotZ":1.89676257e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"L'Expérience","Description":"Quelque Chose a Mal Tourné","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 7,\n  \"id\": \"02058\",\n  \"traits\": \"Monster. Abomination. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1111910,"SidewaysCard":false,"CustomDeck":{"11119":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"94d30e","Name":"CardCustom","Transform":{"posX":20.9999981,"posY":1.51811218,"posZ":16.0000038,"rotX":0.0108915968,"rotY":180,"rotZ":0.00494826026,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106600,"SidewaysCard":false,"CustomDeck":{"11066":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755659049/9AF2DF88904D62C086CAAA295BE046CBE8E65415/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755659049/9AF2DF88904D62C086CAAA295BE046CBE8E65415/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"95e2ed","Name":"Custom_Tile","Transform":{"posX":7.999998,"posY":1.50496483,"posZ":12.5000038,"rotX":0.009731153,"rotY":120.000015,"rotZ":359.993042,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"98e04b","Name":"Deck","Transform":{"posX":17.5,"posY":1.53600025,"posZ":-5.99989653,"rotX":0.004948848,"rotY":90.0050049,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte","Description":"Activité Extrascolaire","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[114505,114504,114503],"CustomDeck":{"1145":{"FaceURL":"https://i.imgur.com/gPqLiw9.jpg","BackURL":"https://i.imgur.com/6gw6nAo.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"59bc56","Name":"Card","Transform":{"posX":17.5000114,"posY":1.64569831,"posZ":-5.99990273,"rotX":0.00497501,"rotY":90.00489,"rotZ":359.988953,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Sécurité du Campus","Description":"Acte 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02047\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114505,"SidewaysCard":true,"CustomDeck":{"1145":{"FaceURL":"https://i.imgur.com/gPqLiw9.jpg","BackURL":"https://i.imgur.com/6gw6nAo.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a9e994","Name":"Card","Transform":{"posX":17.5000114,"posY":1.60670853,"posZ":-5.99990273,"rotX":0.005852443,"rotY":90.00489,"rotZ":359.988373,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Localiser Rice","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02046\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114504,"SidewaysCard":true,"CustomDeck":{"1145":{"FaceURL":"https://i.imgur.com/gPqLiw9.jpg","BackURL":"https://i.imgur.com/6gw6nAo.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"75b7c8","Name":"Card","Transform":{"posX":17.5000172,"posY":1.61256731,"posZ":-5.99991226,"rotX":0.006968325,"rotY":90.00489,"rotZ":359.991272,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Après des Heures","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 3,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02045\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114503,"SidewaysCard":true,"CustomDeck":{"1145":{"FaceURL":"https://i.imgur.com/gPqLiw9.jpg","BackURL":"https://i.imgur.com/6gw6nAo.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"a4055a","Name":"Custom_Model_Bag","Transform":{"posX":-32.0000038,"posY":1.83530128,"posZ":4.49999571,"rotX":-0.00000482420273,"rotY":179.985031,"rotZ":-1.26649482e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Soutiens/faiblesses d'histoire","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/5077277234347423622/F89B4508C6E2782780C2B5593FB68379E0FB2DB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"","LuaScriptState":"{\"ml\":[]}","XmlUI":"","ContainedObjects":[{"GUID":"3ebb99","Name":"Card","Transform":{"posX":-31,"posY":1.93730807,"posZ":4,"rotX":0.0029528325,"rotY":180.000854,"rotZ":0.04390311,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 2,\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02040\",\n  \"sanity\": 2,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":115015,"SidewaysCard":false,"CustomDeck":{"1150":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a9ecc5","Name":"Card","Transform":{"posX":-32.5,"posY":1.93745565,"posZ":4,"rotX":0.00201355969,"rotY":180.015579,"rotZ":-0.00133052992,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Professeur Warren Rice","Description":"Professeur de Langues","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 3,\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02061\",\n  \"intellectIcons\": 1,\n  \"sanity\": 3,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":115114,"SidewaysCard":false,"CustomDeck":{"1151":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"a730db","Name":"Deck","Transform":{"posX":12.499999,"posY":1.536432,"posZ":-5.9999,"rotX":0.00494814431,"rotY":90.0001,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Intrigue","Description":"Activité Extrascolaire","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[114402,114401,114400],"CustomDeck":{"1144":{"FaceURL":"https://i.imgur.com/gPqLiw9.jpg","BackURL":"https://i.imgur.com/6gw6nAo.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"cc138e","Name":"Card","Transform":{"posX":12.5000019,"posY":1.646127,"posZ":-5.99991035,"rotX":0.005016734,"rotY":90.0002,"rotZ":359.9885,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Bête Déchaînée","Description":"Intrigue 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 2,\n  \"id\": \"02044\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114402,"SidewaysCard":true,"CustomDeck":{"1144":{"FaceURL":"https://i.imgur.com/gPqLiw9.jpg","BackURL":"https://i.imgur.com/6gw6nAo.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1ae35b","Name":"Card","Transform":{"posX":12.5000019,"posY":1.60711026,"posZ":-5.999911,"rotX":0.00567679852,"rotY":90.0002,"rotZ":359.9898,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au Cœur de la Nuit","Description":"Intrigue 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 3,\n  \"id\": \"02043\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114401,"SidewaysCard":true,"CustomDeck":{"1144":{"FaceURL":"https://i.imgur.com/gPqLiw9.jpg","BackURL":"https://i.imgur.com/6gw6nAo.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"22da2d","Name":"Card","Transform":{"posX":12.5000057,"posY":1.61307776,"posZ":-5.99992037,"rotX":0.00784011651,"rotY":90.0002,"rotZ":359.985718,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Des Couloirs Silencieux","Description":"Intrigue 1a","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 7,\n  \"id\": \"02042\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114400,"SidewaysCard":true,"CustomDeck":{"1144":{"FaceURL":"https://i.imgur.com/gPqLiw9.jpg","BackURL":"https://i.imgur.com/6gw6nAo.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"b4cb94","Name":"Card","Transform":{"posX":2.49999857,"posY":1.51837921,"posZ":9.000004,"rotX":0.0108914487,"rotY":180.000259,"rotZ":0.0049483194,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Maison des Étudiants","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02051\",\n  \"locationBack\": {\n    \"connections\": \"Plus|SlantedEquals\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|SlantedEquals\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114604,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c37089","Name":"Card","Transform":{"posX":-32.00011,"posY":1.77890575,"posZ":8.499887,"rotX":-0.00000489299327,"rotY":180.016663,"rotZ":-2.12246036e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"« Jazz » Mulligan","Description":"Le Concierge en Chef","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02060\",\n  \"sanity\": 2,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114913,"SidewaysCard":false,"CustomDeck":{"1149":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c51b95","Name":"Custom_Tile","Transform":{"posX":13.4999981,"posY":1.50315928,"posZ":5.50000334,"rotX":359.9891,"rotY":8.451117e-7,"rotZ":-0.00495266169,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"c6ab70","Name":"Card","Transform":{"posX":13.4999981,"posY":1.51875985,"posZ":16.0000038,"rotX":0.0108915726,"rotY":180.000259,"rotZ":0.004948318,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bâtiment des Sciences","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02056\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Tilde\",\n    \"icons\": \"Hourglass\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Tilde\",\n    \"icons\": \"Hourglass\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114609,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d2e6e8","Name":"Card","Transform":{"posX":-8.500002,"posY":1.51932919,"posZ":9.000004,"rotX":0.0108914683,"rotY":180.000275,"rotZ":0.00494836271,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bâtiment des Humanités","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02049\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Triangle\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Triangle\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114606,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f4527f","Name":"Custom_Tile","Transform":{"posX":2.499998,"posY":1.50410926,"posZ":5.500004,"rotX":359.9891,"rotY":0.012785634,"rotZ":-0.00495617324,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"fa26f3","Name":"Deck","Transform":{"posX":30.5,"posY":1.71950459,"posZ":-3,"rotX":-0.0005911806,"rotY":180.0009,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Rencontre","Description":"Activité Extrascolaire","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[15620,15623,15621,15622,15625,15624,15413,15418,15419,15416,15417,15928,15931,15926,15927,15929,15930,15509,15508,15512,15515,15514,15511,15806,15805,15810,15807,16900,16901,15702,15703,15704],"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"6533fc","Name":"Card","Transform":{"posX":30.5,"posY":9.574907,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Barrière Mystique","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02102\",\n  \"traits\": \"Hex. Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15620,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e2a503","Name":"Card","Transform":{"posX":30.5,"posY":9.37490749,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Barrière Mystique","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02102\",\n  \"traits\": \"Hex. Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15623,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ff0620","Name":"Card","Transform":{"posX":30.5,"posY":9.174908,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terreur de l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02101\",\n  \"traits\": \"Hex. Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15621,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"62531f","Name":"Card","Transform":{"posX":30.5,"posY":8.974907,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terreur de l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02101\",\n  \"traits\": \"Hex. Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15622,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"11d71d","Name":"Card","Transform":{"posX":30.5,"posY":8.427388,"posZ":-3,"rotX":-0.000590664742,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Propulsé dans l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02100\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15625,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"217f6b","Name":"Card","Transform":{"posX":30.5,"posY":8.574907,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Propulsé dans l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02100\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15624,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"74772f","Name":"Card","Transform":{"posX":30.5,"posY":6.627389,"posZ":-3,"rotX":-0.0005905599,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Avides de Mort","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02091\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15413,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ec81eb","Name":"Card","Transform":{"posX":30.5,"posY":7.17490768,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Avides de Mort","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02091\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15418,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b248fe","Name":"Card","Transform":{"posX":30.5,"posY":6.37490845,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15419,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c75f9e","Name":"Card","Transform":{"posX":30.5,"posY":6.57490826,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15416,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"34acc2","Name":"Card","Transform":{"posX":30.5,"posY":6.774908,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15417,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5683cc","Name":"Card","Transform":{"posX":30.5,"posY":8.37490749,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Mage de Yog-Sothoth","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02087\",\n  \"traits\": \"Humanoid. Sorcerer.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15928,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f618d3","Name":"Card","Transform":{"posX":30.5,"posY":7.974907,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02086\",\n  \"traits\": \"Humanoid. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15931,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0090a4","Name":"Card","Transform":{"posX":30.5,"posY":7.77490664,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02086\",\n  \"traits\": \"Humanoid. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15926,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"16346c","Name":"Card","Transform":{"posX":30.5,"posY":7.82738829,"posZ":-3,"rotX":-0.000590709969,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02086\",\n  \"traits\": \"Humanoid. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15927,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"bdf835","Name":"Card","Transform":{"posX":30.5,"posY":7.37490749,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Lumière d'Aforgomon","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02085\",\n  \"traits\": \"Pact. Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15929,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f31998","Name":"Card","Transform":{"posX":30.5,"posY":7.22738838,"posZ":-3,"rotX":-0.000590579642,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Lumière d'Aforgomon","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02085\",\n  \"traits\": \"Pact. Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15930,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b52985","Name":"Card","Transform":{"posX":30.5,"posY":10.7749071,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15509,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc2af0","Name":"Card","Transform":{"posX":30.5,"posY":10.3749075,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15508,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ed11ad","Name":"Card","Transform":{"posX":30.5,"posY":10.5749073,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15512,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5b9c33","Name":"Card","Transform":{"posX":30.5,"posY":9.774907,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15515,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e0e2","Name":"Card","Transform":{"posX":30.5,"posY":9.974907,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15514,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3bd92a","Name":"Card","Transform":{"posX":30.5,"posY":10.1749077,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15511,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d64d65","Name":"Card","Transform":{"posX":30.5,"posY":4.97490835,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Offre de Pouvoir","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01178\",\n  \"traits\": \"Pact.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15806,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1aaf3a","Name":"Card","Transform":{"posX":30.5,"posY":4.82738924,"posZ":-3,"rotX":-0.000590509269,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Offre de Pouvoir","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01178\",\n  \"traits\": \"Pact.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15805,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8f8689","Name":"Card","Transform":{"posX":30.5,"posY":5.72130442,"posZ":-3,"rotX":-0.0005841684,"rotY":180.000885,"rotZ":180.001038,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Observateur Yithien","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01177\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15810,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8a6a1d","Name":"Card","Transform":{"posX":30.5,"posY":4.774908,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Observateur Yithien","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01177\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15807,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4b7dd0","Name":"Card","Transform":{"posX":30.5,"posY":5.57490826,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Porte Verrouillée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16900,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c1f477","Name":"Card","Transform":{"posX":30.5,"posY":5.37490845,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Porte Verrouillée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16901,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1c3c50","Name":"Card","Transform":{"posX":30.5,"posY":6.174908,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15702,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"67cfd5","Name":"Card","Transform":{"posX":30.5,"posY":5.97490835,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15703,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7b9eb5","Name":"Card","Transform":{"posX":30.5,"posY":5.774908,"posZ":-3,"rotX":-0.000591043441,"rotY":180.000885,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15704,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"fedcda","Name":"Card","Transform":{"posX":13.4999981,"posY":1.51742923,"posZ":9.000004,"rotX":0.010891431,"rotY":180.000015,"rotZ":0.004948276,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bâtiment de l'Administration","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02053\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Tee\",\n    \"icons\": \"Circle\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Tee\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":114601,"SidewaysCard":false,"CustomDeck":{"1146":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}],"AttachedDecals":[{"Transform":{"posX":-0.0021877822,"posY":-0.08963572,"posZ":-0.00288731651,"rotX":270,"rotY":359.869568,"rotZ":0,"scaleX":2.00000215,"scaleY":2.00000238,"scaleZ":2.00000262},"CustomDecal":{"Name":"dunwich_back","ImageURL":"http://cloud-3.steamusercontent.com/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/","Size":7.4}}]},{"GUID":"5338a5","Name":"Custom_Model_Bag","Transform":{"posX":8.000009,"posY":0.979997635,"posZ":45.0000038,"rotX":-0.00000475392,"rotY":180.023026,"rotZ":9.692712e-7,"scaleX":1.20052135,"scaleY":0.249882281,"scaleZ":1.3145982},"Nickname":"IV : Du Sang sur l'Autel","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118403755676/B4B5DEF8B5B23D09A19EFAD4AD41DA3E9F6B2BBC/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"0314fd\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.53643202781677,\"z\":-5.99970960617065},\"rot\":{\"x\":0.00494933687150478,\"y\":90.0065231323242,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"03dd9b\":{\"lock\":false,\"pos\":{\"x\":-26.2245712280273,\"y\":1.76629912853241,\"z\":28.7263259887695},\"rot\":{\"x\":4.72918964078417E-06,\"y\":0.000365937128663063,\"z\":6.5482012701068E-08},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"09de37\":{\"lock\":false,\"pos\":{\"x\":35.0375823974609,\"y\":1.54540705680847,\"z\":0.200500041246414},\"rot\":{\"x\":0.000591196701861918,\"y\":0.00990149285644293,\"z\":-0.00107029068749398},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"0dd4f6\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.50373792648315,\"z\":6.5},\"rot\":{\"x\":359.988800048828,\"y\":314.999908447266,\"z\":0.00420516123995185},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"1e79fd\":{\"lock\":true,\"pos\":{\"x\":-1.00000274181366,\"y\":1.52124774456024,\"z\":22.5000057220459},\"rot\":{\"x\":0.0108916563913226,\"y\":180.000137329102,\"z\":180.004959106445},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1f3113\":{\"lock\":false,\"pos\":{\"x\":17,\"y\":1.50304710865021,\"z\":6.5},\"rot\":{\"x\":-0.00420293910428882,\"y\":45.0002098083496,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"27a3e1\":{\"lock\":false,\"pos\":{\"x\":-27.0000057220459,\"y\":1.81511604785919,\"z\":4.49999380111694},\"rot\":{\"x\":-5.14707926413394E-06,\"y\":180.000411987305,\"z\":-8.20029988357618E-10},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"29f34e\":{\"lock\":false,\"pos\":{\"x\":-23.00022315979,\"y\":1.77890610694885,\"z\":4.49977588653564},\"rot\":{\"x\":-4.88274872623151E-06,\"y\":180.000076293945,\"z\":6.58767191907828E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3a93d1\":{\"lock\":true,\"pos\":{\"x\":-1.00000238418579,\"y\":1.51725578308105,\"z\":1.5000034570694},\"rot\":{\"x\":0.0108915297314525,\"y\":179.999954223633,\"z\":180.004959106445},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"41928b\":{\"lock\":false,\"pos\":{\"x\":-21.5,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9718,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"44b0c5\":{\"lock\":false,\"pos\":{\"x\":12.9999990463257,\"y\":1.50443804264069,\"z\":12},\"rot\":{\"x\":-0.00494771171361208,\"y\":270,\"z\":0.0108985053375363},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"44e5c2\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.51864719390869,\"z\":12},\"rot\":{\"x\":0.0108900843188167,\"y\":180.016784667969,\"z\":0.00495143141597509},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"46de24\":{\"lock\":true,\"pos\":{\"x\":-8.00000190734863,\"y\":1.51985633373261,\"z\":12.0000038146973},\"rot\":{\"x\":0.0108915958553553,\"y\":179.999588012695,\"z\":180.004959106445},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"53ebe8\":{\"lock\":false,\"pos\":{\"x\":-21.8863506317139,\"y\":1.76630008220673,\"z\":17.7966117858887},\"rot\":{\"x\":4.7258681661333E-06,\"y\":359.988159179688,\"z\":3.49361073403998E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"5747c6\":{\"lock\":false,\"pos\":{\"x\":17.0000019073486,\"y\":1.50513803958893,\"z\":17.5},\"rot\":{\"x\":359.988800048828,\"y\":314.999633789063,\"z\":0.00420411629602313},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"6f06f5\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.50703847408295,\"z\":22.5},\"rot\":{\"x\":0.00494779599830508,\"y\":90.0002365112305,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7312da\":{\"lock\":false,\"pos\":{\"x\":17.5000019073486,\"y\":1.53118622303009,\"z\":-5.99980068206787},\"rot\":{\"x\":0.00494897924363613,\"y\":90.0047912597656,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"78fbe5\":{\"lock\":false,\"pos\":{\"x\":-18.9999,\"y\":1.8353,\"z\":9.9999},\"rot\":{\"x\":0,\"y\":179.9716,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"82a9d3\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.50582885742188,\"z\":17.5},\"rot\":{\"x\":-0.0042029432952404,\"y\":45.0001983642578,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"837206\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.50308978557587,\"z\":1.49999821186066},\"rot\":{\"x\":0.00494759855791926,\"y\":89.9999542236328,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"868ba5\":{\"lock\":true,\"pos\":{\"x\":20,\"y\":1.51743817329407,\"z\":12.0000038146973},\"rot\":{\"x\":0.0108919888734818,\"y\":179.995849609375,\"z\":180.004959106445},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"89f177\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9736,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"8aea31\":{\"lock\":false,\"pos\":{\"x\":-22.0038299560547,\"y\":1.83530032634735,\"z\":16.0025062561035},\"rot\":{\"x\":-6.68917482471443E-06,\"y\":179.996047973633,\"z\":9.24207199659577E-08},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"9474c4\":{\"lock\":false,\"pos\":{\"x\":23.5002002716064,\"y\":1.51380920410156,\"z\":-5.50010538101196},\"rot\":{\"x\":0.0108928782865405,\"y\":179.984375,\"z\":0.00494529819115996},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9c0ce6\":{\"lock\":false,\"pos\":{\"x\":35,\"y\":1.54437899589539,\"z\":2.99999976158142},\"rot\":{\"x\":-0.000590832089073956,\"y\":179.97900390625,\"z\":0.00107070559170097},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"a7c7d2\":{\"lock\":false,\"pos\":{\"x\":-30.5,\"y\":1.8353,\"z\":24.5},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"ae6a50\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.70506250858307,\"z\":-3},\"rot\":{\"x\":-0.000591257761698216,\"y\":180.001693725586,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b302b7\":{\"lock\":false,\"pos\":{\"x\":-5,\"y\":1.50703799724579,\"z\":17.5},\"rot\":{\"x\":-0.0042030275799334,\"y\":45.0000991821289,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"b3c682\":{\"lock\":false,\"pos\":{\"x\":-23.4894,\"y\":1.8353,\"z\":13.5101},\"rot\":{\"x\":0,\"y\":179.9727,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"c078a5\":{\"lock\":false,\"pos\":{\"x\":-34.0005645751953,\"y\":1.77890610694885,\"z\":4.49954509735107},\"rot\":{\"x\":-4.82360565001727E-06,\"y\":180.000030517578,\"z\":-8.47913810275713E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c56db4\":{\"lock\":false,\"pos\":{\"x\":-1.00000023841858,\"y\":1.50564706325531,\"z\":12},\"rot\":{\"x\":0.00494784861803055,\"y\":90.0002822875977,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"cabee3\":{\"lock\":false,\"pos\":{\"x\":2.99997782707214,\"y\":1.60163223743439,\"z\":-6.49997568130493},\"rot\":{\"x\":0.0171775911003351,\"y\":180.012680053711,\"z\":0.00565574178472161},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"df5b1f\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.8353,\"z\":13.4999},\"rot\":{\"x\":0,\"y\":179.9712,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"e23149\":{\"lock\":true,\"pos\":{\"x\":13.0000009536743,\"y\":1.52003860473633,\"z\":22.5000038146973},\"rot\":{\"x\":0.0108915893360972,\"y\":179.999496459961,\"z\":180.004959106445},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e2ee03\":{\"lock\":true,\"pos\":{\"x\":13,\"y\":1.51604676246643,\"z\":1.50000011920929},\"rot\":{\"x\":0.0108915586024523,\"y\":179.999542236328,\"z\":180.004959106445},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e59274\":{\"lock\":false,\"pos\":{\"x\":-20.0001182556152,\"y\":1.77890610694885,\"z\":4.49978733062744},\"rot\":{\"x\":-4.87831539430772E-06,\"y\":180.000106811523,\"z\":1.79947630130073E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e605c7\":{\"lock\":false,\"pos\":{\"x\":-30.5000038146973,\"y\":1.83530128002167,\"z\":4.49999618530273},\"rot\":{\"x\":-4.90393404106726E-06,\"y\":179.984802246094,\"z\":1.26042976944518E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"fd97c4\":{\"lock\":false,\"pos\":{\"x\":-5.00000143051147,\"y\":1.50494694709778,\"z\":6.5},\"rot\":{\"x\":359.988800048828,\"y\":314.999969482422,\"z\":0.00420446740463376},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}}}}","XmlUI":"","ContainedObjects":[{"GUID":"0314fd","Name":"Deck","Transform":{"posX":12.499999,"posY":1.53643215,"posZ":-5.999707,"rotX":0.004949276,"rotY":90.00659,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Intrigue","Description":"Du Sang sur l'Autel","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[21602,21601,21600],"CustomDeck":{"216":{"FaceURL":"https://i.imgur.com/mEtCc6a.jpg","BackURL":"https://i.imgur.com/YuNnl5Y.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"39ff10","Name":"Card","Transform":{"posX":12.4999962,"posY":4.601464,"posZ":-5.999758,"rotX":0.00494916644,"rotY":90.00649,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Nourrir la Bête","Description":"Intrigue 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 7,\n  \"id\": \"02198\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21602,"SidewaysCard":true,"CustomDeck":{"216":{"FaceURL":"https://i.imgur.com/mEtCc6a.jpg","BackURL":"https://i.imgur.com/YuNnl5Y.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a6fccb","Name":"Card","Transform":{"posX":12.4999962,"posY":4.801464,"posZ":-5.999758,"rotX":0.00494916644,"rotY":90.00649,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Faim des Anciens","Description":"Intrigue 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 6,\n  \"id\": \"02197\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21601,"SidewaysCard":true,"CustomDeck":{"216":{"FaceURL":"https://i.imgur.com/mEtCc6a.jpg","BackURL":"https://i.imgur.com/YuNnl5Y.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"89b58e","Name":"Card","Transform":{"posX":12.5000038,"posY":1.63043141,"posZ":-5.99977446,"rotX":0.003467193,"rotY":90.00649,"rotZ":359.987732,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Étranges Disparitions","Description":"Intrigue 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 6,\n  \"id\": \"02196\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21600,"SidewaysCard":true,"CustomDeck":{"216":{"FaceURL":"https://i.imgur.com/mEtCc6a.jpg","BackURL":"https://i.imgur.com/YuNnl5Y.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"03dd9b","Name":"Custom_Model","Transform":{"posX":-26.2245674,"posY":1.76629913,"posZ":28.72633,"rotX":0.0000044913736,"rotY":0.000382405677,"rotZ":-6.37198e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":450,\"text\":\"Retiré de la partie\"}","XmlUI":""},{"GUID":"09de37","Name":"Custom_Model","Transform":{"posX":35.0375824,"posY":1.545407,"posZ":0.2005,"rotX":0.0005912557,"rotY":0.009904153,"rotZ":-0.00106986728,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":300,\"text\":\"Sacrifices \\npotentiels\"}","XmlUI":""},{"GUID":"0dd4f6","Name":"Custom_Tile","Transform":{"posX":9,"posY":1.50373793,"posZ":6.5,"rotX":359.9888,"rotY":314.9999,"rotZ":0.004205195,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"1e79fd","Name":"CardCustom","Transform":{"posX":-1.00000274,"posY":1.52124774,"posZ":22.5000057,"rotX":0.0108916564,"rotY":180.000137,"rotZ":180.004959,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108500,"SidewaysCard":false,"CustomDeck":{"11085":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1f3113","Name":"Custom_Tile","Transform":{"posX":17,"posY":1.50304711,"posZ":6.5,"rotX":-0.0042029405,"rotY":45.00021,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"27a3e1","Name":"Deck","Transform":{"posX":-27.0000076,"posY":1.815116,"posZ":4.499991,"rotX":-0.000005149378,"rotY":180.000443,"rotZ":-4.22067359e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Bande de Naomi","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[18207,18203,1108700,279700,1108800,1108800],"CustomDeck":{"182":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"2797":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229777503/55A13270F3B20A1B9C84A0678370228A453AC62C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0},"11087":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229777503/55A13270F3B20A1B9C84A0678370228A453AC62C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0},"11088":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229776378/80A298BDA6AAB46A2F6F6231EA6F663CE41B055B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"fcf0e9","Name":"Card","Transform":{"posX":-27.000267,"posY":4.78582573,"posZ":4.499688,"rotX":0.000910704141,"rotY":180.001114,"rotZ":-0.000678689,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pourchassé","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02099\",\n  \"traits\": \"Tactic.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18207,"SidewaysCard":false,"CustomDeck":{"182":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d5b82e","Name":"Card","Transform":{"posX":-27.000267,"posY":5.08014774,"posZ":4.499689,"rotX":-0.0000051320394,"rotY":180.001114,"rotZ":-1.68911185e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pourchassé","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02099\",\n  \"traits\": \"Tactic.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18203,"SidewaysCard":false,"CustomDeck":{"182":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"612943","Name":"CardCustom","Transform":{"posX":-27.000267,"posY":5.280148,"posZ":4.499689,"rotX":-0.0000051320394,"rotY":180.001114,"rotZ":-1.68911185e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Malfrat","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02098\",\n  \"traits\": \"Humanoid. Criminal. Syndicate.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108700,"SidewaysCard":false,"CustomDeck":{"11087":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229777503/55A13270F3B20A1B9C84A0678370228A453AC62C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6faab1","Name":"CardCustom","Transform":{"posX":-27.000267,"posY":5.396165,"posZ":4.499689,"rotX":-0.000614794961,"rotY":180.001114,"rotZ":0.00382702658,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Malfrat","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02098\",\n  \"traits\": \"Humanoid. Criminal. Syndicate.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":279700,"SidewaysCard":false,"CustomDeck":{"2797":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229777503/55A13270F3B20A1B9C84A0678370228A453AC62C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"113ffe","Name":"CardCustom","Transform":{"posX":-27.000267,"posY":5.680148,"posZ":4.499689,"rotX":-0.0000051320394,"rotY":180.001114,"rotZ":-1.68911185e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Crapule d'O'Bannion","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02097\",\n  \"traits\": \"Humanoid. Criminal. Syndicate.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108800,"SidewaysCard":false,"CustomDeck":{"11088":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229776378/80A298BDA6AAB46A2F6F6231EA6F663CE41B055B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"858dcb","Name":"CardCustom","Transform":{"posX":-27.000267,"posY":1.92066789,"posZ":4.499689,"rotX":0.00197486184,"rotY":180.001114,"rotZ":-0.00178989582,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Crapule d'O'Bannion","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02097\",\n  \"traits\": \"Humanoid. Criminal. Syndicate.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108800,"SidewaysCard":false,"CustomDeck":{"11088":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304229776378/80A298BDA6AAB46A2F6F6231EA6F663CE41B055B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1835784131957489171/6E3F1D1BAA5FBB7101D3F84B5E8502CD0F7E299E/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"29f34e","Name":"Card","Transform":{"posX":-23.0002251,"posY":1.77890611,"posZ":4.499775,"rotX":-0.00000504985655,"rotY":180.000092,"rotZ":3.75321747e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Chambre Cachée","Description":"Prison de la Bête\nDunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02214\",\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"\",\n    \"victory\": 2\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21319,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3a93d1","Name":"CardCustom","Transform":{"posX":-1.00000238,"posY":1.51725578,"posZ":1.50000346,"rotX":0.01089153,"rotY":179.999954,"rotZ":180.004959,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108500,"SidewaysCard":false,"CustomDeck":{"11085":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":12.999999,"posY":1.504438,"posZ":12,"rotX":-0.00494759,"rotY":270,"rotZ":0.010898266,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"1":{"GUID":"b5d320","Name":"Custom_Tile","Transform":{"posX":-30.2242451,"posY":1.62478256,"posZ":3.86000347,"rotX":359.983643,"rotY":0.3773988,"rotZ":359.919922,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"44e5c2","Name":"Card","Transform":{"posX":6,"posY":1.51864719,"posZ":12,"rotX":0.010890007,"rotY":180.016785,"rotZ":0.00495139277,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terrains Communaux","Description":"Dunwich. Central.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02201\",\n  \"locationBack\": {\n    \"connections\": \"Square|Circle|Crescent\",\n    \"icons\": \"Plus\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Square|Circle|Crescent\",\n    \"icons\": \"Plus\"\n  },\n  \"traits\": \"Dunwich. Central.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21301,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"46de24","Name":"CardCustom","Transform":{"posX":-8.000002,"posY":1.51985633,"posZ":12.0000038,"rotX":0.0108915959,"rotY":179.999588,"rotZ":180.004959,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108500,"SidewaysCard":false,"CustomDeck":{"11085":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"53ebe8","Name":"Custom_Model","Transform":{"posX":-21.8863487,"posY":1.76630008,"posZ":17.7966137,"rotX":0.000004692968,"rotY":359.988159,"rotZ":-6.174828e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":400,\"text\":\"Lieux aléatoires\"}","XmlUI":""},{"GUID":"5747c6","Name":"Custom_Tile","Transform":{"posX":17.0000019,"posY":1.505138,"posZ":17.5,"rotX":359.9888,"rotY":314.999634,"rotZ":0.004203686,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"6f06f5","Name":"Custom_Tile","Transform":{"posX":6,"posY":1.50703847,"posZ":22.5,"rotX":0.004947901,"rotY":90.00024,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"7312da","Name":"Deck","Transform":{"posX":17.5000019,"posY":1.53118622,"posZ":-5.999797,"rotX":0.00494891871,"rotY":90.00474,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte","Description":"Du Sang sur l'Autel","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[21604,21603],"CustomDeck":{"216":{"FaceURL":"https://i.imgur.com/mEtCc6a.jpg","BackURL":"https://i.imgur.com/YuNnl5Y.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"b1593e","Name":"Card","Transform":{"posX":17.5000057,"posY":4.596218,"posZ":-5.999792,"rotX":0.004948991,"rotY":90.00478,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Chambre de la Bête","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02200\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21604,"SidewaysCard":true,"CustomDeck":{"216":{"FaceURL":"https://i.imgur.com/mEtCc6a.jpg","BackURL":"https://i.imgur.com/YuNnl5Y.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c9e2c5","Name":"Card","Transform":{"posX":17.5000134,"posY":1.621335,"posZ":-5.99980831,"rotX":0.003487502,"rotY":90.00478,"rotZ":359.987732,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chercher des Réponses","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02199\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21603,"SidewaysCard":true,"CustomDeck":{"216":{"FaceURL":"https://i.imgur.com/mEtCc6a.jpg","BackURL":"https://i.imgur.com/YuNnl5Y.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"82a9d3","Name":"Custom_Tile","Transform":{"posX":9,"posY":1.505829,"posZ":17.5,"rotX":-0.004203035,"rotY":45.0002,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"837206","Name":"Custom_Tile","Transform":{"posX":5.5,"posY":1.50308979,"posZ":1.49999762,"rotX":0.004947735,"rotY":89.99994,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"868ba5","Name":"CardCustom","Transform":{"posX":20,"posY":1.51743817,"posZ":12.0000038,"rotX":0.01089199,"rotY":179.99585,"rotZ":180.004959,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108500,"SidewaysCard":false,"CustomDeck":{"11085":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8aea31","Name":"Custom_Model_Bag","Transform":{"posX":-22.003828,"posY":1.83530033,"posZ":16.0025082,"rotX":-0.000005118956,"rotY":179.996,"rotZ":-4.10548921e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Choisir un lieu et le retirer de la partie","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1932636167915972712/EC76A64317C7AA3976260C5B09D9C052E77C6901/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"41928b\":{\"lock\":false,\"pos\":{\"x\":-21.5,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9718,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"78fbe5\":{\"lock\":false,\"pos\":{\"x\":-18.9999,\"y\":1.8353,\"z\":9.9999},\"rot\":{\"x\":0,\"y\":179.9716,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"89f177\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.8353,\"z\":10},\"rot\":{\"x\":0,\"y\":179.9736,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"a7c7d2\":{\"lock\":false,\"pos\":{\"x\":-30.5,\"y\":1.8353,\"z\":24.5},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"b3c682\":{\"lock\":false,\"pos\":{\"x\":-23.4894,\"y\":1.8353,\"z\":13.5101},\"rot\":{\"x\":0,\"y\":179.9727,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"df5b1f\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.8353,\"z\":13.4999},\"rot\":{\"x\":0,\"y\":179.9712,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}}}}","XmlUI":"","ContainedObjects":[{"GUID":"41928b","Name":"Custom_Model_Bag","Transform":{"posX":-23.4940662,"posY":1.83533,"posZ":13.5155315,"rotX":-0.000005210691,"rotY":179.972961,"rotZ":-9.16565739e-8,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Ruisseau des bishop","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662301987863/EC85795E33EC43FD82F9617B47C13D0CBE057FB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"c06148\":{\"lock\":false,\"pos\":{\"x\":12.9999980926514,\"y\":1.54325652122498,\"z\":1.50000321865082},\"rot\":{\"x\":0.0108906179666519,\"y\":180.011596679688,\"z\":0.00495057599619031},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"db182f\":{\"lock\":false,\"pos\":{\"x\":-19.4999885559082,\"y\":1.77885568141937,\"z\":21.5000095367432},\"rot\":{\"x\":-4.92560639031581E-06,\"y\":180.011764526367,\"z\":5.47362155600695E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"c06148","Name":"Card","Transform":{"posX":-19.49993,"posY":1.77890468,"posZ":21.5000782,"rotX":-0.00000507082177,"rotY":180.011826,"rotZ":6.927599e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruisseau des Bishop","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02203\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Circle|Triangle\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Circle|Triangle\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21302,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"db182f","Name":"Card","Transform":{"posX":12.999999,"posY":1.54325652,"posZ":1.50000048,"rotX":0.0108904624,"rotY":180.011749,"rotZ":0.00496617332,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruisseau des Bishop","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02202\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Circle|Triangle\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Circle|Triangle\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21303,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"78fbe5","Name":"Custom_Model_Bag","Transform":{"posX":-21.5,"posY":1.8353008,"posZ":10,"rotX":-0.00000568369023,"rotY":179.9717,"rotZ":2.98897959e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Magasin d'Osborne","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662302193698/48C5185AFDA1F41D2B89F9C0C875F42AA47FD440/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"0e5993\":{\"lock\":false,\"pos\":{\"x\":-26.4999942779541,\"y\":1.7788553237915,\"z\":26.0000076293945},\"rot\":{\"x\":-4.99659199704183E-06,\"y\":180.000625610352,\"z\":1.74605574443376E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fcc23e\":{\"lock\":false,\"pos\":{\"x\":20.0137672424316,\"y\":1.54464781284332,\"z\":12.0056667327881},\"rot\":{\"x\":0.0108915623277426,\"y\":179.999969482422,\"z\":0.00494775921106339},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"0e5993","Name":"Card","Transform":{"posX":20.0137672,"posY":1.54464781,"posZ":12.0056639,"rotX":0.0108916108,"rotY":180.000381,"rotZ":0.00496458448,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Magasin d'Osborn","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02206\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Square\",\n    \"icons\": \"Circle\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Square\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21307,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"fcc23e","Name":"Card","Transform":{"posX":-26.499939,"posY":1.77890432,"posZ":26.0000687,"rotX":-0.00000509895835,"rotY":180.000259,"rotZ":-1.06536923e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Magasin d'Osborn","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02207\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Square\",\n    \"icons\": \"Circle\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Square\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21306,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"89f177","Name":"Custom_Model_Bag","Transform":{"posX":-20.4999962,"posY":1.83530045,"posZ":13.4999018,"rotX":-0.00000576997,"rotY":179.9737,"rotZ":3.89009273e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Ecole","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662302190186/C47C06A96754B7EC1968D360C2C50AD1289C3363/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"464e31\":{\"lock\":false,\"pos\":{\"x\":-26.4999961853027,\"y\":1.77885568141937,\"z\":21.5000038146973},\"rot\":{\"x\":-5.03979981658631E-06,\"y\":180.012329101563,\"z\":1.34384180228153E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fb669f\":{\"lock\":false,\"pos\":{\"x\":13.0150346755981,\"y\":1.54724490642548,\"z\":22.4882583618164},\"rot\":{\"x\":0.0108904046937823,\"y\":180.011779785156,\"z\":0.00495126517489553},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"464e31","Name":"Card","Transform":{"posX":13.0150356,"posY":1.54724491,"posZ":22.4882565,"rotX":0.010890469,"rotY":180.012177,"rotZ":0.00496630743,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"École","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02212\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Tilde|Circle\",\n    \"icons\": \"Crescent\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Tilde|Circle\",\n    \"icons\": \"Crescent\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21313,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"fb669f","Name":"Card","Transform":{"posX":-26.4999619,"posY":1.77890468,"posZ":21.50004,"rotX":-0.00000521959646,"rotY":180.012146,"rotZ":1.39733515e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"École","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02213\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Tilde|Circle\",\n    \"icons\": \"Crescent\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Tilde|Circle\",\n    \"icons\": \"Crescent\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21312,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"a7c7d2","Name":"Custom_Model_Bag","Transform":{"posX":-30.4999962,"posY":1.83529961,"posZ":24.5000038,"rotX":-0.00000754224766,"rotY":180.000122,"rotZ":-3.21851019e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Maison aux roseaux","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662302188872/00C57A20AA4A861744C16650745F415D04349294/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"35a7d5\":{\"lock\":false,\"pos\":{\"x\":-1.00031638145447,\"y\":1.54845762252808,\"z\":22.5001087188721},\"rot\":{\"x\":0.0108905322849751,\"y\":180.015899658203,\"z\":0.00495145050808787},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"577413\":{\"lock\":false,\"pos\":{\"x\":-22.9999942779541,\"y\":1.77885568141937,\"z\":21.5000038146973},\"rot\":{\"x\":-4.87178476760164E-06,\"y\":180.013473510742,\"z\":1.60644631819196E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"35a7d5","Name":"Card","Transform":{"posX":-22.9999332,"posY":1.77890468,"posZ":21.5000629,"rotX":-0.00000507943741,"rotY":180.01619,"rotZ":1.8235637e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Maison aux Roseaux","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02211\",\n  \"locationBack\": {\n    \"connections\": \"Diamond|Crescent\",\n    \"icons\": \"Tilde\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond|Crescent\",\n    \"icons\": \"Tilde\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21311,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"577413","Name":"Card","Transform":{"posX":-1.00031567,"posY":1.5484575,"posZ":22.5001068,"rotX":0.0108905146,"rotY":180.013443,"rotZ":0.00496637542,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Maison aux Roseaux","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02210\",\n  \"locationBack\": {\n    \"connections\": \"Diamond|Crescent\",\n    \"icons\": \"Tilde\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond|Crescent\",\n    \"icons\": \"Tilde\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21310,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"b3c682","Name":"Custom_Model_Bag","Transform":{"posX":-18.9999,"posY":1.8353008,"posZ":9.9999,"rotX":-0.00000511388134,"rotY":179.9727,"rotZ":-1.38122942e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Ruines calcinées","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662302001975/7B1C2164A753181108452C97908B20F2F40F3F11/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"28f6a4\":{\"lock\":false,\"pos\":{\"x\":-22.9999942779541,\"y\":1.7788553237915,\"z\":26.0000076293945},\"rot\":{\"x\":-4.99215457239188E-06,\"y\":180.012008666992,\"z\":-1.47972589736867E-09},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b98f52\":{\"lock\":false,\"pos\":{\"x\":-1.00000143051147,\"y\":1.5444655418396,\"z\":1.50000321865082},\"rot\":{\"x\":0.0108903730288148,\"y\":180.013305664063,\"z\":0.00495093734934926},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"28f6a4","Name":"Card","Transform":{"posX":-0.999999642,"posY":1.54446554,"posZ":1.49999988,"rotX":0.0108905006,"rotY":180.012,"rotZ":0.0049659987,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruines Calcinées","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02204\",\n  \"locationBack\": {\n    \"connections\": \"Square|Diamond\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"count\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Square|Diamond\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21305,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b98f52","Name":"CardCustom","Transform":{"posX":-22.9999332,"posY":1.77890432,"posZ":26.0000763,"rotX":-0.00000508381527,"rotY":180.013245,"rotZ":-1.65302083e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruines Calcinées","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02205\",\n  \"locationBack\": {\n    \"connections\": \"Square|Diamond\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"count\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Square|Diamond\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":558100,"SidewaysCard":false,"CustomDeck":{"5581":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230293001/4B9CE18BDDB0AE8786C15504800FE0877800E78C/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230284465/962D5526DB9941CE04C8C9E01EE323CD5A703CE6/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"df5b1f","Name":"Custom_Model_Bag","Transform":{"posX":-24.5,"posY":1.8353008,"posZ":9.999998,"rotX":-0.000005914047,"rotY":179.971268,"rotZ":4.370611e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Eglise","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662301512707/AACFC5A7E2B2828E449B2979907F1D94C4C5469C/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"97b1ca\":{\"lock\":false,\"pos\":{\"x\":-19.4999866485596,\"y\":1.77885520458221,\"z\":26.0000133514404},\"rot\":{\"x\":-5.08139419252984E-06,\"y\":180.004745483398,\"z\":1.66582996286024E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"eaced4\":{\"lock\":false,\"pos\":{\"x\":-8.00000190734863,\"y\":1.54706609249115,\"z\":12.0000028610229},\"rot\":{\"x\":0.0108908414840698,\"y\":180.00959777832,\"z\":0.00494944816455245},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"97b1ca","Name":"Card","Transform":{"posX":-8.000001,"posY":1.54706609,"posZ":12,"rotX":0.0108911479,"rotY":180.004791,"rotZ":0.004964821,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Église Congrégationaliste","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02209\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Triangle|Tilde\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Triangle|Tilde\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21308,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"eaced4","Name":"Card","Transform":{"posX":-19.4998989,"posY":1.77890432,"posZ":26.0001068,"rotX":-0.000005170058,"rotY":180.009811,"rotZ":2.36547653e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Église Congrégationaliste","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02208\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Triangle|Tilde\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Triangle|Tilde\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21309,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}]},{"GUID":"9474c4","Name":"Card","Transform":{"posX":23.5002,"posY":1.5138092,"posZ":-5.500106,"rotX":0.0108928494,"rotY":179.98436,"rotZ":0.00494531868,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Référence","Description":"Du Sang sur l'Autel","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21300,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9c0ce6","Name":"Custom_Model_Bag","Transform":{"posX":35,"posY":1.544379,"posZ":2.99999976,"rotX":-0.0005910524,"rotY":179.979,"rotZ":0.00107089861,"scaleX":0.8829061,"scaleY":0.496230334,"scaleZ":0.8829061},"Nickname":"Sacrifices potentiels","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1983303656990210870/D2994AC54A968C74968E19B4F03195BC3664AEE5/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":2},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"9c5776","Name":"Card","Transform":{"posX":36,"posY":2.07278,"posZ":2,"rotX":-0.000200269264,"rotY":180,"rotZ":0.0013825153,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Zebulon Whateley","Description":"Mémoire des Choses Anciennes","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 3,\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02217\",\n  \"sanity\": 4,\n  \"traits\": \"Ally. Dunwich.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 1,\n  \"willpowerIcons\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21316,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a9ecc5","Name":"Card","Transform":{"posX":34.5,"posY":2.07281661,"posZ":2,"rotX":-0.000477473281,"rotY":180,"rotZ":0.0008462775,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Professeur Warren Rice","Description":"Professeur de Langues","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 3,\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02061\",\n  \"intellectIcons\": 1,\n  \"sanity\": 3,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":293914,"SidewaysCard":false,"CustomDeck":{"2939":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e8cde0","Name":"Card","Transform":{"posX":35.5,"posY":2.07280374,"posZ":2,"rotX":-0.000440520147,"rotY":180,"rotZ":0.00100879988,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Dr Francis Morgan","Description":"Professeur d'Archéologie","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"combatIcons\": 1,\n  \"cost\": 3,\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02080\",\n  \"sanity\": 1,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117211,"SidewaysCard":false,"CustomDeck":{"1172":{"FaceURL":"https://i.imgur.com/iZag7R1.jpg","BackURL":"https://i.imgur.com/ArR45VU.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"755625","Name":"Card","Transform":{"posX":36,"posY":2.072784,"posZ":2.5,"rotX":-0.000446371676,"rotY":180,"rotZ":0.00126899988,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Earl Sawyer","Description":"Plus Malin qu'il n'en a l'Air","GMNotes":"{\n  \"agilityIcons\": 1,\n  \"class\": \"Neutral\",\n  \"cost\": 3,\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02218\",\n  \"sanity\": 2,\n  \"traits\": \"Ally. Dunwich.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21314,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"97fd5f","Name":"Card","Transform":{"posX":35.5,"posY":2.07279515,"posZ":3.5,"rotX":-0.000583497167,"rotY":180,"rotZ":0.00105654658,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 2,\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02040\",\n  \"sanity\": 2,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\",\n  \"wildIcons\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":115015,"SidewaysCard":false,"CustomDeck":{"1150":{"FaceURL":"https://i.imgur.com/YYrN92e.jpg","BackURL":"https://i.imgur.com/QGyVZgX.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"ae6a50","Name":"Deck","Transform":{"posX":30.5,"posY":1.70506251,"posZ":-3,"rotX":-0.000591213058,"rotY":180.0017,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Rencontre","Description":"Du Sang sur l'Autel","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[17506,16608,17818,17821,17823,17828,17825,17829,15413,15417,15418,15419,15704,17827,17826,16606,17822,17510,15416,16610,15703,17824,17820,17819,17512,16607,15702,17508,17831],"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"938e70","Name":"Card","Transform":{"posX":30.4991989,"posY":10.5700932,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Contrée Impie","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02088\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17506,"SidewaysCard":false,"CustomDeck":{"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5c7a4c","Name":"Card","Transform":{"posX":30.4991989,"posY":10.3700933,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Maigre Bête de la Nuit Chasseresse","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16608,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8041a2","Name":"Card","Transform":{"posX":30.4991989,"posY":9.832606,"posZ":-2.99980044,"rotX":-0.0005908808,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Kidnappé !","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02220\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17818,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"bd01ea","Name":"Card","Transform":{"posX":30.4991989,"posY":9.970094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Kidnappé !","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02220\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17821,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9e231a","Name":"Card","Transform":{"posX":30.4991989,"posY":9.770093,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Signes Étranges","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02222\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17823,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a78c0d","Name":"Card","Transform":{"posX":30.4991989,"posY":9.570093,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17828,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7fcdf0","Name":"Card","Transform":{"posX":30.4991989,"posY":9.370093,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17825,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5a9cf0","Name":"Card","Transform":{"posX":30.4991989,"posY":9.170094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Serviteur de Nombreuses Bouches","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02224\",\n  \"traits\": \"Humanoid.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17829,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"74772f","Name":"Card","Transform":{"posX":30.4991989,"posY":8.970094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Avides de Mort","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02091\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15413,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"34acc2","Name":"Card","Transform":{"posX":30.4991989,"posY":8.770093,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15417,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ec81eb","Name":"Card","Transform":{"posX":30.4991989,"posY":8.570093,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Avides de Mort","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02091\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15418,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b248fe","Name":"Card","Transform":{"posX":30.4991989,"posY":8.032607,"posZ":-2.99980044,"rotX":-0.000590848736,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15419,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7b9eb5","Name":"Card","Transform":{"posX":30.4991989,"posY":8.170094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15704,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"63f6c2","Name":"Card","Transform":{"posX":30.4991989,"posY":7.97009373,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Serviteur de Nombreuses Bouches","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02224\",\n  \"traits\": \"Humanoid.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17827,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0c5fef","Name":"Card","Transform":{"posX":30.4991989,"posY":7.77009249,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17826,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"714f71","Name":"Card","Transform":{"posX":30.4991989,"posY":7.57009268,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Sur les Ailes des Ténèbres","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16606,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"550840","Name":"Card","Transform":{"posX":30.4991989,"posY":7.03260756,"posZ":-2.99980044,"rotX":-0.0005908684,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chant Psychopompe","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02221\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17822,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f9d854","Name":"Card","Transform":{"posX":30.4991989,"posY":7.17009354,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Sordide et Silencieux","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02089\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17510,"SidewaysCard":false,"CustomDeck":{"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c75f9e","Name":"Card","Transform":{"posX":30.4991989,"posY":6.970094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15416,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4f0667","Name":"Card","Transform":{"posX":30.4991989,"posY":6.432608,"posZ":-2.99980044,"rotX":-0.000590943,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Maigre Bête de la Nuit Chasseresse","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16610,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"67cfd5","Name":"Card","Transform":{"posX":30.4991989,"posY":6.570094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15703,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"68e64e","Name":"Card","Transform":{"posX":30.4991989,"posY":6.3700943,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Signes Étranges","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02222\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17824,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a01124","Name":"Card","Transform":{"posX":30.4991989,"posY":6.17009449,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Kidnappé !","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02220\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17820,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e6f94c","Name":"Card","Transform":{"posX":30.4991989,"posY":5.970094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chant Psychopompe","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02221\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17819,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"493b56","Name":"Card","Transform":{"posX":30.4991989,"posY":5.432608,"posZ":-2.99980044,"rotX":-0.0005909137,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Sordide et Silencieux","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02089\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17512,"SidewaysCard":false,"CustomDeck":{"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e5d2","Name":"Card","Transform":{"posX":30.4991989,"posY":5.570094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Sur les Ailes des Ténèbres","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16607,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1c3c50","Name":"Card","Transform":{"posX":30.4991989,"posY":5.3700943,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15702,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"aea6f8","Name":"Card","Transform":{"posX":30.4991989,"posY":5.17009449,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Contrée Impie","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02088\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17508,"SidewaysCard":false,"CustomDeck":{"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f61fb1","Name":"Card","Transform":{"posX":30.4991989,"posY":4.970094,"posZ":-2.99980068,"rotX":-0.000590825,"rotY":179.999741,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Serviteur de Nombreuses Bouches","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02224\",\n  \"traits\": \"Humanoid.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17831,"SidewaysCard":false,"CustomDeck":{"178":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"b302b7","Name":"Custom_Tile","Transform":{"posX":-5,"posY":1.507038,"posZ":17.5,"rotX":-0.004203024,"rotY":45.00013,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"c078a5","Name":"Card","Transform":{"posX":-34.00057,"posY":1.77890611,"posZ":4.49954033,"rotX":-0.00000504814943,"rotY":180.000092,"rotZ":2.10187054e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Silas Bishop","Description":"Imprégné par le Mal","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"healthPerInv\": \"true\",\n  \"id\": \"02216\",\n  \"traits\": \"Monster. Abomination. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21317,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cabee3","Name":"Custom_Tile","Transform":{"posX":2.999972,"posY":1.60163224,"posZ":-6.49997234,"rotX":0.0171767864,"rotY":180.01268,"rotZ":0.0056542363,"scaleX":1.6428808,"scaleY":1,"scaleZ":1.6428808},"Nickname":"Mise en place du Chaos Bag","Description":"IV : Du Sang sur l'Autel","GMNotes":"{\"data\":\"Blood on the Altar\",\"easy\":false,\"expert\":false,\"hard\":false,\"normal\":false,\"standalone\":true}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.8745098,"g":0.8,"b":0.7019608},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend","LuaScriptState":"","XmlUI":""},{"GUID":"e23149","Name":"CardCustom","Transform":{"posX":13.000001,"posY":1.5200386,"posZ":22.5000038,"rotX":0.0108915893,"rotY":179.9995,"rotZ":180.004959,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108500,"SidewaysCard":false,"CustomDeck":{"11085":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e2ee03","Name":"CardCustom","Transform":{"posX":13,"posY":1.51604676,"posZ":1.50000012,"rotX":0.0108915586,"rotY":179.999542,"rotZ":180.004959,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1108500,"SidewaysCard":false,"CustomDeck":{"11085":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e59274","Name":"Card","Transform":{"posX":-20.0001183,"posY":1.77890611,"posZ":4.499787,"rotX":-0.00000508423363,"rotY":180.000092,"rotZ":3.81545355e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Clé de la Chambre","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02215\",\n  \"traits\": \"Item. Key.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21318,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e605c7","Name":"Custom_Model_Bag","Transform":{"posX":-30.5000076,"posY":1.83530128,"posZ":4.499991,"rotX":-0.00000454192377,"rotY":179.984741,"rotZ":3.14716345e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Soutiens/faiblesses d'histoire","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/5077277234347423622/F89B4508C6E2782780C2B5593FB68379E0FB2DB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"","LuaScriptState":"{\"ml\":[]}","XmlUI":"","ContainedObjects":[{"GUID":"2de00b","Name":"Card","Transform":{"posX":-30.5,"posY":1.93748891,"posZ":4,"rotX":0.003088034,"rotY":180.000275,"rotZ":0.00091398356,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Poudre d'Ibn-Ghazi","Description":"Voir l'Invisible","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"The Dunwich Legacy\",\n  \"id\": \"02219\",\n  \"traits\": \"Item.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":21315,"SidewaysCard":false,"CustomDeck":{"213":{"FaceURL":"https://i.imgur.com/8fUptYt.jpg","BackURL":"https://i.imgur.com/s72Czne.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"fd97c4","Name":"Custom_Tile","Transform":{"posX":-5.000002,"posY":1.504947,"posZ":6.5,"rotX":359.9888,"rotY":314.999969,"rotZ":0.004203847,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}}],"AttachedDecals":[{"Transform":{"posX":-0.0021877822,"posY":-0.08963572,"posZ":-0.00288731651,"rotX":270,"rotY":359.869568,"rotZ":0,"scaleX":2.00000215,"scaleY":2.00000238,"scaleZ":2.00000262},"CustomDecal":{"Name":"dunwich_back","ImageURL":"http://cloud-3.steamusercontent.com/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/","Size":7.4}}]},{"GUID":"687683","Name":"Custom_Tile","Transform":{"posX":33.2985,"posY":1.47985983,"posZ":11.9968,"rotX":3.02204448e-8,"rotY":180.0012,"rotZ":2.15249973e-9,"scaleX":5.944177,"scaleY":1,"scaleZ":5.944177},"Nickname":"Carnet de Campagne","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1831283363809270962/71EC83E58BD10F195B9B46B472D71199B9B9126A/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/959719855118672935/146C19B01EA067D56DF32B9F9B23D0C15C69C323/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":0,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"--[[    Character Sheet Template    by: MrStump\r\n\r\nYou can set up your own character sheet if you follow these steps.\r\n\r\nStep 1) Change the character sheet image\r\n    -Right click on the character sheet, click Custom\r\n    -Replace the image URL with one for your character sheet\r\n    -Click import, make sure your sheet loads\r\n    -SAVE THE GAME (the table setup)\r\n    -LOAD FROM THAT SAVE YOU JUST MADE\r\n\r\nStep 2) Edit script to fit your character sheet\r\n    -Below you will see some general options, and then the big data table\r\n    -The data table is what determines how many of which buttons are made\r\n        -Checkboxes\r\n        -Counters\r\n        -Textboxes\r\n    -By default, there are 3 of each. You can add more or remove entries\r\n    -If you intend to add/remove, be sure only to add/remove ENTRIES\r\n        -This is what an entry looks like:\r\n            {\r\n                pos   = {-0.977,0.1,-0.589},\r\n                size  = 800,\r\n                state = false\r\n            },\r\n        -Deleting the whole thing would remove that specific item on the sheet\r\n        -Copy and pasting it after another entry would create another\r\n    -Each entry type has unique data points (pos, size, state, etc)\r\n        -Do not try to add in your own data points or remove them individually\r\n        -There is a summary of what each point does at the top of its category\r\n\r\nStep 3) Save and check script changes\r\n    -Hit Save & Apply in the script window to save your code\r\n    -You can edit your code as needed and Save+Apply as often as needed\r\n    -When you are finished, make disableSave = false below then Save+apply\r\n        -This enables saving, so your sheet will remember whats on it.\r\n\r\nBonus) Finding/Editing Positions for elements\r\n    I have included a tool to get positions for buttons in {x,y,z} form\r\n    Place it where you want the center of your element to be\r\n    Then copy the table from the notes (lower right of screen)\r\n        You can highlight it and CTRL+C\r\n    Paste it into the data table where needed (pos=)\r\n    If you want to manually tweek the values:\r\n        {0,0,0} is the center of the character sheet\r\n        {1,0,0} is right, {-1,0,0} is left\r\n        {0,0,-1} is up, {0,0,1} is down\r\n        0.1 for Y is the height off of the page.\r\n            If it was 0, it would be down inside the model of the sheet\r\n\r\nBegin editing below:    ]]\r\n\r\n--Set this to true while editing and false when you have finished\r\ndisableSave = false\r\n--Remember to set this to false once you are done making changes\r\n--Then, after you save & apply it, save your game too\r\n\r\n--Color information for button text (r,g,b, values of 0-1)\r\nbuttonFontColor = {0,0,0}\r\n--Color information for button background\r\nbuttonColor = {1,1,1}\r\n--Change scale of button (Avoid changing if possible)\r\nbuttonScale = {0.1,0.1,0.1}\r\n\r\n--This is the button placement information\r\ndefaultButtonData = {\r\n    --Add checkboxes\r\n    checkbox = {\r\n        --[[\r\n        pos   = the position (pasted from the helper tool)\r\n        size  = height/width/font_size for checkbox\r\n        state = default starting value for checkbox (true=checked, false=not)\r\n        ]]\r\n        --First checkbox\r\n--        {\r\n--            pos   = {-0.62,0.1,0.056},\r\n--            size  = 400,\r\n--            state = false\r\n--        },\r\n        --Second checkbox\r\n--        {\r\n--            pos   = {-0.629,0.1,0.199},\r\n--            size  = 400,\r\n--            state = false\r\n--        },\r\n        --Third checkbox\r\n--        {\r\n--            pos   = {-0.594,0.1,0.355},\r\n--            size  = 400,\r\n--            state = false\r\n--        },\r\n        --End of checkboxes\r\n    },\r\n    --Add counters that have a + and - button\r\n    counter = {\r\n        --[[\r\n        pos    = the position (pasted from the helper tool)\r\n        size   = height/width/font_size for counter\r\n        value  = default starting value for counter\r\n        hideBG = if background of counter is hidden (true=hidden, false=not)\r\n        ]]\r\n        --Slot one counter 1\r\n        {\r\n            pos    = {-0.7,0.1,-0.45},\r\n            size   = 400,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot one counter 2\r\n        {\r\n            pos    = {-0.52,0.1,-0.45},\r\n            size   = 400,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot one xp 1\r\n        {\r\n            pos    = {-0.517,0.1,-0.55},\r\n            size   = 300,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot two counter 1\r\n        {\r\n            pos    = {-0.274,0.1,-0.445},\r\n            size   = 400,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot two counter 2\r\n        {\r\n            pos    = {-0.074,0.1,-0.445},\r\n            size   = 400,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot two xp 1\r\n        {\r\n            pos    = {-0.061,0.1,-0.54},\r\n            size   = 300,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot three counter 1\r\n        {\r\n            pos    = {0.153,0.1,-0.44},\r\n            size   = 400,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot three counter 2\r\n        {\r\n            pos    = {0.379,0.1,-0.44},\r\n            size   = 400,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot three xp 1\r\n        {\r\n            pos    = {0.38,0.1,-0.54},\r\n            size   = 300,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot four counter 1\r\n        {\r\n            pos    = {0.614,0.1,-0.44},\r\n            size   = 400,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot four counter 2\r\n        {\r\n            pos    = {0.82,0.1,-0.44},\r\n            size   = 400,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Slot four xp 1\r\n        {\r\n            pos    = {0.827,0.1,-0.54},\r\n            size   = 300,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --End of counters\r\n    },\r\n    --Add editable text boxes\r\n    textbox = {\r\n        --[[\r\n        pos       = the position (pasted from the helper tool)\r\n        rows      = how many lines of text you want for this box\r\n        width     = how wide the text box is\r\n        font_size = size of text. This and \"rows\" effect overall height\r\n        label     = what is shown when there is no text. \"\" = nothing\r\n        value     = text entered into box. \"\" = nothing\r\n        alignment = Number to indicate how you want text aligned\r\n                    (1=Automatic, 2=Left, 3=Center, 4=Right, 5=Justified)\r\n        ]]\r\n        --Slot one player\r\n        {\r\n            pos       = {-0.637,0.1,-0.70},\r\n            rows      = 1,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot one investigator\r\n        {\r\n            pos       = {-0.637,0.1,-0.625},\r\n            rows      = 1,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot one story\r\n        {\r\n            pos       = {-0.637,0.1,-0.25},\r\n            rows      = 7,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot two player\r\n        {\r\n            pos       = {-0.2,0.1,-0.70},\r\n            rows      = 1,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot two investigator\r\n        {\r\n            pos       = {-0.2,0.1,-0.625},\r\n            rows      = 1,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot two story\r\n        {\r\n            pos       = {-0.2,0.1,-0.25},\r\n            rows      = 7,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot three player\r\n        {\r\n            pos       = {0.241,0.1,-0.70},\r\n            rows      = 1,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot three investigator\r\n        {\r\n            pos       = {0.237,0.1,-0.625},\r\n            rows      = 1,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot three story\r\n        {\r\n            pos       = {0.24,0.1,-0.25},\r\n            rows      = 7,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot four player\r\n        {\r\n            pos       = {0.671,0.1,-0.70},\r\n            rows      = 1,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot four investigator\r\n        {\r\n            pos       = {0.671,0.1,-0.625},\r\n            rows      = 1,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Slot four story\r\n        {\r\n            pos       = {0.671,0.1,-0.25},\r\n            rows      = 7,\r\n            width     = 2000,\r\n            font_size = 150,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Campaign Notes\r\n        {\r\n            pos       = {-0.45,0.1,0.55},\r\n            rows      =18,\r\n            width     = 3500,\r\n            font_size = 200,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Campaign Notes 2\r\n        {\r\n            pos       = {0.384,0.1,0.228},\r\n            rows      = 8,\r\n            width     = 3500,\r\n            font_size = 200,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Cultists interrogated\r\n        {\r\n            pos       = {0.384,0.1,0.69},\r\n            rows      = 8,\r\n            width     = 3500,\r\n            font_size = 200,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --End of textboxes\r\n    }\r\n}\r\n\r\n\r\n\r\n--Lua beyond this point, I recommend doing something more fun with your life\r\n\r\n\r\n\r\n--Save function\r\nfunction updateSave()\r\n    saved_data = JSON.encode(ref_buttonData)\r\n    if disableSave==true then saved_data=\"\" end\r\n    self.script_state = saved_data\r\nend\r\n\r\n--Startup procedure\r\nfunction onload(saved_data)\r\n    if disableSave==true then saved_data=\"\" end\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        ref_buttonData = loaded_data\r\n    else\r\n        ref_buttonData = defaultButtonData\r\n    end\r\n\r\n    spawnedButtonCount = 0\r\n    createCheckbox()\r\n    createCounter()\r\n    createTextbox()\r\nend\r\n\r\n\r\n\r\n--Click functions for buttons\r\n\r\n\r\n\r\n--Checks or unchecks the given box\r\nfunction click_checkbox(tableIndex, buttonIndex)\r\n    if ref_buttonData.checkbox[tableIndex].state == true then\r\n        ref_buttonData.checkbox[tableIndex].state = false\r\n        self.editButton({index=buttonIndex, label=\"\"})\r\n    else\r\n        ref_buttonData.checkbox[tableIndex].state = true\r\n        self.editButton({index=buttonIndex, label=string.char(10008)})\r\n    end\r\n    updateSave()\r\nend\r\n\r\n--Applies value to given counter display\r\nfunction click_counter(tableIndex, buttonIndex, amount)\r\n    ref_buttonData.counter[tableIndex].value = ref_buttonData.counter[tableIndex].value + amount\r\n    self.editButton({index=buttonIndex, label=ref_buttonData.counter[tableIndex].value})\r\n    updateSave()\r\nend\r\n\r\n--Updates saved value for given text box\r\nfunction click_textbox(i, value, selected)\r\n    if selected == false then\r\n        ref_buttonData.textbox[i].value = value\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Dud function for if you have a background on a counter\r\nfunction click_none() end\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n\r\n--Makes checkboxes\r\nfunction createCheckbox()\r\n    for i, data in ipairs(ref_buttonData.checkbox) do\r\n        --Sets up reference function\r\n        local buttonNumber = spawnedButtonCount\r\n        local funcName = \"checkbox\"..i\r\n        local func = function() click_checkbox(i, buttonNumber) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"\"\r\n        if data.state==true then label=string.char(10008) end\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=data.pos, height=data.size, width=data.size,\r\n            font_size=data.size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n    end\r\nend\r\n\r\n--Makes counters\r\nfunction createCounter()\r\n    for i, data in ipairs(ref_buttonData.counter) do\r\n        --Sets up display\r\n        local displayNumber = spawnedButtonCount\r\n        --Sets up label\r\n        local label = data.value\r\n        --Sets height/width for display\r\n        local size = data.size\r\n        if data.hideBG == true then size = 0 end\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=\"click_none\", function_owner=self,\r\n            position=data.pos, height=size, width=size,\r\n            font_size=data.size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n        --Sets up add 1\r\n        local funcName = \"counterAdd\"..i\r\n        local func = function() click_counter(i, displayNumber, 1) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"+\"\r\n        --Sets up position\r\n        local offsetDistance = (data.size/2 + data.size/4) * (buttonScale[1] * 0.002)\r\n        local pos = {data.pos[1] + offsetDistance, data.pos[2], data.pos[3]}\r\n        --Sets up size\r\n        local size = data.size / 2\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=pos, height=size, width=size,\r\n            font_size=size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n        --Sets up subtract 1\r\n        local funcName = \"counterSub\"..i\r\n        local func = function() click_counter(i, displayNumber, -1) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"-\"\r\n        --Set up position\r\n        local pos = {data.pos[1] - offsetDistance, data.pos[2], data.pos[3]}\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=pos, height=size, width=size,\r\n            font_size=size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n    end\r\nend\r\n\r\nfunction createTextbox()\r\n    for i, data in ipairs(ref_buttonData.textbox) do\r\n        --Sets up reference function\r\n        local funcName = \"textbox\"..i\r\n        local func = function(_,_,val,sel) click_textbox(i,val,sel) end\r\n        self.setVar(funcName, func)\r\n\r\n        self.createInput({\r\n            input_function = funcName,\r\n            function_owner = self,\r\n            label          = data.label,\r\n            alignment      = data.alignment,\r\n            position       = data.pos,\r\n            scale          = buttonScale,\r\n            width          = data.width,\r\n            height         = (data.font_size*data.rows)+24,\r\n            font_size      = data.font_size,\r\n            color          = buttonColor,\r\n            font_color     = buttonFontColor,\r\n            value          = data.value,\r\n        })\r\n    end\r\nend","LuaScriptState":"{\"checkbox\":[],\"counter\":[{\"hideBG\":true,\"pos\":[-0.7,0.1,-0.45],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-0.52,0.1,-0.45],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-0.517,0.1,-0.55],\"size\":300,\"value\":0},{\"hideBG\":true,\"pos\":[-0.274,0.1,-0.445],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-0.074,0.1,-0.445],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-0.061,0.1,-0.54],\"size\":300,\"value\":0},{\"hideBG\":true,\"pos\":[0.153,0.1,-0.44],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[0.379,0.1,-0.44],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[0.38,0.1,-0.54],\"size\":300,\"value\":0},{\"hideBG\":true,\"pos\":[0.614,0.1,-0.44],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[0.82,0.1,-0.44],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[0.827,0.1,-0.54],\"size\":300,\"value\":0}],\"textbox\":[{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[-0.637,0.1,-0.7],\"rows\":1,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[-0.637,0.1,-0.625],\"rows\":1,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[-0.637,0.1,-0.25],\"rows\":7,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[-0.2,0.1,-0.7],\"rows\":1,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[-0.2,0.1,-0.625],\"rows\":1,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[-0.2,0.1,-0.25],\"rows\":7,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[0.241,0.1,-0.7],\"rows\":1,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[0.237,0.1,-0.625],\"rows\":1,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[0.24,0.1,-0.25],\"rows\":7,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[0.671,0.1,-0.7],\"rows\":1,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[0.671,0.1,-0.625],\"rows\":1,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":150,\"label\":\"Click to type\",\"pos\":[0.671,0.1,-0.25],\"rows\":7,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":200,\"label\":\"Click to type\",\"pos\":[-0.45,0.1,0.55],\"rows\":18,\"value\":\"\",\"width\":3500},{\"alignment\":2,\"font_size\":200,\"label\":\"Click to type\",\"pos\":[0.384,0.1,0.228],\"rows\":8,\"value\":\"\",\"width\":3500},{\"alignment\":2,\"font_size\":200,\"label\":\"Click to type\",\"pos\":[0.384,0.1,0.69],\"rows\":8,\"value\":\"\",\"width\":3500}]}","XmlUI":"","States":{"2":{"GUID":"72c448","Name":"Custom_Tile","Transform":{"posX":-33.50007,"posY":1.63848913,"posZ":6.99955463,"rotX":1.51156092,"rotY":180.000565,"rotZ":0.000011984318,"scaleX":5.944177,"scaleY":1,"scaleZ":5.944177},"Nickname":"Carnet de Campagne","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1831283363809271468/A5575782E29FA6562CA87D6A0D5EEF26E837FC9D/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/959719855118672935/146C19B01EA067D56DF32B9F9B23D0C15C69C323/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":0,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"--[[    Character Sheet Template    by: MrStump\r\n\r\nYou can set up your own character sheet if you follow these steps.\r\n\r\nStep 1) Change the character sheet image\r\n    -Right click on the character sheet, click Custom\r\n    -Replace the image URL with one for your character sheet\r\n    -Click import, make sure your sheet loads\r\n    -SAVE THE GAME (the table setup)\r\n    -LOAD FROM THAT SAVE YOU JUST MADE\r\n\r\nStep 2) Edit script to fit your character sheet\r\n    -Below you will see some general options, and then the big data table\r\n    -The data table is what determines how many of which buttons are made\r\n        -Checkboxes\r\n        -Counters\r\n        -Textboxes\r\n    -By default, there are 3 of each. You can add more or remove entries\r\n    -If you intend to add/remove, be sure only to add/remove ENTRIES\r\n        -This is what an entry looks like:\r\n            {\r\n                pos   = {-0.977,0.1,-0.589},\r\n                size  = 800,\r\n                state = false\r\n            },\r\n        -Deleting the whole thing would remove that specific item on the sheet\r\n        -Copy and pasting it after another entry would create another\r\n    -Each entry type has unique data points (pos, size, state, etc)\r\n        -Do not try to add in your own data points or remove them individually\r\n        -There is a summary of what each point does at the top of its category\r\n\r\nStep 3) Save and check script changes\r\n    -Hit Save & Apply in the script window to save your code\r\n    -You can edit your code as needed and Save+Apply as often as needed\r\n    -When you are finished, make disableSave = false below then Save+apply\r\n        -This enables saving, so your sheet will remember whats on it.\r\n\r\nBonus) Finding/Editing Positions for elements\r\n    I have included a tool to get positions for buttons in {x,y,z} form\r\n    Place it where you want the center of your element to be\r\n    Then copy the table from the notes (lower right of screen)\r\n        You can highlight it and CTRL+C\r\n    Paste it into the data table where needed (pos=)\r\n    If you want to manually tweek the values:\r\n        {0,0,0} is the center of the character sheet\r\n        {1,0,0} is right, {-1,0,0} is left\r\n        {0,0,-1} is up, {0,0,1} is down\r\n        0.1 for Y is the height off of the page.\r\n            If it was 0, it would be down inside the model of the sheet\r\n\r\nBegin editing below:    ]]\r\n\r\n--Set this to true while editing and false when you have finished\r\ndisableSave = false\r\n--Remember to set this to false once you are done making changes\r\n--Then, after you save & apply it, save your game too\r\n\r\n--Color information for button text (r,g,b, values of 0-1)\r\nbuttonFontColor = {0,0,0}\r\n--Color information for button background\r\nbuttonColor = {1,1,1}\r\n--Change scale of button (Avoid changing if possible)\r\nbuttonScale = {0.1,0.1,0.1}\r\n\r\n--This is the button placement information\r\ndefaultButtonData = {\r\n    --Add checkboxes\r\n    checkbox = {\r\n        --[[\r\n        pos   = the position (pasted from the helper tool)\r\n        size  = height/width/font_size for checkbox\r\n        state = default starting value for checkbox (true=checked, false=not)\r\n        ]]\r\n        --1 checkbox\r\n        {\r\n            pos   = {-0.847,0.1,-0.649},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --2 checkbox\r\n        {\r\n            pos   = {-0.514,0.1,-0.733},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --3 checkbox\r\n        {\r\n            pos   = {-0.512,0.1,-0.612},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --4 checkbox\r\n        {\r\n            pos   = {0.175,0.1,-0.708},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --5 checkbox\r\n        {\r\n            pos   = {0.174,0.1,-0.574},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --6 checkbox\r\n        {\r\n            pos   = {-0.035,0.1,-0.408},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --7 checkbox\r\n        {\r\n            pos   = {-0.818,0.1,-0.373},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --8 checkbox\r\n        {\r\n            pos   = {-0.361,0.1,-0.235},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --9 checkbox\r\n        {\r\n            pos   = {0.323,0.1,-0.091},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --10 checkbox\r\n        {\r\n            pos   = {-0.099,0.1,0.027},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --11 checkbox\r\n        {\r\n            pos   = {-0.778,0.1,0.126},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --12 checkbox\r\n        {\r\n            pos   = {-0.256,0.1,0.296},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --13 checkbox\r\n        {\r\n            pos   = {0.179,0.1,0.461},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --14 checkbox\r\n        {\r\n            pos   = {0.289,0.1,0.726},\r\n            size  = 250,\r\n            state = false\r\n        },\r\n        --End of checkboxes\r\n    },\r\n    --Add counters that have a + and - button\r\n    counter = {\r\n        --[[\r\n        pos    = the position (pasted from the helper tool)\r\n        size   = height/width/font_size for counter\r\n        value  = default starting value for counter\r\n        hideBG = if background of counter is hidden (true=hidden, false=not)\r\n        ]]\r\n        --Slot one counter 1\r\n\r\n        --End of counters\r\n    },\r\n    --Add editable text boxes\r\n    textbox = {\r\n        --[[\r\n        pos       = the position (pasted from the helper tool)\r\n        rows      = how many lines of text you want for this box\r\n        width     = how wide the text box is\r\n        font_size = size of text. This and \"rows\" effect overall height\r\n        label     = what is shown when there is no text. \"\" = nothing\r\n        value     = text entered into box. \"\" = nothing\r\n        alignment = Number to indicate how you want text aligned\r\n                    (1=Automatic, 2=Left, 3=Center, 4=Right, 5=Justified)\r\n        ]]\r\n\r\n        --Campaign Notes\r\n        {\r\n            pos       = {-0.4,0.1,0.652},\r\n            rows      =6,\r\n            width     = 3500,\r\n            font_size = 200,\r\n            label     = \"Click to type\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --End of textboxes\r\n    }\r\n}\r\n\r\n\r\n\r\n--Lua beyond this point, I recommend doing something more fun with your life\r\n\r\n\r\n\r\n--Save function\r\nfunction updateSave()\r\n    saved_data = JSON.encode(ref_buttonData)\r\n    if disableSave==true then saved_data=\"\" end\r\n    self.script_state = saved_data\r\nend\r\n\r\n--Startup procedure\r\nfunction onload(saved_data)\r\n    if disableSave==true then saved_data=\"\" end\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        ref_buttonData = loaded_data\r\n    else\r\n        ref_buttonData = defaultButtonData\r\n    end\r\n\r\n    spawnedButtonCount = 0\r\n    createCheckbox()\r\n    createCounter()\r\n    createTextbox()\r\nend\r\n\r\n\r\n\r\n--Click functions for buttons\r\n\r\n\r\n\r\n--Checks or unchecks the given box\r\nfunction click_checkbox(tableIndex, buttonIndex)\r\n    if ref_buttonData.checkbox[tableIndex].state == true then\r\n        ref_buttonData.checkbox[tableIndex].state = false\r\n        self.editButton({index=buttonIndex, label=\"\"})\r\n    else\r\n        ref_buttonData.checkbox[tableIndex].state = true\r\n        self.editButton({index=buttonIndex, label=string.char(10008)})\r\n    end\r\n    updateSave()\r\nend\r\n\r\n--Applies value to given counter display\r\nfunction click_counter(tableIndex, buttonIndex, amount)\r\n    ref_buttonData.counter[tableIndex].value = ref_buttonData.counter[tableIndex].value + amount\r\n    self.editButton({index=buttonIndex, label=ref_buttonData.counter[tableIndex].value})\r\n    updateSave()\r\nend\r\n\r\n--Updates saved value for given text box\r\nfunction click_textbox(i, value, selected)\r\n    if selected == false then\r\n        ref_buttonData.textbox[i].value = value\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Dud function for if you have a background on a counter\r\nfunction click_none() end\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n\r\n--Makes checkboxes\r\nfunction createCheckbox()\r\n    for i, data in ipairs(ref_buttonData.checkbox) do\r\n        --Sets up reference function\r\n        local buttonNumber = spawnedButtonCount\r\n        local funcName = \"checkbox\"..i\r\n        local func = function() click_checkbox(i, buttonNumber) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"\"\r\n        if data.state==true then label=string.char(10008) end\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=data.pos, height=data.size, width=data.size,\r\n            font_size=data.size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n    end\r\nend\r\n\r\n--Makes counters\r\nfunction createCounter()\r\n    for i, data in ipairs(ref_buttonData.counter) do\r\n        --Sets up display\r\n        local displayNumber = spawnedButtonCount\r\n        --Sets up label\r\n        local label = data.value\r\n        --Sets height/width for display\r\n        local size = data.size\r\n        if data.hideBG == true then size = 0 end\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=\"click_none\", function_owner=self,\r\n            position=data.pos, height=size, width=size,\r\n            font_size=data.size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n        --Sets up add 1\r\n        local funcName = \"counterAdd\"..i\r\n        local func = function() click_counter(i, displayNumber, 1) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"+\"\r\n        --Sets up position\r\n        local offsetDistance = (data.size/2 + data.size/4) * (buttonScale[1] * 0.002)\r\n        local pos = {data.pos[1] + offsetDistance, data.pos[2], data.pos[3]}\r\n        --Sets up size\r\n        local size = data.size / 2\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=pos, height=size, width=size,\r\n            font_size=size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n        --Sets up subtract 1\r\n        local funcName = \"counterSub\"..i\r\n        local func = function() click_counter(i, displayNumber, -1) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"-\"\r\n        --Set up position\r\n        local pos = {data.pos[1] - offsetDistance, data.pos[2], data.pos[3]}\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=pos, height=size, width=size,\r\n            font_size=size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n    end\r\nend\r\n\r\nfunction createTextbox()\r\n    for i, data in ipairs(ref_buttonData.textbox) do\r\n        --Sets up reference function\r\n        local funcName = \"textbox\"..i\r\n        local func = function(_,_,val,sel) click_textbox(i,val,sel) end\r\n        self.setVar(funcName, func)\r\n\r\n        self.createInput({\r\n            input_function = funcName,\r\n            function_owner = self,\r\n            label          = data.label,\r\n            alignment      = data.alignment,\r\n            position       = data.pos,\r\n            scale          = buttonScale,\r\n            width          = data.width,\r\n            height         = (data.font_size*data.rows)+24,\r\n            font_size      = data.font_size,\r\n            color          = buttonColor,\r\n            font_color     = buttonFontColor,\r\n            value          = data.value,\r\n        })\r\n    end\r\nend\r\n","LuaScriptState":"{\"checkbox\":[{\"pos\":[-0.847,0.1,-0.649],\"size\":250,\"state\":false},{\"pos\":[-0.514,0.1,-0.733],\"size\":250,\"state\":false},{\"pos\":[-0.512,0.1,-0.612],\"size\":250,\"state\":false},{\"pos\":[0.175,0.1,-0.708],\"size\":250,\"state\":false},{\"pos\":[0.174,0.1,-0.574],\"size\":250,\"state\":false},{\"pos\":[-0.035,0.1,-0.408],\"size\":250,\"state\":false},{\"pos\":[-0.818,0.1,-0.373],\"size\":250,\"state\":false},{\"pos\":[-0.361,0.1,-0.235],\"size\":250,\"state\":false},{\"pos\":[0.323,0.1,-0.091],\"size\":250,\"state\":false},{\"pos\":[-0.099,0.1,0.027],\"size\":250,\"state\":false},{\"pos\":[-0.778,0.1,0.126],\"size\":250,\"state\":false},{\"pos\":[-0.256,0.1,0.296],\"size\":250,\"state\":false},{\"pos\":[0.179,0.1,0.461],\"size\":250,\"state\":false},{\"pos\":[0.289,0.1,0.726],\"size\":250,\"state\":false}],\"counter\":[],\"textbox\":[{\"alignment\":2,\"font_size\":200,\"label\":\"Click to type\",\"pos\":[-0.4,0.1,0.652],\"rows\":6,\"value\":\"\",\"width\":3500}]}","XmlUI":""}}},{"GUID":"70c3a6","Name":"Custom_Model_Bag","Transform":{"posX":-0.999996841,"posY":0.9799975,"posZ":45.0000038,"rotX":-0.00000514717476,"rotY":180.025024,"rotZ":4.3885035e-7,"scaleX":1.20052135,"scaleY":0.249882281,"scaleZ":1.3145982},"Nickname":"II : Le Musée Miskatonic","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118403751490/58E295C1174102527E7C307F19B0DBBB8431B750/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"018503\":{\"lock\":true,\"pos\":{\"x\":-3.50002288818359,\"y\":1.52108347415924,\"z\":20.5},\"rot\":{\"x\":0.0108912764117122,\"y\":180.002410888672,\"z\":0.00494869286194444},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"044e47\":{\"lock\":false,\"pos\":{\"x\":-25.4398860931396,\"y\":1.82399547100067,\"z\":11.3346710205078},\"rot\":{\"x\":6.62966918945313,\"y\":359.945343017578,\"z\":0.00634014373645186},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"0623c7\":{\"lock\":false,\"pos\":{\"x\":-23.9999465942383,\"y\":1.77885556221008,\"z\":23.000057220459},\"rot\":{\"x\":-5.15162901137955E-06,\"y\":180.000106811523,\"z\":1.36460002408967E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"06541a\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.72913265228271,\"z\":-3},\"rot\":{\"x\":-0.000590887968428433,\"y\":180.000503540039,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0b9474\":{\"lock\":false,\"pos\":{\"x\":23.5000820159912,\"y\":1.51380920410156,\"z\":-5.50000858306885},\"rot\":{\"x\":0.0108924014493823,\"y\":179.989471435547,\"z\":0.00494628120213747},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"102945\":{\"lock\":false,\"pos\":{\"x\":5.49999809265137,\"y\":1.50660645961761,\"z\":20.0000038146973},\"rot\":{\"x\":359.993041992188,\"y\":30.0263423919678,\"z\":359.990264892578},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"16c9c9\":{\"lock\":false,\"pos\":{\"x\":3.99999856948853,\"y\":1.51796448230743,\"z\":7.50000381469727},\"rot\":{\"x\":0.0108916396275163,\"y\":179.999176025391,\"z\":0.0049480153247714},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1ea2c4\":{\"lock\":false,\"pos\":{\"x\":0.499998241662979,\"y\":1.50665807723999,\"z\":18},\"rot\":{\"x\":0.00973009970039129,\"y\":119.9912109375,\"z\":359.993041992188},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"2efca1\":{\"lock\":true,\"pos\":{\"x\":11.9999980926514,\"y\":1.51822412014008,\"z\":12.5000028610229},\"rot\":{\"x\":0.0108913034200668,\"y\":180.003051757813,\"z\":0.00494883256033063},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3bcad3\":{\"lock\":false,\"pos\":{\"x\":7.49999856948853,\"y\":1.50529325008392,\"z\":14.0000038146973},\"rot\":{\"x\":0.011200588196516,\"y\":135,\"z\":-0.00420425971969962},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4763ba\":{\"lock\":false,\"pos\":{\"x\":-21.5002555847168,\"y\":1.77890622615814,\"z\":3.4996509552002},\"rot\":{\"x\":-4.94312780574546E-06,\"y\":180.002502441406,\"z\":-4.47835617478631E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4fcd01\":{\"lock\":false,\"pos\":{\"x\":7.49999856948853,\"y\":1.50605356693268,\"z\":18.0000038146973},\"rot\":{\"x\":-0.00115725013893098,\"y\":60.0178718566895,\"z\":359.988098144531},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"555443\":{\"lock\":false,\"pos\":{\"x\":12.5000019073486,\"y\":1.53643202781677,\"z\":-5.99982404708862},\"rot\":{\"x\":0.00495016854256392,\"y\":90.0116653442383,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5559ff\":{\"lock\":false,\"pos\":{\"x\":7.49999761581421,\"y\":1.50462782382965,\"z\":10.5000019073486},\"rot\":{\"x\":0.0111996466293931,\"y\":134.988342285156,\"z\":-0.00420669419690967},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5ae079\":{\"lock\":false,\"pos\":{\"x\":-20.5082702636719,\"y\":1.83530080318451,\"z\":10.0028686523438},\"rot\":{\"x\":-5.05083835378173E-06,\"y\":179.961669921875,\"z\":2.99780026580265E-07},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"618c13\":{\"lock\":false,\"pos\":{\"x\":-28.5005912780762,\"y\":1.77890622615814,\"z\":3.4994010925293},\"rot\":{\"x\":-4.94366486236686E-06,\"y\":180.002182006836,\"z\":6.07732388857585E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"61f6d6\":{\"lock\":true,\"pos\":{\"x\":-3.50000166893005,\"y\":1.51956272125244,\"z\":12.5000038146973},\"rot\":{\"x\":0.0108915027230978,\"y\":179.999908447266,\"z\":0.00494818622246385},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":3.9999988079071,\"y\":1.5051201581955,\"z\":11.5000028610229},\"rot\":{\"x\":0.0108895972371101,\"y\":180.0205078125,\"z\":0.00495673017576337},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"768095\":{\"lock\":false,\"pos\":{\"x\":2.99998950958252,\"y\":1.60163915157318,\"z\":-6.49998760223389},\"rot\":{\"x\":0.016836004331708,\"y\":179.981063842773,\"z\":-4.33434195201698E-07},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"84b664\":{\"lock\":false,\"pos\":{\"x\":-32.1550102233887,\"y\":1.76630067825317,\"z\":11.3665914535522},\"rot\":{\"x\":5.08416269440204E-06,\"y\":0.0369319729506969,\"z\":4.15769676465061E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"8a388a\":{\"lock\":false,\"pos\":{\"x\":-32.0009422302246,\"y\":1.77890622615814,\"z\":3.49917340278625},\"rot\":{\"x\":-4.91512400913052E-06,\"y\":180.004119873047,\"z\":4.62985205729183E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8f51ad\":{\"lock\":false,\"pos\":{\"x\":-30.5000667572021,\"y\":1.81030166149139,\"z\":9.00002861022949},\"rot\":{\"x\":-4.98770032208995E-06,\"y\":180.001739501953,\"z\":2.00904167968474E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"94d30e\":{\"lock\":true,\"pos\":{\"x\":7.99999809265137,\"y\":1.52094566822052,\"z\":25.0000038146973},\"rot\":{\"x\":0.0108915027230978,\"y\":179.999938964844,\"z\":0.00494810799136758},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"966926\":{\"lock\":false,\"pos\":{\"x\":0.499999642372131,\"y\":1.50589776039124,\"z\":14},\"rot\":{\"x\":-0.00420427601784468,\"y\":44.9945182800293,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"9c34eb\":{\"lock\":false,\"pos\":{\"x\":17.5000038146973,\"y\":1.54081428050995,\"z\":-5.99980068206787},\"rot\":{\"x\":0.00494705978780985,\"y\":89.9940338134766,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a22db0\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.50768649578094,\"z\":25},\"rot\":{\"x\":0.00494612753391266,\"y\":89.9915008544922,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a4a074\":{\"lock\":false,\"pos\":{\"x\":0.499997913837433,\"y\":1.50523245334625,\"z\":10.5000028610229},\"rot\":{\"x\":-0.00420538056641817,\"y\":44.9881324768066,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a5838a\":{\"lock\":false,\"pos\":{\"x\":2.49999976158142,\"y\":1.50686550140381,\"z\":20},\"rot\":{\"x\":0.0119066694751382,\"y\":149.999954223633,\"z\":-0.0011588791385293},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a6dd2a\":{\"lock\":false,\"pos\":{\"x\":11.9999980926514,\"y\":1.51698851585388,\"z\":6.00000286102295},\"rot\":{\"x\":0.0108900023624301,\"y\":180.019409179688,\"z\":0.00495199207216501},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c27385\":{\"lock\":false,\"pos\":{\"x\":-25.0000057220459,\"y\":1.83530128002167,\"z\":3.49999451637268},\"rot\":{\"x\":-5.0611079132068E-06,\"y\":179.984710693359,\"z\":-1.05046311205115E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"cdb67c\":{\"lock\":false,\"pos\":{\"x\":-20.2868995666504,\"y\":1.76630067825317,\"z\":11.4502000808716},\"rot\":{\"x\":5.33483489562059E-06,\"y\":359.976684570313,\"z\":-2.04434613237936E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"cff541\":{\"lock\":false,\"pos\":{\"x\":-3.50000143051147,\"y\":1.5067183971405,\"z\":16.5000038146973},\"rot\":{\"x\":0.0108913313597441,\"y\":180.002227783203,\"z\":0.00495269615203142},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"da039d\":{\"lock\":false,\"pos\":{\"x\":3.98040008544922,\"y\":1.51948714256287,\"z\":15.5010004043579},\"rot\":{\"x\":0.0108914896845818,\"y\":179.999588012695,\"z\":0.00494808750227094},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"db953a\":{\"lock\":false,\"pos\":{\"x\":-25.551815032959,\"y\":1.83509337902069,\"z\":10.0260925292969},\"rot\":{\"x\":0.0117940958589315,\"y\":179.897354125977,\"z\":359.981109619141},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"e12a62\":{\"lock\":false,\"pos\":{\"x\":-20.4999122619629,\"y\":1.77885556221008,\"z\":23.000093460083},\"rot\":{\"x\":-5.10704558109865E-06,\"y\":180.011093139648,\"z\":8.85711770592934E-09},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ebd824\":{\"lock\":false,\"pos\":{\"x\":-22.1019878387451,\"y\":1.76629936695099,\"z\":25.5858097076416},\"rot\":{\"x\":4.64570211988757E-06,\"y\":-9.97808310785331E-05,\"z\":-4.12198062349489E-08},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"f07c33\":{\"lock\":false,\"pos\":{\"x\":-3.50000262260437,\"y\":1.51832711696625,\"z\":6.00000143051147},\"rot\":{\"x\":0.0108914189040661,\"y\":180.001556396484,\"z\":0.004948521964252},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f3a917\":{\"lock\":false,\"pos\":{\"x\":-34.0000953674316,\"y\":1.77890574932098,\"z\":8.99989986419678},\"rot\":{\"x\":-4.9585632950766E-06,\"y\":180.00016784668,\"z\":2.28866543494632E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fccb36\":{\"lock\":true,\"pos\":{\"x\":12.0000009536743,\"y\":1.51974487304688,\"z\":20.5000038146973},\"rot\":{\"x\":0.0108915800228715,\"y\":180.000045776367,\"z\":0.00494820019230247},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ff2fa7\":{\"lock\":true,\"pos\":{\"x\":0.499995082616806,\"y\":1.52159345149994,\"z\":25.0000038146973},\"rot\":{\"x\":0.0108914086595178,\"y\":179.999862670898,\"z\":0.00494806515052915},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"018503","Name":"CardCustom","Transform":{"posX":-3.500023,"posY":1.52108347,"posZ":20.5,"rotX":0.0108912764,"rotY":180.002411,"rotZ":0.004948693,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755616213/4BA2D77C786D6072A7ECBD7B99A0A7C3C2048E41/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755616213/4BA2D77C786D6072A7ECBD7B99A0A7C3C2048E41/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"044e47","Name":"Custom_Model","Transform":{"posX":-25.439867,"posY":1.82291508,"posZ":11.3346386,"rotX":6.50480032,"rotY":359.94162,"rotZ":0.006160771,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":true,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Bureau de sécurité\"}","XmlUI":""},{"GUID":"06541a","Name":"Deck","Transform":{"posX":30.5,"posY":1.72913265,"posZ":-3,"rotX":-0.000591203163,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Rencontre","Description":"Le Musée Miskatonic","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[16900,16901,17201,17202,17338,17204,15620,15623,15621,15622,15625,15624,15509,15512,15508,15511,15514,15515,18608,19902,18609,18607,18606,18603,18605,16312,16311,16313,16314,16315,16310,16316,16337,16338],"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"4b7dd0","Name":"Card","Transform":{"posX":30.5,"posY":11.184535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Porte Verrouillée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16900,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c1f477","Name":"Card","Transform":{"posX":30.5,"posY":10.9845352,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Porte Verrouillée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16901,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"082199","Name":"Card","Transform":{"posX":30.5,"posY":10.7845354,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Brouilard Couvrant","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17201,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc1997","Name":"Card","Transform":{"posX":30.5,"posY":10.5845356,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Brouilard Couvrant","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17202,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3ec405","Name":"Card","Transform":{"posX":30.5,"posY":10.0470486,"posZ":-2.99999976,"rotX":-0.000591022952,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Froid de la Crypte","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17338,"SidewaysCard":false,"CustomDeck":{"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4214a2","Name":"Card","Transform":{"posX":30.5,"posY":10.184535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Froid de la Crypte","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17204,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6533fc","Name":"Card","Transform":{"posX":30.5,"posY":9.984535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Barrière Mystique","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02102\",\n  \"traits\": \"Hex. Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15620,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e2a503","Name":"Card","Transform":{"posX":30.5,"posY":9.784535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Barrière Mystique","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02102\",\n  \"traits\": \"Hex. Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15623,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ff0620","Name":"Card","Transform":{"posX":30.5,"posY":9.584536,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terreur de l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02101\",\n  \"traits\": \"Hex. Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15621,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"62531f","Name":"Card","Transform":{"posX":30.5,"posY":9.384536,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terreur de l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02101\",\n  \"traits\": \"Hex. Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15622,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"11d71d","Name":"Card","Transform":{"posX":30.5,"posY":9.184535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Propulsé dans l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02100\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15625,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"217f6b","Name":"Card","Transform":{"posX":30.5,"posY":8.647038,"posZ":-2.99999976,"rotX":0.000006578775,"rotY":180.0005,"rotZ":180.0008,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Propulsé dans l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02100\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15624,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b52985","Name":"Card","Transform":{"posX":30.5,"posY":8.784535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15509,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ed11ad","Name":"Card","Transform":{"posX":30.5,"posY":8.584536,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15512,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc2af0","Name":"Card","Transform":{"posX":30.5,"posY":8.384536,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15508,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3bd92a","Name":"Card","Transform":{"posX":30.5,"posY":8.184535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15511,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e0e2","Name":"Card","Transform":{"posX":30.5,"posY":7.647049,"posZ":-2.99999976,"rotX":-0.000590889831,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15514,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5b9c33","Name":"Card","Transform":{"posX":30.5,"posY":7.784535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15515,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d8d1a1","Name":"Card","Transform":{"posX":30.5,"posY":7.584535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Coup du Sort","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02093\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18608,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"da76bb","Name":"Card","Transform":{"posX":30.5,"posY":5.694923,"posZ":-3.00000048,"rotX":-0.0005899989,"rotY":180.0005,"rotZ":180.001053,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Horreur Chasseresse","Description":"Issue du Néant","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02141\",\n  \"traits\": \"Monster. Elite.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19902,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0ee4ad","Name":"Card","Transform":{"posX":30.5,"posY":7.047049,"posZ":-2.99999976,"rotX":-0.0005910228,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Coup du Sort","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02093\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18609,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9b7bc0","Name":"Card","Transform":{"posX":30.5,"posY":7.184535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Coup du Sort","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02093\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18607,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"941ff9","Name":"Card","Transform":{"posX":30.5,"posY":6.984535,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chance Maudite","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02092\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18606,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"368d2c","Name":"Card","Transform":{"posX":30.5,"posY":6.78453636,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chance Maudite","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02092\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18603,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"695a70","Name":"Card","Transform":{"posX":30.5,"posY":6.58453655,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chance Maudite","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02092\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18605,"SidewaysCard":false,"CustomDeck":{"186":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a95294","Name":"Card","Transform":{"posX":30.5,"posY":6.04705,"posZ":-2.99999976,"rotX":-0.000590912066,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rampant Derrière Vous","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02146\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16312,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"52050a","Name":"Card","Transform":{"posX":30.5,"posY":6.18453646,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rampant Derrière Vous","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02146\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16311,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a3e90a","Name":"Card","Transform":{"posX":30.5,"posY":5.984536,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Expositions Temporaires","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02145\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16313,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"90a197","Name":"Card","Transform":{"posX":30.5,"posY":5.44705,"posZ":-2.99999976,"rotX":-0.000590912066,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Expositions Temporaires","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02145\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16314,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b49261","Name":"Card","Transform":{"posX":30.5,"posY":5.58453655,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Passage dans le Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02144\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16315,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8ed7d2","Name":"Card","Transform":{"posX":30.5,"posY":5.38453627,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Passage dans le Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02144\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16310,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"840d4d","Name":"Card","Transform":{"posX":30.5,"posY":4.84705,"posZ":-2.99999976,"rotX":-0.0005909789,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Passage dans le Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02144\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16316,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ec4ef0","Name":"Card","Transform":{"posX":30.5,"posY":4.984536,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Traqué dans l'Obscurité","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02143\",\n  \"traits\": \"Tactic.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16337,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"dd6818","Name":"Card","Transform":{"posX":30.5,"posY":4.78453636,"posZ":-3,"rotX":-0.000591021148,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Traqué dans l'Obscurité","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02143\",\n  \"traits\": \"Tactic.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16338,"SidewaysCard":false,"CustomDeck":{"163":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"0b9474","Name":"Card","Transform":{"posX":23.500082,"posY":1.5138092,"posZ":-5.50000954,"rotX":0.0108923623,"rotY":179.989456,"rotZ":0.00494624674,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Référence","Description":"Le Musée Miskatonic","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19900,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"102945","Name":"Custom_Tile","Transform":{"posX":5.499998,"posY":1.50660646,"posZ":20.0000038,"rotX":359.993042,"rotY":30.0263424,"rotZ":359.990265,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"16c9c9","Name":"Card","Transform":{"posX":3.99999857,"posY":1.51796448,"posZ":7.500004,"rotX":0.0108915642,"rotY":179.999176,"rotZ":0.00494803861,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Entrée du Musée","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02126\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Circle\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19906,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1ea2c4","Name":"Custom_Tile","Transform":{"posX":0.499997765,"posY":1.506658,"posZ":18,"rotX":0.009729985,"rotY":119.991211,"rotZ":359.993042,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"2efca1","Name":"CardCustom","Transform":{"posX":11.9999981,"posY":1.51822412,"posZ":12.5000029,"rotX":0.0108913034,"rotY":180.003052,"rotZ":0.00494883256,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106500,"SidewaysCard":false,"CustomDeck":{"11065":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755654274/E1C516725CC32556A9F093B96384451BDB4AB8D1/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755654274/E1C516725CC32556A9F093B96384451BDB4AB8D1/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3bcad3","Name":"Custom_Tile","Transform":{"posX":7.49999857,"posY":1.50529313,"posZ":14.0000038,"rotX":0.0112005752,"rotY":135,"rotZ":-0.004204107,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"4763ba","Name":"Card","Transform":{"posX":-21.5002575,"posY":1.77890623,"posZ":3.49965,"rotX":-0.000004840543,"rotY":180.002548,"rotZ":-7.485329e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engendrée par l'Ombre","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02142\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19901,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4fcd01","Name":"Custom_Tile","Transform":{"posX":7.49999857,"posY":1.50605357,"posZ":18.0000038,"rotX":-0.00115736027,"rotY":60.01787,"rotZ":359.9881,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"555443","Name":"Deck","Transform":{"posX":12.5000019,"posY":1.536432,"posZ":-5.99982643,"rotX":0.00495044375,"rotY":90.01171,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Intrigue","Description":"Le Musée Miskatonic","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[20002,20001,20000],"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"468a95","Name":"Card","Transform":{"posX":12.500001,"posY":4.791836,"posZ":-5.99982357,"rotX":0.00495017366,"rotY":90.01172,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Dans Chaque Ombre","Description":"Intrigue 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 7,\n  \"id\": \"02121\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":20002,"SidewaysCard":true,"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"82bbd0","Name":"Card","Transform":{"posX":12.500001,"posY":4.591836,"posZ":-5.99982357,"rotX":0.00495017366,"rotY":90.01172,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Les Ombres Grandissent","Description":"Intrigue 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 7,\n  \"id\": \"02120\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":20001,"SidewaysCard":true,"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b5962c","Name":"Card","Transform":{"posX":12.5000076,"posY":1.613136,"posZ":-5.999839,"rotX":0.00455066841,"rotY":90.01172,"rotZ":359.986938,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Accès Restreint","Description":"Intrigue 1a","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 5,\n  \"id\": \"02119\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":20000,"SidewaysCard":true,"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"5559ff","Name":"Custom_Tile","Transform":{"posX":7.49999762,"posY":1.50462782,"posZ":10.5000019,"rotX":0.0111996224,"rotY":134.988342,"rotZ":-0.004206321,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"5ae079","Name":"Custom_Model_Bag","Transform":{"posX":-20.50827,"posY":1.8353008,"posZ":10.0028687,"rotX":-0.0000052129185,"rotY":179.96167,"rotZ":5.132034e-8,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662298201029/7B1C2164A753181108452C97908B20F2F40F3F11/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"a6dd2a\":{\"lock\":false,\"pos\":{\"x\":11.9999980926514,\"y\":1.51698851585388,\"z\":6.00000286102295},\"rot\":{\"x\":0.0108900023624301,\"y\":180.019409179688,\"z\":0.00495199207216501},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e12a62\":{\"lock\":false,\"pos\":{\"x\":-20.4999122619629,\"y\":1.77885556221008,\"z\":23.000093460083},\"rot\":{\"x\":-5.10704558109865E-06,\"y\":180.011093139648,\"z\":8.85711770592934E-09},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"a6dd2a","Name":"Card","Transform":{"posX":11.999999,"posY":1.51698852,"posZ":6.000002,"rotX":0.0108897956,"rotY":180.0194,"rotZ":0.00495198648,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bureau de l'Administration","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02130\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19908,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e12a62","Name":"Card","Transform":{"posX":-20.4999065,"posY":1.77890456,"posZ":23.0001011,"rotX":-0.00000495155564,"rotY":180.011078,"rotZ":-1.13299476e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bureau de l'Administration","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02131\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19909,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"618c13","Name":"Card","Transform":{"posX":-28.5005951,"posY":1.77890623,"posZ":3.49939728,"rotX":-0.00000509238271,"rotY":180.002182,"rotZ":1.61314322e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Adam Lynch","Description":"Sécurité du Musée","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02139\",\n  \"sanity\": 1,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19903,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"61f6d6","Name":"CardCustom","Transform":{"posX":-3.50000167,"posY":1.51956272,"posZ":12.5000038,"rotX":0.0108915027,"rotY":179.999908,"rotZ":0.004948186,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106600,"SidewaysCard":false,"CustomDeck":{"11066":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755655756/F61AC3EADD445ABDD7DDEBA1DE6E775F79C68086/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755655756/F61AC3EADD445ABDD7DDEBA1DE6E775F79C68086/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"768095","Name":"Custom_Tile","Transform":{"posX":2.999995,"posY":1.60163236,"posZ":-6.49998331,"rotX":0.0171770547,"rotY":179.981049,"rotZ":0.005648048,"scaleX":1.6428808,"scaleY":1,"scaleZ":1.6428808},"Nickname":"Mise en place du Chaos Bag","Description":"II : Le Musée Miskatonic","GMNotes":"{\"data\":\"The Miskatonic Museum\",\"easy\":false,\"expert\":false,\"hard\":false,\"normal\":false,\"standalone\":true}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.8745098,"g":0.8,"b":0.7019608},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend","LuaScriptState":"","XmlUI":""},{"GUID":"84b664","Name":"Custom_Model","Transform":{"posX":-32.155014,"posY":1.76630068,"posZ":11.3665886,"rotX":0.000005017081,"rotY":0.0369188525,"rotZ":3.144899e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":true,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Deck Exposition\"}","XmlUI":""},{"GUID":"8a388a","Name":"Card","Transform":{"posX":-32.000946,"posY":1.77890623,"posZ":3.49916816,"rotX":-0.0000050599624,"rotY":180.004059,"rotZ":6.94818354e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Harold Walsted","Description":"Conservateur du Musée","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02138\",\n  \"sanity\": 1,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19905,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8f51ad","Name":"Deck","Transform":{"posX":-30.5000687,"posY":1.81030166,"posZ":9.000026,"rotX":-0.00000510245764,"rotY":180.00174,"rotZ":-6.726411e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[19912,19917,19916,19914,19915],"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"0f57d6","Name":"Card","Transform":{"posX":-30.5000744,"posY":4.86570549,"posZ":9.000019,"rotX":-0.00000513239365,"rotY":180.00174,"rotZ":0.00000109305586,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Salle d'Exposition","Description":"Miskatonic. Exposition.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02133\",\n  \"locationBack\": {\n    \"connections\": \"Square|Crescent\",\n    \"icons\": \"Tee|ExhibitHall\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"ExhibitHall\"\n  },\n  \"traits\": \"Miskatonic. Exhibit.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19912,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"bc49ed","Name":"Card","Transform":{"posX":-30.5000744,"posY":5.0657053,"posZ":9.000019,"rotX":-0.00000513239365,"rotY":180.00174,"rotZ":0.00000109305586,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Salle d'Exposition","Description":"Miskatonic. Exposition.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02134\",\n  \"locationBack\": {\n    \"connections\": \"Square|Tilde\",\n    \"icons\": \"Hourglass|ExhibitHall\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"ExhibitHall\"\n  },\n  \"traits\": \"Miskatonic. Exhibit.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19917,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8be7d2","Name":"Card","Transform":{"posX":-30.5000744,"posY":5.265705,"posZ":9.000019,"rotX":-0.00000513239365,"rotY":180.00174,"rotZ":0.00000109305586,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Salle d'Exposition","Description":"Miskatonic. Exposition.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02136\",\n  \"locationBack\": {\n    \"connections\": \"Square|Hourglass\",\n    \"icons\": \"Tilde|ExhibitHall\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"ExhibitHall\"\n  },\n  \"traits\": \"Miskatonic. Exhibit.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19916,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"11fda1","Name":"Card","Transform":{"posX":-30.5000744,"posY":5.46570539,"posZ":9.000019,"rotX":-0.00000513239365,"rotY":180.00174,"rotZ":0.00000109305586,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Salle d'Exposition","Description":"Miskatonic. Exposition.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02132\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Plus|ExhibitHall\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"ExhibitHall\"\n  },\n  \"traits\": \"Miskatonic. Exhibit.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19914,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e6b20b","Name":"Card","Transform":{"posX":-30.5000744,"posY":1.89464712,"posZ":9.000019,"rotX":0.00298660249,"rotY":180.00174,"rotZ":-0.00354958232,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Salle d'Exposition","Description":"Miskatonic. Exposition.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02135\",\n  \"locationBack\": {\n    \"connections\": \"Square|Tee\",\n    \"icons\": \"Crescent|ExhibitHall\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"ExhibitHall\"\n  },\n  \"traits\": \"Miskatonic. Exhibit.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19915,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"94d30e","Name":"CardCustom","Transform":{"posX":7.999998,"posY":1.52094567,"posZ":25.0000038,"rotX":0.0108915027,"rotY":179.999939,"rotZ":0.00494810753,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106700,"SidewaysCard":false,"CustomDeck":{"11067":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755659049/9AF2DF88904D62C086CAAA295BE046CBE8E65415/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755659049/9AF2DF88904D62C086CAAA295BE046CBE8E65415/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"966926","Name":"Custom_Tile","Transform":{"posX":0.4999994,"posY":1.50589776,"posZ":14,"rotX":-0.0042038355,"rotY":44.9944954,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"9c34eb","Name":"Deck","Transform":{"posX":17.5000057,"posY":1.54081428,"posZ":-5.999801,"rotX":0.00494675944,"rotY":89.99396,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte","Description":"Le Musée Miskatonic","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[20005,20006,20004,20003],"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"6bf821","Name":"Card","Transform":{"posX":17.5000019,"posY":4.996218,"posZ":-5.999799,"rotX":0.00494660763,"rotY":89.99401,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"À la Recherche de l'Ouvrage","Description":"Acte 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02125\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":20005,"SidewaysCard":true,"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a19eed","Name":"Card","Transform":{"posX":17.5000019,"posY":4.796218,"posZ":-5.999799,"rotX":0.00494660763,"rotY":89.99401,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Entré par Effraction","Description":"Acte 2a","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02124\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":20006,"SidewaysCard":true,"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"90b0c5","Name":"Card","Transform":{"posX":17.5000038,"posY":1.60767555,"posZ":-5.999804,"rotX":0.004403204,"rotY":89.99401,"rotZ":359.9886,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Nuit au Musée","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02123\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":20004,"SidewaysCard":true,"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"41f3a9","Name":"Card","Transform":{"posX":17.50001,"posY":1.62131214,"posZ":-5.999815,"rotX":0.007918437,"rotY":89.99401,"rotZ":359.987732,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Trouver une Entrée","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThreshold\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02122\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":20003,"SidewaysCard":true,"CustomDeck":{"200":{"FaceURL":"https://i.imgur.com/Tq7TPqq.jpg","BackURL":"https://i.imgur.com/0DGPHHP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"a22db0","Name":"Custom_Tile","Transform":{"posX":4,"posY":1.5076865,"posZ":25,"rotX":0.00494625559,"rotY":89.9915,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"a4a074","Name":"Custom_Tile","Transform":{"posX":0.4999979,"posY":1.50523245,"posZ":10.5000029,"rotX":-0.00420542527,"rotY":44.98812,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"a5838a","Name":"Custom_Tile","Transform":{"posX":2.49999976,"posY":1.5068655,"posZ":20,"rotX":0.0119067822,"rotY":149.999954,"rotZ":-0.00115757424,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"c27385","Name":"Custom_Model_Bag","Transform":{"posX":-25.0000076,"posY":1.83530128,"posZ":3.49999213,"rotX":-0.000004823285,"rotY":179.98468,"rotZ":2.13514937e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Soutiens/faiblesses d'histoire","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/5077277234347423622/F89B4508C6E2782780C2B5593FB68379E0FB2DB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"","LuaScriptState":"{\"ml\":[]}","XmlUI":"","ContainedObjects":[{"GUID":"c7e721","Name":"Card","Transform":{"posX":-25.0003166,"posY":1.92510712,"posZ":2.99987555,"rotX":0.0767458156,"rotY":179.999222,"rotZ":0.188904032,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Necronomicon","Description":"Traduction d'Olaus Wormius","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 2,\n  \"cycle\": \"The Dunwich Legacy\",\n  \"id\": \"02140\",\n  \"intellectIcons\": 1,\n  \"traits\": \"Item. Tome.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19904,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"cdb67c","Name":"Custom_Model","Transform":{"posX":-20.2869,"posY":1.76630068,"posZ":11.450201,"rotX":0.00000477105141,"rotY":359.976624,"rotZ":3.59010066e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":true,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Bureau de l'administration\"}","XmlUI":""},{"GUID":"cff541","Name":"Custom_Tile","Transform":{"posX":-3.50000119,"posY":1.5067184,"posZ":16.5000038,"rotX":0.0108912783,"rotY":180.002243,"rotZ":0.00495327776,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"da039d","Name":"Card","Transform":{"posX":3.9804,"posY":1.51948714,"posZ":15.501,"rotX":0.0108915595,"rotY":179.999588,"rotZ":0.00494811,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Hall du Musée","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02127\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Diamond|Triangle|ExhibitHall\",\n    \"icons\": \"Square\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19907,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"db953a","Name":"Custom_Model_Bag","Transform":{"posX":-25.55166,"posY":1.83509231,"posZ":10.0259161,"rotX":0.0117621338,"rotY":179.888382,"rotZ":359.981079,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662298208915/AACFC5A7E2B2828E449B2979907F1D94C4C5469C/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"0623c7\":{\"lock\":false,\"pos\":{\"x\":-23.9999465942383,\"y\":1.77885556221008,\"z\":23.000057220459},\"rot\":{\"x\":-5.15162901137955E-06,\"y\":180.000106811523,\"z\":1.36460002408967E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f07c33\":{\"lock\":false,\"pos\":{\"x\":-3.50000262260437,\"y\":1.51832711696625,\"z\":6.00000143051147},\"rot\":{\"x\":0.0108914189040661,\"y\":180.001556396484,\"z\":0.004948521964252},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"0623c7","Name":"Card","Transform":{"posX":-23.999939,"posY":1.77890456,"posZ":23.0000648,"rotX":-0.000005152559,"rotY":180.0001,"rotZ":8.17179355e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bureau de la Sécurité","Description":"Miskatonic.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02129\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Miskatonic.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19910,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f07c33","Name":"Card","Transform":{"posX":-3.50000262,"posY":1.51832712,"posZ":6.00000048,"rotX":0.0108913733,"rotY":180.001556,"rotZ":0.0049485825,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bureau de la Sécurité","Description":"Miskatonic.","GMNotes":"{\n  \"id\": \"02128\",\n  \"locationBack\": {\n    \"connections\": \"Heart|Hourglass|SlantedEquals\",\n    \"icons\": \"Crescent\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Heart|Hourglass|SlantedEquals\",\n    \"icons\": \"Crescent\"\n  },\n  \"traits\": \"Restricted. Casino.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19911,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"ebd824","Name":"Custom_Model","Transform":{"posX":-22.101984,"posY":1.76629937,"posZ":25.5858135,"rotX":0.00000511826,"rotY":-0.00008331453,"rotZ":1.86990135e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":true,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":550,\"text\":\"Hors jeu\"}","XmlUI":""},{"GUID":"f3a917","Name":"Card","Transform":{"posX":-34.0001,"posY":1.77890575,"posZ":8.999896,"rotX":-0.000005083707,"rotY":180.000092,"rotZ":1.855801e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Salle d'Exposition","Description":"Miskatonic. Exposition.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02137\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"SlantedEquals|ExhibitHall\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"ExhibitHall\"\n  },\n  \"traits\": \"Miskatonic. Exhibit.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19913,"SidewaysCard":false,"CustomDeck":{"199":{"FaceURL":"https://i.imgur.com/GI7QyCb.jpg","BackURL":"https://i.imgur.com/EUjYjZK.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"fccb36","Name":"CardCustom","Transform":{"posX":12.000001,"posY":1.51974487,"posZ":20.5000038,"rotX":0.01089158,"rotY":180.000046,"rotZ":0.0049482,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1105800,"SidewaysCard":false,"CustomDeck":{"11058":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755656398/784A5C9E69597C25D0CE052B4C48C063453A9D1B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755656398/784A5C9E69597C25D0CE052B4C48C063453A9D1B/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ff2fa7","Name":"CardCustom","Transform":{"posX":0.499995083,"posY":1.52159345,"posZ":25.0000038,"rotX":0.0108914087,"rotY":179.999863,"rotZ":0.004948065,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1105900,"SidewaysCard":false,"CustomDeck":{"11059":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755657091/AFF8ACFBC5678926BCC68305BFC3843BF4612216/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755657091/AFF8ACFBC5678926BCC68305BFC3843BF4612216/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}],"AttachedDecals":[{"Transform":{"posX":-0.0021877822,"posY":-0.08963572,"posZ":-0.00288731651,"rotX":270,"rotY":359.869568,"rotZ":0,"scaleX":2.00000215,"scaleY":2.00000238,"scaleZ":2.00000262},"CustomDecal":{"Name":"dunwich_back","ImageURL":"http://cloud-3.steamusercontent.com/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/","Size":7.4}}]},{"GUID":"70e81a","Name":"Custom_Model_Bag","Transform":{"posX":17,"posY":0.9799975,"posZ":45,"rotX":-0.00000469512133,"rotY":180.0232,"rotZ":-2.54974651e-7,"scaleX":1.20052135,"scaleY":0.249882281,"scaleZ":1.3145982},"Nickname":"VI : Là où le Destin Attend","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118403757711/409D144AFA76534B28160AECCE67B4AC7F519469/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"018503\":{\"lock\":false,\"pos\":{\"x\":-2.00000047683716,\"y\":1.5212390422821,\"z\":22},\"rot\":{\"x\":0.0108911599963903,\"y\":180.004470825195,\"z\":0.00494902580976486},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"026422\":{\"lock\":false,\"pos\":{\"x\":-25.5,\"y\":1.8054381608963,\"z\":14.5},\"rot\":{\"x\":-5.06905689690029E-06,\"y\":180.000350952148,\"z\":2.54237679797598E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"02ae6a\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.50361704826355,\"z\":7},\"rot\":{\"x\":-0.00494689028710127,\"y\":269.994964599609,\"z\":0.0108989579603076},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"186784\":{\"lock\":false,\"pos\":{\"x\":-2.00010013580322,\"y\":1.50706398487091,\"z\":18.9997005462646},\"rot\":{\"x\":359.989105224609,\"y\":-0.00550910318270326,\"z\":-0.0049510826356709},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"20b764\":{\"lock\":false,\"pos\":{\"x\":-29.5002098083496,\"y\":1.80062520503998,\"z\":2.49978923797607},\"rot\":{\"x\":-1.02314118066715E-07,\"y\":89.9993515014648,\"z\":5.39945858690771E-06},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"282840\":{\"lock\":false,\"pos\":{\"x\":7.00000238418579,\"y\":1.51932120323181,\"z\":15.9999952316284},\"rot\":{\"x\":0.0108914542943239,\"y\":180,\"z\":0.00494820671156049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2da9ab\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.5048611164093,\"z\":11.5},\"rot\":{\"x\":359.989105224609,\"y\":359.989624023438,\"z\":-0.00495013454928994},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"2efca1\":{\"lock\":false,\"pos\":{\"x\":16,\"y\":1.51854383945465,\"z\":15.9993000030518},\"rot\":{\"x\":0.0109434574842453,\"y\":179.391464233398,\"z\":0.00483229197561741},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3bb31a\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.51761043071747,\"z\":7},\"rot\":{\"x\":0.0108914813026786,\"y\":180.000076293945,\"z\":0.00494831055402756},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"43be5c\":{\"lock\":false,\"pos\":{\"x\":3.49999976158142,\"y\":1.50278723239899,\"z\":-1.00000107288361},\"rot\":{\"x\":0.0049524656496942,\"y\":90.0255432128906,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"483a34\":{\"lock\":false,\"pos\":{\"x\":10.4999990463257,\"y\":1.50218272209167,\"z\":-1.0000011920929},\"rot\":{\"x\":0.00494767352938652,\"y\":90.0000686645508,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4e045b\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.6016,\"z\":-6.5},\"rot\":{\"x\":0.0172,\"y\":180.011,\"z\":0.0057},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"5d5269\":{\"lock\":false,\"pos\":{\"x\":-34.5004196166992,\"y\":1.77885735034943,\"z\":2.99968123435974},\"rot\":{\"x\":-5.10920699525741E-06,\"y\":180.000045776367,\"z\":2.23094815510194E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5e20af\":{\"lock\":false,\"pos\":{\"x\":2.50000023841858,\"y\":1.50677049160004,\"z\":19.5},\"rot\":{\"x\":359.988800048828,\"y\":315.009674072266,\"z\":0.00420218426734209},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"61f6d6\":{\"lock\":false,\"pos\":{\"x\":-2.00000047683716,\"y\":1.52009844779968,\"z\":16},\"rot\":{\"x\":0.0108914608135819,\"y\":180.001373291016,\"z\":0.00494848983362317},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6d7ffc\":{\"lock\":false,\"pos\":{\"x\":-20.9999961853027,\"y\":1.8054381608963,\"z\":14.5000028610229},\"rot\":{\"x\":-5.22483605891466E-06,\"y\":180.000045776367,\"z\":-2.94194478556165E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.50324535369873,\"z\":2.99999976158142},\"rot\":{\"x\":359.989105224609,\"y\":359.989624023438,\"z\":-0.00495019182562828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"78362e\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.50666701793671,\"z\":21},\"rot\":{\"x\":359.989105224609,\"y\":359.989624023438,\"z\":-0.0049498463049531},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"87c21f\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.50532782077789,\"z\":15.9999990463257},\"rot\":{\"x\":-0.00494686467573047,\"y\":269.994873046875,\"z\":0.0108986338600516},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"888c37\":{\"lock\":false,\"pos\":{\"x\":-2.00009989738464,\"y\":1.50592350959778,\"z\":12.9996995925903},\"rot\":{\"x\":359.989105224609,\"y\":359.979187011719,\"z\":-0.00494881998747587},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"94d30e\":{\"lock\":false,\"pos\":{\"x\":15.5000028610229,\"y\":1.51687633991241,\"z\":6.99999952316284},\"rot\":{\"x\":0.0108915027230978,\"y\":180.00048828125,\"z\":0.0049484483897686},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9554e4\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7772730588913,\"z\":-3},\"rot\":{\"x\":-0.000591017829719931,\"y\":180.00129699707,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9eee13\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.51552832126617,\"z\":-1.00000047683716},\"rot\":{\"x\":0.0108915008604527,\"y\":179.999664306641,\"z\":0.00494819786399603},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"aaf560\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.52103209495544,\"z\":25},\"rot\":{\"x\":0.0108909644186497,\"y\":180.005767822266,\"z\":0.00494937319308519},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b80c83\":{\"lock\":false,\"pos\":{\"x\":12.5000009536743,\"y\":1.53161799907684,\"z\":-5.99990177154541},\"rot\":{\"x\":0.0049485513009131,\"y\":90.0021209716797,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"cbdef8\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.50543987751007,\"z\":12.5},\"rot\":{\"x\":-0.00420306855812669,\"y\":44.9994926452637,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d21349\":{\"lock\":false,\"pos\":{\"x\":-22.5002059936523,\"y\":1.80062520503998,\"z\":2.49989318847656},\"rot\":{\"x\":8.94909391035981E-08,\"y\":89.9978408813477,\"z\":5.07726826981525E-06},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d45a71\":{\"lock\":false,\"pos\":{\"x\":2.99999976158142,\"y\":1.50368583202362,\"z\":3.49999904632568},\"rot\":{\"x\":-0.00420221127569675,\"y\":45.0046806335449,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d9bd42\":{\"lock\":false,\"pos\":{\"x\":-26.000207901001,\"y\":1.80062520503998,\"z\":2.4997923374176},\"rot\":{\"x\":2.24364988810066E-08,\"y\":90.0073013305664,\"z\":5.29166163687478E-06},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e7750b\":{\"lock\":false,\"pos\":{\"x\":15.5,\"y\":1.50412702560425,\"z\":11.5},\"rot\":{\"x\":359.989105224609,\"y\":359.989562988281,\"z\":-0.0049449079670012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"ebdf49\":{\"lock\":false,\"pos\":{\"x\":-34.49951171875,\"y\":1.80062472820282,\"z\":7.50019025802612},\"rot\":{\"x\":-5.31626301381039E-06,\"y\":179.987487792969,\"z\":3.05858833371531E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ed0d92\":{\"lock\":false,\"pos\":{\"x\":23.5000991821289,\"y\":1.51380920410156,\"z\":-5.50000238418579},\"rot\":{\"x\":0.010891736485064,\"y\":179.99674987793,\"z\":0.00494758831337094},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f81b6d\":{\"lock\":false,\"pos\":{\"x\":2.49999976158142,\"y\":1.50610518455505,\"z\":16},\"rot\":{\"x\":-0.00494685396552086,\"y\":269.995056152344,\"z\":0.0108989747241139},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"fa4366\":{\"lock\":false,\"pos\":{\"x\":11,\"y\":1.50299489498138,\"z\":3.5},\"rot\":{\"x\":359.988800048828,\"y\":314.990203857422,\"z\":0.00420671189203858},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"fccb36\":{\"lock\":false,\"pos\":{\"x\":-2.54766234775161E-07,\"y\":1.51669418811798,\"z\":-1.00000095367432},\"rot\":{\"x\":0.0108914617449045,\"y\":180.000305175781,\"z\":0.00494826678186655},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fdfeeb\":{\"lock\":false,\"pos\":{\"x\":-2.00000023841858,\"y\":1.51895797252655,\"z\":10},\"rot\":{\"x\":0.0108911991119385,\"y\":180.004470825195,\"z\":0.00494905887171626},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ff2fa7\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.51608967781067,\"z\":-1.00000107288361},\"rot\":{\"x\":0.0108922030776739,\"y\":179.991836547852,\"z\":0.0049466690979898},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"018503","Name":"CardCustom","Transform":{"posX":-2.000001,"posY":1.521239,"posZ":22,"rotX":0.0108911144,"rotY":180.00444,"rotZ":0.004949006,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755616213/4BA2D77C786D6072A7ECBD7B99A0A7C3C2048E41/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755616213/4BA2D77C786D6072A7ECBD7B99A0A7C3C2048E41/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"026422","Name":"Deck","Transform":{"posX":-25.5,"posY":1.80548716,"posZ":14.5,"rotX":-0.00000501516161,"rotY":180.000275,"rotZ":4.61644873e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin divergeant","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[119104,119107,119105,119106],"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"8a2a4c","Name":"Card","Transform":{"posX":-25.5,"posY":4.860891,"posZ":14.4999981,"rotX":-0.00000502382,"rotY":180.0003,"rotZ":-1.27921851e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Divergent","Description":"Dunwich. Bois.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02287\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|SlantedEquals\",\n    \"icons\": \"Tilde|DivergingPath\"\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"DivergingPath\"\n  },\n  \"traits\": \"Dunwich. Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119104,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"37cde1","Name":"Card","Transform":{"posX":-25.5,"posY":5.06089067,"posZ":14.4999981,"rotX":-0.00000502382,"rotY":180.0003,"rotZ":-1.27921851e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Divergent","Description":"Dunwich. Bois.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02286\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Plus\",\n    \"icons\": \"Hourglass|DivergingPath\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"DivergingPath\"\n  },\n  \"traits\": \"Dunwich. Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119107,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"78ec4f","Name":"Card","Transform":{"posX":-25.5,"posY":4.90519762,"posZ":14.4999981,"rotX":-0.0000050998633,"rotY":180.0003,"rotZ":-9.381863e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Divergent","Description":"Dunwich. Bois.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02285\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Hourglass\",\n    \"icons\": \"Plus|DivergingPath\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"DivergingPath\"\n  },\n  \"traits\": \"Dunwich. Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119105,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1bc6ac","Name":"Card","Transform":{"posX":-25.5,"posY":1.88598275,"posZ":14.4999981,"rotX":0.00293590175,"rotY":180.0003,"rotZ":-0.00348508917,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Divergent","Description":"Dunwich. Bois.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02288\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Hourglass\",\n    \"icons\": \"Plus|DivergingPath\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"DivergingPath\"\n  },\n  \"traits\": \"Dunwich. Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119106,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"02ae6a","Name":"Custom_Tile","Transform":{"posX":11.5,"posY":1.503617,"posZ":7,"rotX":-0.00494693173,"rotY":269.994965,"rotZ":0.0108989859,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"186784","Name":"Custom_Tile","Transform":{"posX":-2.00010037,"posY":1.507064,"posZ":18.9997,"rotX":359.9891,"rotY":-0.005525988,"rotZ":-0.004952764,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"20b764","Name":"Deck","Transform":{"posX":-29.5002251,"posY":1.80067408,"posZ":2.499778,"rotX":1.39131814e-7,"rotY":89.99932,"rotZ":0.00000510594646,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte v. I","Description":"Là où le Destin Attend","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[119206,119203,559600],"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0},"5596":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230390163/86745DFEBB91452AFFC6E625602BB716D5690406/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230389073/6BDD166DCE2126F67E1F627756B17A6B02E5061D/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"3d9507","Name":"Card","Transform":{"posX":-29.5002232,"posY":5.056078,"posZ":2.49978,"rotX":-5.33702149e-9,"rotY":89.99931,"rotZ":0.000005015473,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Portail s'Ouvre","Description":"Acte 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02281\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119206,"SidewaysCard":true,"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"16c617","Name":"Card","Transform":{"posX":-29.5002232,"posY":4.85607767,"posZ":2.49978,"rotX":-5.33702149e-9,"rotY":89.99931,"rotZ":0.000005015473,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Gravir la Colline (v. I)","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02278\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119203,"SidewaysCard":true,"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6b8d34","Name":"CardCustom","Transform":{"posX":-29.5002232,"posY":1.8773303,"posZ":2.49978,"rotX":-0.0016533708,"rotY":89.99931,"rotZ":-0.0013355806,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Chemin vers la Colline","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02277\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":559600,"SidewaysCard":true,"CustomDeck":{"5596":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230390163/86745DFEBB91452AFFC6E625602BB716D5690406/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230389073/6BDD166DCE2126F67E1F627756B17A6B02E5061D/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"282840","Name":"Card","Transform":{"posX":7.00000238,"posY":1.5193212,"posZ":15.9999952,"rotX":0.0108914236,"rotY":180,"rotZ":0.00494826864,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Ascendant","Description":"Dunwich. Colline de la Sentinelle.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02283\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Diamond|Tee|SlantedEquals|Crescent|AlteredPath\",\n    \"icons\": \"Square\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle|Diamond|Tee|SlantedEquals|Crescent|AlteredPath\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Dunwich. Sentinel Hill.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119103,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2da9ab","Name":"Custom_Tile","Transform":{"posX":7,"posY":1.50486112,"posZ":11.5,"rotX":359.9891,"rotY":359.989624,"rotZ":-0.00494976062,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"2efca1","Name":"CardCustom","Transform":{"posX":16,"posY":1.51854384,"posZ":15.9993,"rotX":0.0109435609,"rotY":179.391434,"rotZ":0.0048323134,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106500,"SidewaysCard":false,"CustomDeck":{"11065":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755654274/E1C516725CC32556A9F093B96384451BDB4AB8D1/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755654274/E1C516725CC32556A9F093B96384451BDB4AB8D1/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3bb31a","Name":"Card","Transform":{"posX":7,"posY":1.51761043,"posZ":7,"rotX":0.010891567,"rotY":180.000061,"rotZ":0.00494824536,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pied de la Colline","Description":"Dunwich. Colline de la Sentinelle.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02282\",\n  \"locationBack\": {\n    \"connections\": \"Square|Plus|Tilde|Hourglass|DivergingPath\",\n    \"icons\": \"Triangle\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Square|Plus|Tilde|Hourglass|DivergingPath\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Dunwich. Sentinel Hill.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119101,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"43be5c","Name":"Custom_Tile","Transform":{"posX":3.49999976,"posY":1.50278723,"posZ":-1.00000191,"rotX":0.004952454,"rotY":90.0255661,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"483a34","Name":"Custom_Tile","Transform":{"posX":10.499999,"posY":1.50218272,"posZ":-1.00000167,"rotX":0.004947665,"rotY":90.0001,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"4e045b","Name":"Custom_Tile","Transform":{"posX":2.99999666,"posY":1.60163224,"posZ":-6.49999571,"rotX":0.0171768814,"rotY":180.011017,"rotZ":0.005654069,"scaleX":1.6428808,"scaleY":1,"scaleZ":1.6428808},"Nickname":"Mise en place du Chaos Bag","Description":"VI : Là où le Destin Attend","GMNotes":"{\"data\":\"Where Doom Awaits\",\"easy\":false,\"expert\":false,\"hard\":false,\"normal\":false,\"standalone\":true}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.8745098,"g":0.8,"b":0.7019608},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend","LuaScriptState":"","XmlUI":""},{"GUID":"5d5269","Name":"Card","Transform":{"posX":-34.50043,"posY":1.77890623,"posZ":2.99966979,"rotX":-0.000004919992,"rotY":180.000046,"rotZ":-2.876197e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Seth Bishop","Description":"Sorcier de Dunwich","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"healthPerInv\": \"true\",\n  \"id\": \"02293\",\n  \"traits\": \"Humanoid. Sorcerer. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16210,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5e20af","Name":"Custom_Tile","Transform":{"posX":2.50000024,"posY":1.50677049,"posZ":19.5,"rotX":359.9888,"rotY":315.009674,"rotZ":0.00420245342,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"61f6d6","Name":"CardCustom","Transform":{"posX":-2.00000119,"posY":1.52009845,"posZ":16,"rotX":0.0108914142,"rotY":180.001358,"rotZ":0.00494849868,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106600,"SidewaysCard":false,"CustomDeck":{"11066":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755655756/F61AC3EADD445ABDD7DDEBA1DE6E775F79C68086/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755655756/F61AC3EADD445ABDD7DDEBA1DE6E775F79C68086/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6d7ffc","Name":"Deck","Transform":{"posX":-20.9999924,"posY":1.80548716,"posZ":14.5000048,"rotX":-0.00000531138767,"rotY":180.000076,"rotZ":1.39093984e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin altéré","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[119109,119111,119110,119108],"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"b7e505","Name":"Card","Transform":{"posX":-20.9999866,"posY":4.77361727,"posZ":14.50001,"rotX":-0.00000542171028,"rotY":180.000168,"rotZ":4.01785e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Altéré","Description":"Dunwich. Bois. Altéré.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02289\",\n  \"locationBack\": {\n    \"connections\": \"Square|Crescent\",\n    \"icons\": \"Tee|AlteredPath\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"AlteredPath\"\n  },\n  \"traits\": \"Dunwich. Woods. Altered.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119109,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6be45e","Name":"Card","Transform":{"posX":-20.9999866,"posY":5.06089067,"posZ":14.50001,"rotX":-0.00000540084966,"rotY":180.000168,"rotZ":2.633085e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Altéré","Description":"Dunwich. Bois. Altéré.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02290\",\n  \"locationBack\": {\n    \"connections\": \"Square|Tilde\",\n    \"icons\": \"SlantedEquals|AlteredPath\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"AlteredPath\"\n  },\n  \"traits\": \"Dunwich. Woods. Altered.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119111,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3901fd","Name":"Card","Transform":{"posX":-20.9999866,"posY":5.260891,"posZ":14.50001,"rotX":-0.00000540084966,"rotY":180.000168,"rotZ":2.633085e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Altéré","Description":"Dunwich. Bois. Altéré.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02292\",\n  \"locationBack\": {\n    \"connections\": \"Square|Crescent\",\n    \"icons\": \"Tee|AlteredPath\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"AlteredPath\"\n  },\n  \"traits\": \"Dunwich. Woods. Altered.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119110,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f7c247","Name":"Card","Transform":{"posX":-20.9999866,"posY":1.88598263,"posZ":14.50001,"rotX":0.00293836812,"rotY":180.000168,"rotZ":-0.00348314387,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chemin Altéré","Description":"Dunwich. Bois. Altéré.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02291\",\n  \"locationBack\": {\n    \"connections\": \"Square|Tee\",\n    \"icons\": \"Crescent|AlteredPath\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"AlteredPath\"\n  },\n  \"traits\": \"Dunwich. Woods. Altered.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119108,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"7234af","Name":"Custom_Tile","Transform":{"posX":7,"posY":1.50324535,"posZ":2.99999976,"rotX":359.9891,"rotY":359.989624,"rotZ":-0.004950204,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"78362e","Name":"Custom_Tile","Transform":{"posX":7,"posY":1.506667,"posZ":21,"rotX":359.9891,"rotY":359.989624,"rotZ":-0.0049503753,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"87c21f","Name":"Custom_Tile","Transform":{"posX":11.5,"posY":1.50532782,"posZ":15.999999,"rotX":-0.004946866,"rotY":269.994873,"rotZ":0.0108992476,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"888c37","Name":"Custom_Tile","Transform":{"posX":-2.0001,"posY":1.50592351,"posZ":12.9997,"rotX":359.9891,"rotY":359.9792,"rotZ":-0.004948242,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"94d30e","Name":"CardCustom","Transform":{"posX":15.5000048,"posY":1.51687634,"posZ":6.999999,"rotX":0.0108914217,"rotY":180.000443,"rotZ":0.00494831055,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106700,"SidewaysCard":false,"CustomDeck":{"11067":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755659049/9AF2DF88904D62C086CAAA295BE046CBE8E65415/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755659049/9AF2DF88904D62C086CAAA295BE046CBE8E65415/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9554e4","Name":"Deck","Transform":{"posX":30.5,"posY":1.777273,"posZ":-3.00000024,"rotX":-0.000591004151,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Rencontre","Description":"Là où le Destin Attend","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[16217,16219,16221,16215,16218,16216,16211,16213,16214,16212,16208,16209,16717,16715,16714,16716,16711,16713,15928,15927,15931,15926,15930,15929,15512,15508,15509,15514,15511,15515,17202,17201,17204,17338,15704,15703,15702,18433,18432,18437,18500,18434,18435,18436],"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"6f3ec2","Name":"Card","Transform":{"posX":30.5,"posY":6.432677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Vortex Temporel","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02298\",\n  \"traits\": \"Hex. Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16217,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8a5402","Name":"Card","Transform":{"posX":30.5,"posY":6.632677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Vortex Temporel","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02298\",\n  \"traits\": \"Hex. Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16219,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d03847","Name":"Card","Transform":{"posX":30.5,"posY":6.832677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Vortex Temporel","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02298\",\n  \"traits\": \"Hex. Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16221,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c7bd8d","Name":"Card","Transform":{"posX":30.5,"posY":5.832677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Interstices","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02297\",\n  \"traits\": \"Hex. Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16215,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b70899","Name":"Card","Transform":{"posX":30.5,"posY":6.0326767,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Interstices","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02297\",\n  \"traits\": \"Hex. Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16218,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"67f1d9","Name":"Card","Transform":{"posX":30.5,"posY":6.232677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Interstices","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02297\",\n  \"traits\": \"Hex. Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16216,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"91538f","Name":"Card","Transform":{"posX":30.5,"posY":5.232677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rites Hurlés","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02296\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16211,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c028bb","Name":"Card","Transform":{"posX":30.5,"posY":5.432677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rites Hurlés","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02296\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16213,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"13e31c","Name":"Card","Transform":{"posX":30.5,"posY":5.632677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rites Hurlés","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02296\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16214,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"aef487","Name":"Card","Transform":{"posX":30.5,"posY":5.0326767,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Shoggoth Affolé","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"id\": \"02295\",\n  \"traits\": \"Monster. Shoggoth.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16212,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"919139","Name":"Card","Transform":{"posX":30.5,"posY":4.832677,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Dévot de la Clé","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02294\",\n  \"traits\": \"Humanoid. Sorcerer.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16208,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d8038e","Name":"Card","Transform":{"posX":30.5,"posY":5.770278,"posZ":-3.00000048,"rotX":-0.0005906365,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Dévot de la Clé","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02294\",\n  \"traits\": \"Humanoid. Sorcerer.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16209,"SidewaysCard":false,"CustomDeck":{"162":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3a2890","Name":"Card","Transform":{"posX":30.5,"posY":8.032676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bête Altérée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02096\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16717,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9b8df1","Name":"Card","Transform":{"posX":30.5,"posY":7.83267546,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bête Altérée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02096\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16715,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1c7f06","Name":"Card","Transform":{"posX":30.5,"posY":7.43267632,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall Lupin","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02095\",\n  \"traits\": \"Creature. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16714,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"63d0a1","Name":"Card","Transform":{"posX":30.5,"posY":7.63267565,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall Lupin","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02095\",\n  \"traits\": \"Creature. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16716,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e07cf7","Name":"Card","Transform":{"posX":30.5,"posY":7.032676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall Aviaire","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02094\",\n  \"traits\": \"Creature. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16711,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8041a2","Name":"Card","Transform":{"posX":30.5,"posY":6.89519024,"posZ":-3,"rotX":-0.000590962532,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall Aviaire","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02094\",\n  \"traits\": \"Creature. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16713,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5683cc","Name":"Card","Transform":{"posX":30.5,"posY":10.4326763,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Mage de Yog-Sothoth","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02087\",\n  \"traits\": \"Humanoid. Sorcerer.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15928,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"16346c","Name":"Card","Transform":{"posX":30.5,"posY":10.2326756,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02086\",\n  \"traits\": \"Humanoid. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15927,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f618d3","Name":"Card","Transform":{"posX":30.5,"posY":10.0326757,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02086\",\n  \"traits\": \"Humanoid. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15931,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0090a4","Name":"Card","Transform":{"posX":30.5,"posY":9.49519,"posZ":-3,"rotX":-0.000590839365,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"02086\",\n  \"traits\": \"Humanoid. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15926,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f31998","Name":"Card","Transform":{"posX":30.5,"posY":9.632676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Lumière d'Aforgomon","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02085\",\n  \"traits\": \"Pact. Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15930,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"bdf835","Name":"Card","Transform":{"posX":30.5,"posY":9.432676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Lumière d'Aforgomon","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02085\",\n  \"traits\": \"Pact. Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15929,"SidewaysCard":false,"CustomDeck":{"159":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ed11ad","Name":"Card","Transform":{"posX":30.5,"posY":9.032676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15512,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc2af0","Name":"Card","Transform":{"posX":30.5,"posY":8.832676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15508,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b52985","Name":"Card","Transform":{"posX":30.5,"posY":9.232676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15509,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e0e2","Name":"Card","Transform":{"posX":30.5,"posY":8.232676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15514,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3bd92a","Name":"Card","Transform":{"posX":30.5,"posY":8.632676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15511,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5b9c33","Name":"Card","Transform":{"posX":30.5,"posY":8.432676,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15515,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc1997","Name":"Card","Transform":{"posX":30.5,"posY":13.0326757,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Brouilard Couvrant","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17202,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"082199","Name":"Card","Transform":{"posX":30.5,"posY":13.2326756,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Brouilard Couvrant","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17201,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4214a2","Name":"Card","Transform":{"posX":30.5,"posY":12.6326761,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Froid de la Crypte","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17204,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3ec405","Name":"Card","Transform":{"posX":30.5,"posY":12.8326759,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Froid de la Crypte","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17338,"SidewaysCard":false,"CustomDeck":{"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7b9eb5","Name":"Card","Transform":{"posX":30.5,"posY":12.0326757,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15704,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"67cfd5","Name":"Card","Transform":{"posX":30.5,"posY":12.2326756,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15703,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1c3c50","Name":"Card","Transform":{"posX":30.5,"posY":12.4326763,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Antiques Fléaux","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15702,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"07ff5e","Name":"Card","Transform":{"posX":30.5,"posY":11.8326759,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voix Dissonantes","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18433,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e9a446","Name":"Card","Transform":{"posX":30.5,"posY":11.6326761,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voix Dissonantes","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18432,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"68be1e","Name":"Card","Transform":{"posX":30.5,"posY":10.8951893,"posZ":-3,"rotX":-0.0005909269,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Paralysé par la Peur","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18437,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0783ce","Name":"Card","Transform":{"posX":30.5,"posY":11.4326763,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Paralysé par la Peur","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18500,"SidewaysCard":false,"CustomDeck":{"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"365129","Name":"Card","Transform":{"posX":30.5,"posY":10.8326759,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18434,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5e2ae4","Name":"Card","Transform":{"posX":30.5,"posY":10.6326761,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18435,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2e3a70","Name":"Card","Transform":{"posX":30.5,"posY":11.0326757,"posZ":-3.00000024,"rotX":-0.000591013057,"rotY":180.0013,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18436,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"9eee13","Name":"CardCustom","Transform":{"posX":13.5,"posY":1.51552832,"posZ":-1.0000006,"rotX":0.01089152,"rotY":179.999634,"rotZ":0.00494804466,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1105800,"SidewaysCard":false,"CustomDeck":{"11058":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755656398/784A5C9E69597C25D0CE052B4C48C063453A9D1B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755656398/784A5C9E69597C25D0CE052B4C48C063453A9D1B/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"aaf560","Name":"Card","Transform":{"posX":7,"posY":1.52103209,"posZ":25,"rotX":0.0108910156,"rotY":180.005768,"rotZ":0.00494942674,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pic de la Sentinelle","Description":"Dunwich. Colline de la Sentinelle.\r","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02284\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 2\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Dunwich. Sentinel Hill.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119102,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b80c83","Name":"Deck","Transform":{"posX":12.5,"posY":1.531618,"posZ":-5.9999,"rotX":0.004948412,"rotY":90.0022049,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Intrigue","Description":"Là où le Destin Attend","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[119201,119200],"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"f3930b","Name":"Card","Transform":{"posX":12.5000029,"posY":1.60617685,"posZ":-5.999911,"rotX":0.00427587051,"rotY":90.00227,"rotZ":359.988464,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Implorant des Pouvoirs","Description":"Intrigue 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 10,\n  \"id\": \"02276\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119201,"SidewaysCard":true,"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7e1510","Name":"Card","Transform":{"posX":12.5000067,"posY":1.60441351,"posZ":-5.999919,"rotX":0.00781162549,"rotY":90.00227,"rotZ":359.985718,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Invoquer les Anciens","Description":"Intrigue 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 12,\n  \"id\": \"02275\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119200,"SidewaysCard":true,"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"cbdef8","Name":"Custom_Tile","Transform":{"posX":2.5,"posY":1.50543988,"posZ":12.5,"rotX":-0.00420300663,"rotY":44.9994926,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"d21349","Name":"Deck","Transform":{"posX":-22.5002136,"posY":1.80067408,"posZ":2.49988484,"rotX":1.14344253e-7,"rotY":89.99791,"rotZ":0.00000456984935,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte v. III","Description":"Là où le Destin Attend","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[119206,119205,559800],"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0},"5598":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230390163/86745DFEBB91452AFFC6E625602BB716D5690406/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230389073/6BDD166DCE2126F67E1F627756B17A6B02E5061D/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"62aa8a","Name":"Card","Transform":{"posX":-22.5002174,"posY":5.056078,"posZ":2.49988079,"rotX":1.348657e-7,"rotY":89.9979,"rotZ":0.000004464749,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Portail s'Ouvre","Description":"Acte 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02281\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119206,"SidewaysCard":true,"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"aaf051","Name":"Card","Transform":{"posX":-22.5002174,"posY":4.85607767,"posZ":2.49988079,"rotX":1.348657e-7,"rotY":89.9979,"rotZ":0.000004464749,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Gravir la Colline (v. III)","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02280\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119205,"SidewaysCard":true,"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"003044","Name":"CardCustom","Transform":{"posX":-22.5002174,"posY":1.87736773,"posZ":2.49988079,"rotX":0.00073815987,"rotY":89.9979,"rotZ":-0.0027107487,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Chemin vers la Colline","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02277\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":559800,"SidewaysCard":true,"CustomDeck":{"5598":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230390163/86745DFEBB91452AFFC6E625602BB716D5690406/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230389073/6BDD166DCE2126F67E1F627756B17A6B02E5061D/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"d45a71","Name":"Custom_Tile","Transform":{"posX":2.99999976,"posY":1.50368583,"posZ":3.49999857,"rotX":-0.00420214562,"rotY":45.0046654,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"d9bd42","Name":"Deck","Transform":{"posX":-26.00022,"posY":1.8006742,"posZ":2.49977946,"rotX":3.91024e-8,"rotY":90.00731,"rotZ":0.00000501204477,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte v. II","Description":"Là où le Destin Attend","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[119206,119204,559700],"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0},"5597":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230390163/86745DFEBB91452AFFC6E625602BB716D5690406/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230389073/6BDD166DCE2126F67E1F627756B17A6B02E5061D/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"282224","Name":"Card","Transform":{"posX":-26.0002174,"posY":5.056078,"posZ":2.49978137,"rotX":1.016888e-7,"rotY":90.0073547,"rotZ":0.00000509039774,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Portail s'Ouvre","Description":"Acte 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02281\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119206,"SidewaysCard":true,"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"997cee","Name":"Card","Transform":{"posX":-26.0002174,"posY":4.85607767,"posZ":2.49978137,"rotX":1.016888e-7,"rotY":90.0073547,"rotZ":0.00000509039774,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Gravir la Colline (v. II)","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02279\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119204,"SidewaysCard":true,"CustomDeck":{"1192":{"FaceURL":"https://i.imgur.com/gByrFzz.jpg","BackURL":"https://i.imgur.com/Ta6eG4n.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9cfc8b","Name":"CardCustom","Transform":{"posX":-26.0002174,"posY":1.8773303,"posZ":2.49978137,"rotX":-0.001654795,"rotY":90.0073547,"rotZ":-0.00133779284,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Chemin vers la Colline","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02277\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":559700,"SidewaysCard":true,"CustomDeck":{"5597":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230390163/86745DFEBB91452AFFC6E625602BB716D5690406/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230389073/6BDD166DCE2126F67E1F627756B17A6B02E5061D/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"e7750b","Name":"Custom_Tile","Transform":{"posX":15.500001,"posY":1.504127,"posZ":11.5,"rotX":359.9891,"rotY":359.989563,"rotZ":-0.004955726,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"ebdf49","Name":"Deck","Transform":{"posX":-34.49952,"posY":1.80067372,"posZ":7.50018,"rotX":-0.000005433522,"rotY":179.987579,"rotZ":4.248461e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Hideuses Abominations","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[17930,17931,17934],"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"c8d931","Name":"Card","Transform":{"posX":-34.49952,"posY":4.856077,"posZ":7.50018167,"rotX":-0.00000536128937,"rotY":179.987473,"rotZ":0.00000161681828,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Agglomérat de Sphères","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"id\": \"02103\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17930,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"70c221","Name":"Card","Transform":{"posX":-34.49952,"posY":5.05607748,"posZ":7.50018167,"rotX":-0.00000536128937,"rotY":179.987473,"rotZ":0.00000161681828,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Serviteur du Rôdeur","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"id\": \"02104\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17931,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"87be51","Name":"Card","Transform":{"posX":-34.49952,"posY":1.87731946,"posZ":7.50018167,"rotX":0.00288587762,"rotY":179.987473,"rotZ":-0.00346043147,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Agglomérat de Sphères","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"id\": \"02103\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17934,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"ed0d92","Name":"Card","Transform":{"posX":23.5001,"posY":1.5138092,"posZ":-5.500004,"rotX":0.010891798,"rotY":179.9967,"rotZ":0.004947577,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Référence","Description":"Là où le Destin Attend","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":119100,"SidewaysCard":false,"CustomDeck":{"1191":{"FaceURL":"https://i.imgur.com/VuuFOhX.jpg","BackURL":"https://i.imgur.com/Mpk9C04.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f81b6d","Name":"Custom_Tile","Transform":{"posX":2.49999976,"posY":1.50610518,"posZ":16,"rotX":-0.004946822,"rotY":269.995056,"rotZ":0.0108986646,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"fa4366","Name":"Custom_Tile","Transform":{"posX":11,"posY":1.50299489,"posZ":3.49999976,"rotX":359.9888,"rotY":314.990173,"rotZ":0.004206463,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"fccb36","Name":"CardCustom","Transform":{"posX":-7.292519e-7,"posY":1.51669419,"posZ":-1.00000191,"rotX":0.0108914152,"rotY":180.00032,"rotZ":0.004948312,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1105800,"SidewaysCard":false,"CustomDeck":{"11058":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755656398/784A5C9E69597C25D0CE052B4C48C063453A9D1B/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755656398/784A5C9E69597C25D0CE052B4C48C063453A9D1B/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"fdfeeb","Name":"CardCustom","Transform":{"posX":-2.00000072,"posY":1.518958,"posZ":10,"rotX":0.0108910967,"rotY":180.004456,"rotZ":0.004949071,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106800,"SidewaysCard":false,"CustomDeck":{"11068":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755616213/4BA2D77C786D6072A7ECBD7B99A0A7C3C2048E41/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755616213/4BA2D77C786D6072A7ECBD7B99A0A7C3C2048E41/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ff2fa7","Name":"CardCustom","Transform":{"posX":7,"posY":1.51608968,"posZ":-1.0000025,"rotX":0.0108923167,"rotY":179.991852,"rotZ":0.00494661834,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1105900,"SidewaysCard":false,"CustomDeck":{"11059":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755657091/AFF8ACFBC5678926BCC68305BFC3843BF4612216/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874087573755657091/AFF8ACFBC5678926BCC68305BFC3843BF4612216/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}],"AttachedDecals":[{"Transform":{"posX":-0.0021877822,"posY":-0.08963572,"posZ":-0.00288731651,"rotX":270,"rotY":359.869568,"rotZ":0,"scaleX":2.00000215,"scaleY":2.00000238,"scaleZ":2.00000262},"CustomDecal":{"Name":"dunwich_back","ImageURL":"http://cloud-3.steamusercontent.com/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/","Size":7.4}}]},{"GUID":"7594f1","Name":"Custom_Model_Bag","Transform":{"posX":12.499999,"posY":0.9799974,"posZ":44.9999962,"rotX":-0.000004658973,"rotY":180.023132,"rotZ":0.00000136439655,"scaleX":1.20052135,"scaleY":0.249882281,"scaleZ":1.3145982},"Nickname":"V : Aux Frontières du Visible","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118403756878/0A3FE0A5BAC24197D5F19A6314365EDF3E80DC6F/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"100382\":{\"lock\":false,\"pos\":{\"x\":-19.9615116119385,\"y\":1.76630103588104,\"z\":6.69881153106689},\"rot\":{\"x\":4.7744506446179E-06,\"y\":7.33013730496168E-05,\"z\":-1.25047474597295E-08},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"319cd6\":{\"lock\":false,\"pos\":{\"x\":12.5000019073486,\"y\":1.53643202781677,\"z\":-5.99990749359131},\"rot\":{\"x\":0.00494728004559875,\"y\":89.9960632324219,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3975c8\":{\"lock\":false,\"pos\":{\"x\":-26.9999847412109,\"y\":1.7788553237915,\"z\":26.0000190734863},\"rot\":{\"x\":-5.08359835293959E-06,\"y\":180.009521484375,\"z\":-6.73092941383402E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"497aa9\":{\"lock\":false,\"pos\":{\"x\":-19.9999732971191,\"y\":1.77885520458221,\"z\":26.0000305175781},\"rot\":{\"x\":-5.08979246660601E-06,\"y\":178.862152099609,\"z\":2.24386809577481E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4b176b\":{\"lock\":false,\"pos\":{\"x\":23.5000991821289,\"y\":1.51380920410156,\"z\":-5.50000619888306},\"rot\":{\"x\":0.010891530662775,\"y\":180.000381469727,\"z\":0.00494830729439855},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4badac\":{\"lock\":false,\"pos\":{\"x\":9.49999809265137,\"y\":1.50683128833771,\"z\":23.0000038146973},\"rot\":{\"x\":0.00494782021269202,\"y\":90.000129699707,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4e340d\":{\"lock\":false,\"pos\":{\"x\":-32.0002479553223,\"y\":1.80548810958862,\"z\":3.49985384941101},\"rot\":{\"x\":-5.13706208948861E-06,\"y\":180,\"z\":1.3763471429229E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5559ff\":{\"lock\":false,\"pos\":{\"x\":9.49999904632568,\"y\":1.50378978252411,\"z\":7.00000190734863},\"rot\":{\"x\":-0.00420788023620844,\"y\":44.9737434387207,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"70a53a\":{\"lock\":false,\"pos\":{\"x\":14.9900007247925,\"y\":1.51796793937683,\"z\":12.5105972290039},\"rot\":{\"x\":0.0108930664137006,\"y\":179.982437133789,\"z\":0.00494486186653376},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":3.99999856948853,\"y\":1.50426471233368,\"z\":7.00000333786011},\"rot\":{\"x\":0.0108897406607866,\"y\":180.020477294922,\"z\":0.00495640747249126},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"770dc6\":{\"lock\":false,\"pos\":{\"x\":-23.1383857727051,\"y\":1.76629912853241,\"z\":29.1792106628418},\"rot\":{\"x\":4.65006269223522E-06,\"y\":0.00029835244640708,\"z\":2.52086380214678E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"7a97a0\":{\"lock\":false,\"pos\":{\"x\":-23.0000038146973,\"y\":1.83530080318451,\"z\":9.99999618530273},\"rot\":{\"x\":-4.90470392833231E-06,\"y\":179.971817016602,\"z\":6.34181503755826E-07},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"7e39d0\":{\"lock\":false,\"pos\":{\"x\":14.9532041549683,\"y\":1.52007722854614,\"z\":23.5901031494141},\"rot\":{\"x\":0.0108902426436543,\"y\":180.014831542969,\"z\":0.00495097553357482},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"85249f\":{\"lock\":false,\"pos\":{\"x\":-23.4999828338623,\"y\":1.77885568141937,\"z\":21.5000152587891},\"rot\":{\"x\":-4.9853138079925E-06,\"y\":179.123397827148,\"z\":3.2727359666751E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8e90ff\":{\"lock\":false,\"pos\":{\"x\":17.5000057220459,\"y\":1.53118622303009,\"z\":-5.99989938735962},\"rot\":{\"x\":0.00494790868833661,\"y\":89.9999542236328,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9105d6\":{\"lock\":false,\"pos\":{\"x\":15.0000009536743,\"y\":1.50540578365326,\"z\":18.0000038146973},\"rot\":{\"x\":0.0108897909522057,\"y\":180.020477294922,\"z\":0.00495962100103498},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"93ac98\":{\"lock\":false,\"pos\":{\"x\":-22.9999980926514,\"y\":1.83530056476593,\"z\":13.5000019073486},\"rot\":{\"x\":-5.18690012540901E-06,\"y\":179.972625732422,\"z\":1.34087855485632E-07},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"95ee07\":{\"lock\":false,\"pos\":{\"x\":3.99999856948853,\"y\":1.5168240070343,\"z\":1.50000357627869},\"rot\":{\"x\":0.0108907157555223,\"y\":180.008605957031,\"z\":0.00494980020448565},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"96df71\":{\"lock\":false,\"pos\":{\"x\":4.14300107955933,\"y\":1.51891565322876,\"z\":12.5682973861694},\"rot\":{\"x\":0.0108917718753219,\"y\":179.996612548828,\"z\":0.00494758971035481},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a4a074\":{\"lock\":false,\"pos\":{\"x\":-1.50000154972076,\"y\":1.50473976135254,\"z\":7.00000238418579},\"rot\":{\"x\":0.0112012233585119,\"y\":135.013793945313,\"z\":-0.00420168600976467},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"ad9452\":{\"lock\":false,\"pos\":{\"x\":-7.00000238418579,\"y\":1.51986491680145,\"z\":12.5000028610229},\"rot\":{\"x\":0.0108906421810389,\"y\":180.009704589844,\"z\":0.0049501652829349},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ae331e\":{\"lock\":true,\"pos\":{\"x\":-20,\"y\":1.76530146598816,\"z\":3.99999856948853},\"rot\":{\"x\":-5.84062900088611E-06,\"y\":179.978820800781,\"z\":6.58337057757308E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"b526e3\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.83530080318451,\"z\":10},\"rot\":{\"x\":-4.94122514282935E-06,\"y\":179.971755981445,\"z\":2.43958794499122E-07},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"b6088e\":{\"lock\":true,\"pos\":{\"x\":-20.0029010772705,\"y\":1.76423048973084,\"z\":3.50019693374634},\"rot\":{\"x\":0.0818832442164421,\"y\":180.013427734375,\"z\":0.0721942484378815},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.499999940395355}},\"ba75c0\":{\"lock\":false,\"pos\":{\"x\":-26.0000057220459,\"y\":1.83530080318451,\"z\":9.99999332427979},\"rot\":{\"x\":-4.0026034184848E-06,\"y\":179.971817016602,\"z\":8.3355409685737E-08},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"beaa6e\":{\"lock\":false,\"pos\":{\"x\":-1.50000131130219,\"y\":1.50683081150055,\"z\":18.0000038146973},\"rot\":{\"x\":-0.00420538801699877,\"y\":44.9881706237793,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"bf8897\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.83530044555664,\"z\":13.5},\"rot\":{\"x\":-6.40955431663315E-06,\"y\":179.974853515625,\"z\":-5.02791763778987E-08},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"bfd0f7\":{\"lock\":false,\"pos\":{\"x\":9.49999904632568,\"y\":1.50483536720276,\"z\":12.5},\"rot\":{\"x\":0.00494785839691758,\"y\":90,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"c1ffb8\":{\"lock\":false,\"pos\":{\"x\":-19.9999752044678,\"y\":1.77885568141937,\"z\":21.5000247955322},\"rot\":{\"x\":-4.95907670483575E-06,\"y\":179.83837890625,\"z\":9.68527160694066E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c4586b\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.72431862354279,\"z\":-3},\"rot\":{\"x\":-0.000590936455409974,\"y\":180.000503540039,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c56db4\":{\"lock\":false,\"pos\":{\"x\":-1.50000381469727,\"y\":1.50578534603119,\"z\":12.5000028610229},\"rot\":{\"x\":0.00494778994470835,\"y\":90.0002136230469,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e191a7\":{\"lock\":false,\"pos\":{\"x\":4.10810089111328,\"y\":1.52100431919098,\"z\":23.5402011871338},\"rot\":{\"x\":0.0108914999291301,\"y\":179.999252319336,\"z\":0.00494796270504594},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e7aa28\":{\"lock\":false,\"pos\":{\"x\":-28.0001373291016,\"y\":1.81030213832855,\"z\":3.49986553192139},\"rot\":{\"x\":-5.05840489495313E-06,\"y\":180.000030517578,\"z\":3.37086270008058E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e94466\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.6016,\"z\":-6.5},\"rot\":{\"x\":0.0172,\"y\":180.0115,\"z\":0.0057},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"f59531\":{\"lock\":false,\"pos\":{\"x\":-23.499979019165,\"y\":1.7788553237915,\"z\":26.0000228881836},\"rot\":{\"x\":-5.02514149047784E-06,\"y\":179.332611083984,\"z\":1.05529217364619E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f94ecf\":{\"lock\":false,\"pos\":{\"x\":-26.9999885559082,\"y\":1.77885568141937,\"z\":21.5000095367432},\"rot\":{\"x\":-5.19322657055454E-06,\"y\":179.996231079102,\"z\":9.81484333806293E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ff8177\":{\"lock\":false,\"pos\":{\"x\":-19.9999923706055,\"y\":1.83530056476593,\"z\":13.5000047683716},\"rot\":{\"x\":-4.91714217787376E-06,\"y\":179.972351074219,\"z\":1.75595474161128E-07},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}}}}","XmlUI":"","ContainedObjects":[{"GUID":"f49b60","Name":"Custom_Tile","Transform":{"posX":13,"posY":1.2484591,"posZ":45.5,"rotX":-0.0000219171361,"rotY":90.0002,"rotZ":-0.000322150183,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"100382","Name":"Custom_Model","Transform":{"posX":-19.9615135,"posY":1.766301,"posZ":6.69881058,"rotX":0.000004632896,"rotY":0.000165954072,"rotZ":-1.02653658e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Déplacement des \\nrejetons de Yog Sothoth\"}","XmlUI":""},{"GUID":"319cd6","Name":"Deck","Transform":{"posX":12.5000019,"posY":1.536432,"posZ":-5.999911,"rotX":0.00494732475,"rotY":89.99607,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Intrigue","Description":"Aux Frontières du Visible","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[19002,19001,19000],"CustomDeck":{"190":{"FaceURL":"https://i.imgur.com/MONRL2x.jpg","BackURL":"https://i.imgur.com/5KgkkOQ.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"b32aeb","Name":"Card","Transform":{"posX":12.5000038,"posY":1.64613032,"posZ":-5.999912,"rotX":0.00497871172,"rotY":89.99611,"rotZ":359.988983,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Horreurs Déchaînées","Description":"Intrigue 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 7,\n  \"id\": \"02239\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19002,"SidewaysCard":true,"CustomDeck":{"190":{"FaceURL":"https://i.imgur.com/MONRL2x.jpg","BackURL":"https://i.imgur.com/5KgkkOQ.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"51e7a2","Name":"Card","Transform":{"posX":12.5000038,"posY":1.607141,"posZ":-5.99991226,"rotX":0.00582466926,"rotY":89.99611,"rotZ":359.988373,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Attendant son Heure","Description":"Intrigue 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 6,\n  \"id\": \"02238\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19001,"SidewaysCard":true,"CustomDeck":{"190":{"FaceURL":"https://i.imgur.com/MONRL2x.jpg","BackURL":"https://i.imgur.com/5KgkkOQ.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"478563","Name":"Card","Transform":{"posX":12.5000076,"posY":1.61313617,"posZ":-5.999922,"rotX":0.004547599,"rotY":89.99611,"rotZ":359.987,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Créatures en Furie","Description":"Intrigue 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 5,\n  \"id\": \"02237\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19000,"SidewaysCard":true,"CustomDeck":{"190":{"FaceURL":"https://i.imgur.com/MONRL2x.jpg","BackURL":"https://i.imgur.com/5KgkkOQ.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"4b176b","Name":"CardCustom","Transform":{"posX":23.5001,"posY":1.5138092,"posZ":-5.50000763,"rotX":0.0108914366,"rotY":180.000336,"rotZ":0.00494828634,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Référence","Description":"Aux Frontières du Visible","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":559600,"SidewaysCard":false,"CustomDeck":{"5596":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230375188/77BC315544B2278EAED7641278B231D0A9999556/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230375417/8B659AFFC07EC3D05BED0501EC34879BD952522D/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4badac","Name":"Custom_Tile","Transform":{"posX":9.499998,"posY":1.50683129,"posZ":23.0000038,"rotX":0.004947792,"rotY":90.00013,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"4e340d","Name":"Deck","Transform":{"posX":-32.0002556,"posY":1.80548811,"posZ":3.49984455,"rotX":-0.000004990019,"rotY":180.000015,"rotZ":4.942134e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Formules Ésotériques","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[117303,117304,117302,117301],"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"fb62f5","Name":"Card","Transform":{"posX":-32.0002556,"posY":1.87235022,"posZ":3.49984336,"rotX":-0.00053853984,"rotY":180.000015,"rotZ":-0.0004964624,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Formule Ésotérique","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02254\",\n  \"traits\": \"Spell.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117303,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a72800","Name":"Card","Transform":{"posX":-32.0002556,"posY":5.06089163,"posZ":3.49984336,"rotX":-0.00000517682838,"rotY":180.000015,"rotZ":8.504427e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Formule Ésotérique","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02254\",\n  \"traits\": \"Spell.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117304,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b48458","Name":"Card","Transform":{"posX":-32.0002556,"posY":5.260892,"posZ":3.49984336,"rotX":-0.00000517682838,"rotY":180.000015,"rotZ":8.504427e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Formule Ésotérique","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02254\",\n  \"traits\": \"Spell.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117302,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a77157","Name":"Card","Transform":{"posX":-32.0002556,"posY":1.88598359,"posZ":3.49984336,"rotX":0.00293744239,"rotY":180.000015,"rotZ":-0.00345751364,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Formule Ésotérique","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02254\",\n  \"traits\": \"Spell.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117301,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"5559ff","Name":"Custom_Tile","Transform":{"posX":9.499999,"posY":1.50378978,"posZ":7.00000143,"rotX":-0.00420834124,"rotY":44.9737663,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"7234af","Name":"Custom_Tile","Transform":{"posX":3.99999857,"posY":1.50426471,"posZ":7.00000334,"rotX":0.0108897639,"rotY":180.020477,"rotZ":0.004956395,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"770dc6","Name":"Custom_Model","Transform":{"posX":-23.1383839,"posY":1.76629913,"posZ":29.1792145,"rotX":0.00000501122577,"rotY":0.0004067713,"rotZ":-4.332526e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":500,\"text\":\"Hors jeu\"}","XmlUI":""},{"GUID":"7a97a0","Name":"Custom_Model_Bag","Transform":{"posX":-23.0000038,"posY":1.8353008,"posZ":9.999995,"rotX":-0.00000501830937,"rotY":179.971878,"rotZ":5.61473655e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662302001975/7B1C2164A753181108452C97908B20F2F40F3F11/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"85249f\":{\"lock\":false,\"pos\":{\"x\":-23.4999828338623,\"y\":1.77885568141937,\"z\":21.5000152587891},\"rot\":{\"x\":-4.9853138079925E-06,\"y\":179.123397827148,\"z\":3.2727359666751E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"95ee07\":{\"lock\":false,\"pos\":{\"x\":3.99999856948853,\"y\":1.5168240070343,\"z\":1.50000357627869},\"rot\":{\"x\":0.0108907157555223,\"y\":180.008605957031,\"z\":0.00494980020448565},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"85249f","Name":"Card","Transform":{"posX":3.99999976,"posY":1.516824,"posZ":1.50000083,"rotX":0.0109659005,"rotY":179.123413,"rotZ":0.00478100032,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Vallon de la Source","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02244\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Diamond|Plus\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Diamond|Plus\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117307,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"95ee07","Name":"Card","Transform":{"posX":-23.49998,"posY":1.77890468,"posZ":21.500021,"rotX":-0.00000519440346,"rotY":180.0086,"rotZ":-5.68235947e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Vallon de la Source","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02245\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Diamond|Plus\",\n    \"icons\": \"Triangle\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Diamond|Plus\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117308,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"8e90ff","Name":"Deck","Transform":{"posX":17.5000057,"posY":1.53118622,"posZ":-5.99989939,"rotX":0.0049481215,"rotY":89.99998,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte","Description":"Aux Frontières du Visible","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[19004,19003],"CustomDeck":{"190":{"FaceURL":"https://i.imgur.com/MONRL2x.jpg","BackURL":"https://i.imgur.com/5KgkkOQ.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"1fb1bd","Name":"Card","Transform":{"posX":17.5000076,"posY":1.605746,"posZ":-5.99990368,"rotX":0.004291228,"rotY":89.99997,"rotZ":359.9885,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ils Doivent Être Détruits !","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02241\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19004,"SidewaysCard":true,"CustomDeck":{"190":{"FaceURL":"https://i.imgur.com/MONRL2x.jpg","BackURL":"https://i.imgur.com/5KgkkOQ.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1fb7ca","Name":"Card","Transform":{"posX":17.50001,"posY":1.60398173,"posZ":-5.999912,"rotX":0.007811061,"rotY":89.99997,"rotZ":359.985779,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Texte Sarrasin","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02240\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":19003,"SidewaysCard":true,"CustomDeck":{"190":{"FaceURL":"https://i.imgur.com/MONRL2x.jpg","BackURL":"https://i.imgur.com/5KgkkOQ.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"9105d6","Name":"Custom_Tile","Transform":{"posX":15.0000019,"posY":1.50540578,"posZ":18.0000038,"rotX":0.0108898059,"rotY":180.020523,"rotZ":0.00495953532,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"93ac98","Name":"Custom_Model_Bag","Transform":{"posX":-22.9999981,"posY":1.83530056,"posZ":13.5000019,"rotX":-0.000004995089,"rotY":179.9726,"rotZ":-5.443822e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662301987863/EC85795E33EC43FD82F9617B47C13D0CBE057FB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"e191a7\":{\"lock\":false,\"pos\":{\"x\":4.10810089111328,\"y\":1.52100431919098,\"z\":23.5402011871338},\"rot\":{\"x\":0.0108914999291301,\"y\":179.999252319336,\"z\":0.00494796270504594},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f59531\":{\"lock\":false,\"pos\":{\"x\":-23.499979019165,\"y\":1.7788553237915,\"z\":26.0000228881836},\"rot\":{\"x\":-5.02514149047784E-06,\"y\":179.332611083984,\"z\":1.05529217364619E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"e191a7","Name":"Card","Transform":{"posX":-23.4999752,"posY":1.7789042,"posZ":26.00003,"rotX":-0.00000508978428,"rotY":179.999268,"rotZ":5.69761021e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Lande Dévastée","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02249\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Hourglass\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Hourglass\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117311,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f59531","Name":"Card","Transform":{"posX":4.10810232,"posY":1.52100432,"posZ":23.5402,"rotX":0.0109484307,"rotY":179.332611,"rotZ":0.00482111424,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Lande Dévastée","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02248\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Hourglass\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"count\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Hourglass\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117312,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"a4a074","Name":"Custom_Tile","Transform":{"posX":-1.50000143,"posY":1.50473964,"posZ":7.000002,"rotX":0.01120151,"rotY":135.013779,"rotZ":-0.004202217,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"ae331e","Name":"Custom_Model_Bag","Transform":{"posX":-20,"posY":1.76530147,"posZ":3.99999857,"rotX":-0.00000584062946,"rotY":179.978821,"rotZ":6.58337058e-7,"scaleX":1,"scaleY":0.562042058,"scaleZ":1},"Nickname":"Déplacement rejetons de Yog Sototh","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1983303656990210870/D2994AC54A968C74968E19B4F03195BC3664AEE5/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":2},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"7bd19b","Name":"Custom_Tile","Transform":{"posX":-20.5,"posY":2.33076,"posZ":3.5,"rotX":-0.000005132921,"rotY":180.000137,"rotZ":-1.40526367e-7,"scaleX":0.508209646,"scaleY":1,"scaleZ":0.508209646},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916091963/EBBF176329F490453987E42E0C8ACF89029B32F6/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916091963/EBBF176329F490453987E42E0C8ACF89029B32F6/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":2,"Thickness":0.2,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8513bd","Name":"Custom_Tile","Transform":{"posX":-19.5,"posY":2.330753,"posZ":4,"rotX":-0.000004963786,"rotY":179.9941,"rotZ":0.00000139036922,"scaleX":0.508209646,"scaleY":1,"scaleZ":0.508209646},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916092541/FF404FFC6598C19F0D26930D7D771010D5D74108/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916092541/FF404FFC6598C19F0D26930D7D771010D5D74108/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":2,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ce6512","Name":"Custom_Tile","Transform":{"posX":-19.5,"posY":2.33076382,"posZ":4,"rotX":-0.00000411833935,"rotY":180.000992,"rotZ":0.00000152574512,"scaleX":0.508209646,"scaleY":1,"scaleZ":0.508209646},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916089463/D9B628D347A76B58B812FE8148E3555D0E6C4A33/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916089463/D9B628D347A76B58B812FE8148E3555D0E6C4A33/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":2,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5987e1","Name":"Custom_Tile","Transform":{"posX":-20,"posY":2.33090854,"posZ":3,"rotX":-0.0000054822267,"rotY":179.999817,"rotZ":5.522109e-7,"scaleX":0.508209646,"scaleY":1,"scaleZ":0.508209646},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916093318/A61D5DC1896FFC954DE3AE0CA4A202E8767D69B1/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916093318/A61D5DC1896FFC954DE3AE0CA4A202E8767D69B1/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":2,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"db25ed","Name":"Custom_Tile","Transform":{"posX":-20.5,"posY":2.34593153,"posZ":3.5,"rotX":-0.000003855682,"rotY":179.999954,"rotZ":5.790816e-7,"scaleX":0.508209646,"scaleY":1,"scaleZ":0.508209646},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916094372/B9D7A94D7F77A387B60636F4EAE88633E33C73A5/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916094372/B9D7A94D7F77A387B60636F4EAE88633E33C73A5/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":2,"Thickness":0.2,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5d31c9","Name":"Custom_Tile","Transform":{"posX":-20.0197372,"posY":2.34185982,"posZ":3.993797,"rotX":-0.000004459444,"rotY":180,"rotZ":-9.292997e-7,"scaleX":0.508209646,"scaleY":1,"scaleZ":0.508209646},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916090422/E9EC18EF06ED565B5D8071E8BBA1655B5AE562E0/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/1932636167916090422/E9EC18EF06ED565B5D8071E8BBA1655B5AE562E0/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":2,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"b526e3","Name":"Custom_Model_Bag","Transform":{"posX":-20,"posY":1.8353008,"posZ":10,"rotX":-0.00000492221034,"rotY":179.971756,"rotZ":6.34300861e-8,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662302003564/A3B2CB76F0EB526F71A6076E20E5E5CF51C9A02A/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"70a53a\":{\"lock\":false,\"pos\":{\"x\":14.9900007247925,\"y\":1.51796793937683,\"z\":12.5105972290039},\"rot\":{\"x\":0.0108930664137006,\"y\":179.982437133789,\"z\":0.00494486186653376},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c1ffb8\":{\"lock\":false,\"pos\":{\"x\":-19.9999752044678,\"y\":1.77885568141937,\"z\":21.5000247955322},\"rot\":{\"x\":-4.95907670483575E-06,\"y\":179.83837890625,\"z\":9.68527160694066E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"70a53a","Name":"Card","Transform":{"posX":-19.9999714,"posY":1.77890468,"posZ":21.50003,"rotX":-0.000005001841,"rotY":179.982437,"rotZ":1.2887341e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruines des Whateley","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02251\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Diamond|Hourglass\",\n    \"icons\": \"Plus\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle|Diamond|Hourglass\",\n    \"icons\": \"Plus\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117314,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c1ffb8","Name":"Card","Transform":{"posX":14.9900026,"posY":1.51796782,"posZ":12.5105944,"rotX":0.0109054539,"rotY":179.838364,"rotZ":0.004917575,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruines des Whateley","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02250\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Diamond|Hourglass\",\n    \"icons\": \"Plus\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle|Diamond|Hourglass\",\n    \"icons\": \"Plus\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117313,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"ba75c0","Name":"Custom_Model_Bag","Transform":{"posX":-26.0000076,"posY":1.8353008,"posZ":9.999991,"rotX":-0.00000606775939,"rotY":179.971786,"rotZ":-5.100274e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662301512707/AACFC5A7E2B2828E449B2979907F1D94C4C5469C/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"96df71\":{\"lock\":false,\"pos\":{\"x\":4.14300107955933,\"y\":1.51891565322876,\"z\":12.5682973861694},\"rot\":{\"x\":0.0108917718753219,\"y\":179.996612548828,\"z\":0.00494758971035481},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f94ecf\":{\"lock\":false,\"pos\":{\"x\":-26.9999885559082,\"y\":1.77885568141937,\"z\":21.5000095367432},\"rot\":{\"x\":-5.19322657055454E-06,\"y\":179.996231079102,\"z\":9.81484333806293E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"96df71","Name":"Card","Transform":{"posX":-26.9999886,"posY":1.77890468,"posZ":21.5000134,"rotX":-0.000005175618,"rotY":179.996628,"rotZ":-1.27101913e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pré des Dix-Arpents","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02247\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Triangle|Plus\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"count\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Triangle|Plus\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117310,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f94ecf","Name":"Card","Transform":{"posX":4.143002,"posY":1.51891565,"posZ":12.5682945,"rotX":0.0108919023,"rotY":179.996231,"rotZ":0.0049476,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pré des Dix-Arpents","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02246\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Triangle|Plus\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Triangle|Plus\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117309,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"beaa6e","Name":"Custom_Tile","Transform":{"posX":-1.50000131,"posY":1.50683081,"posZ":18.0000038,"rotX":-0.004205294,"rotY":44.98817,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"bf8897","Name":"Custom_Model_Bag","Transform":{"posX":-26,"posY":1.83530045,"posZ":13.5,"rotX":-0.00000572910631,"rotY":179.97493,"rotZ":-8.19938037e-8,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662301984640/CAAC8F1CA23C8211D520BA76CE7FDA34B8DFB353/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"3975c8\":{\"lock\":false,\"pos\":{\"x\":-26.9999847412109,\"y\":1.7788553237915,\"z\":26.0000190734863},\"rot\":{\"x\":-5.08359835293959E-06,\"y\":180.009521484375,\"z\":-6.73092941383402E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ad9452\":{\"lock\":false,\"pos\":{\"x\":-7.00000238418579,\"y\":1.51986491680145,\"z\":12.5000028610229},\"rot\":{\"x\":0.0108906421810389,\"y\":180.009704589844,\"z\":0.0049501652829349},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"3975c8","Name":"Card","Transform":{"posX":-7.000002,"posY":1.51986492,"posZ":12.5,"rotX":0.0108907828,"rotY":180.009521,"rotZ":0.00495018,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Village de Dunwich","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02243\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Square|Diamond\",\n    \"icons\": \"Circle\",\n    \"uses\": {\n      \"count\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle|Square|Diamond\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117305,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ad9452","Name":"Card","Transform":{"posX":-26.9999828,"posY":1.77890432,"posZ":26.0000248,"rotX":-0.00000511007056,"rotY":180.0097,"rotZ":4.995756e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Village de Dunwich","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02242\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Square|Diamond\",\n    \"icons\": \"Circle\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle|Square|Diamond\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117306,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"bfd0f7","Name":"Custom_Tile","Transform":{"posX":9.499999,"posY":1.50483537,"posZ":12.5,"rotX":0.004947704,"rotY":90,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":4.499998,"posY":1.6248529,"posZ":5,"rotX":-0.00006597261,"rotY":89.99994,"rotZ":-0.0000136240915,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":4.49999857,"posY":1.6248529,"posZ":5,"rotX":-0.000066110646,"rotY":89.99996,"rotZ":-0.0000137726465,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"c4586b","Name":"Deck","Transform":{"posX":30.5,"posY":1.72431862,"posZ":-3,"rotX":-0.0005911045,"rotY":180.000488,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Rencontre","Description":"Aux Frontières du Visible","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[18433,18432,18500,18437,18435,18434,18436,17512,17510,17508,17506,16717,16715,16714,16716,16711,16713,15413,16002,15418,15419,15416,15417,16006,16007,16005,16004,16000,16001,16003,16134,16138,16137],"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"07ff5e","Name":"Card","Transform":{"posX":30.5,"posY":10.9797211,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voix Dissonantes","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18433,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e9a446","Name":"Card","Transform":{"posX":30.5,"posY":10.7797213,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voix Dissonantes","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18432,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0783ce","Name":"Card","Transform":{"posX":30.5,"posY":10.2422342,"posZ":-2.99999976,"rotX":-0.000590967247,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Paralysé par la Peur","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18500,"SidewaysCard":false,"CustomDeck":{"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"68be1e","Name":"Card","Transform":{"posX":30.5,"posY":10.3797216,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Paralysé par la Peur","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18437,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5e2ae4","Name":"Card","Transform":{"posX":30.5,"posY":10.1797209,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18435,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"365129","Name":"Card","Transform":{"posX":30.5,"posY":9.979721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18434,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2e3a70","Name":"Card","Transform":{"posX":30.5,"posY":9.779721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Restes Pourrissants","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18436,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"493b56","Name":"Card","Transform":{"posX":30.5,"posY":9.579721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Sordide et Silencieux","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02089\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17512,"SidewaysCard":false,"CustomDeck":{"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f9d854","Name":"Card","Transform":{"posX":30.5,"posY":9.379722,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Sordide et Silencieux","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02089\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17510,"SidewaysCard":false,"CustomDeck":{"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"aea6f8","Name":"Card","Transform":{"posX":30.5,"posY":9.179721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Contrée Impie","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02088\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17508,"SidewaysCard":false,"CustomDeck":{"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6f2907","Name":"Card","Transform":{"posX":30.5,"posY":8.979721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Contrée Impie","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02088\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17506,"SidewaysCard":false,"CustomDeck":{"175":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3a2890","Name":"Card","Transform":{"posX":30.5,"posY":8.779721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bête Altérée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02096\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16717,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9b8df1","Name":"Card","Transform":{"posX":30.5,"posY":8.579721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bête Altérée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02096\",\n  \"traits\": \"Power.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16715,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1c7f06","Name":"Card","Transform":{"posX":30.5,"posY":8.042234,"posZ":-2.99999976,"rotX":-0.0005908495,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall Lupin","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02095\",\n  \"traits\": \"Creature. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16714,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"63d0a1","Name":"Card","Transform":{"posX":30.5,"posY":8.179721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall Lupin","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02095\",\n  \"traits\": \"Creature. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16716,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e07cf7","Name":"Card","Transform":{"posX":30.5,"posY":7.979721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall Aviaire","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02094\",\n  \"traits\": \"Creature. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16711,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a66851","Name":"Card","Transform":{"posX":30.5,"posY":7.779721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Thrall Aviaire","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02094\",\n  \"traits\": \"Creature. Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16713,"SidewaysCard":false,"CustomDeck":{"167":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"74772f","Name":"Card","Transform":{"posX":30.5,"posY":7.579721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Avides de Mort","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02091\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15413,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9e5853","Name":"Card","Transform":{"posX":30.5,"posY":5.71240234,"posZ":-3.00000024,"rotX":-0.0005903852,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bêtes Démesurées","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02256\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16002,"SidewaysCard":false,"CustomDeck":{"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ec81eb","Name":"Card","Transform":{"posX":30.5,"posY":7.37972164,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Avides de Mort","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02091\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15418,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b248fe","Name":"Card","Transform":{"posX":30.5,"posY":7.179721,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15419,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c75f9e","Name":"Card","Transform":{"posX":30.5,"posY":6.97972155,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15416,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"34acc2","Name":"Card","Transform":{"posX":30.5,"posY":6.779722,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Engoulevent","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02090\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15417,"SidewaysCard":false,"CustomDeck":{"154":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2a40a7","Name":"Card","Transform":{"posX":30.5,"posY":6.242236,"posZ":-2.99999976,"rotX":-0.0005908992,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Piste des Créatures","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02259\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16006,"SidewaysCard":false,"CustomDeck":{"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8a8e70","Name":"Card","Transform":{"posX":30.5,"posY":6.379722,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Piste des Créatures","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02259\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16007,"SidewaysCard":false,"CustomDeck":{"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"375d8b","Name":"Card","Transform":{"posX":30.5,"posY":6.17972231,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Attirer l'Attention","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02258\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16005,"SidewaysCard":false,"CustomDeck":{"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a4daa5","Name":"Card","Transform":{"posX":30.5,"posY":5.9797225,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Attirer l'Attention","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02258\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16004,"SidewaysCard":false,"CustomDeck":{"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"919139","Name":"Card","Transform":{"posX":30.5,"posY":5.779722,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruine et Destruction","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02257\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16000,"SidewaysCard":false,"CustomDeck":{"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"333d52","Name":"Card","Transform":{"posX":30.5,"posY":5.242236,"posZ":-2.99999976,"rotX":-0.0005909182,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruine et Destruction","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02257\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16001,"SidewaysCard":false,"CustomDeck":{"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"666328","Name":"Card","Transform":{"posX":30.5,"posY":5.379722,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Ruine et Destruction","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02257\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16003,"SidewaysCard":false,"CustomDeck":{"160":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e288f9","Name":"Card","Transform":{"posX":30.5,"posY":5.17972231,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bêtes Démesurées","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02256\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16134,"SidewaysCard":false,"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3e59b3","Name":"Card","Transform":{"posX":30.5,"posY":4.9797225,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bêtes Démesurées","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02256\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16138,"SidewaysCard":false,"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"568fc7","Name":"Card","Transform":{"posX":30.5,"posY":4.779722,"posZ":-3,"rotX":-0.000590963347,"rotY":180.0005,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bêtes Démesurées","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02256\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16137,"SidewaysCard":false,"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"c56db4","Name":"Custom_Tile","Transform":{"posX":-1.50000441,"posY":1.50578535,"posZ":12.5000029,"rotX":0.0049477173,"rotY":90.00021,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"e7aa28","Name":"Deck","Transform":{"posX":-28.000145,"posY":1.81030214,"posZ":3.49985814,"rotX":-0.00000491345054,"rotY":180,"rotZ":-2.51086476e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rejetons de Yog-Sothoth","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[16135,16132,16130,16133,16136],"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"b2434a","Name":"Card","Transform":{"posX":-28.000145,"posY":4.776337,"posZ":3.49985838,"rotX":-0.000005222227,"rotY":180.000031,"rotZ":0.00000120871277,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rejeton de Yog-Sothoth","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02255\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16135,"SidewaysCard":false,"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8041a2","Name":"Card","Transform":{"posX":-28.000145,"posY":5.065706,"posZ":3.49985838,"rotX":-0.00000521392,"rotY":180.000031,"rotZ":0.00000114316686,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rejeton de Yog-Sothoth","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02255\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16132,"SidewaysCard":false,"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"aede5c","Name":"Card","Transform":{"posX":-28.000145,"posY":5.26570559,"posZ":3.49985838,"rotX":-0.00000521392,"rotY":180.000031,"rotZ":0.00000114316686,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rejeton de Yog-Sothoth","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02255\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16130,"SidewaysCard":false,"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"49fa43","Name":"Card","Transform":{"posX":-28.000145,"posY":5.38695049,"posZ":3.49985838,"rotX":-0.000005205599,"rotY":180.000031,"rotZ":0.00000116941624,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rejeton de Yog-Sothoth","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02255\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16133,"SidewaysCard":false,"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"efc5a6","Name":"Card","Transform":{"posX":-28.000145,"posY":1.8946476,"posZ":3.49985838,"rotX":0.00298471726,"rotY":180.000031,"rotZ":-0.003573443,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Rejeton de Yog-Sothoth","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"02255\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16136,"SidewaysCard":false,"CustomDeck":{"161":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"e94466","Name":"Custom_Tile","Transform":{"posX":2.999997,"posY":1.60163224,"posZ":-6.49999571,"rotX":0.017176548,"rotY":180.01152,"rotZ":0.00565435225,"scaleX":1.6428808,"scaleY":1,"scaleZ":1.6428808},"Nickname":"Mise en place du Chaos Bag","Description":"V : Aux Frontières du Visible","GMNotes":"{\"data\":\"Undimensioned and Unseen\",\"easy\":false,\"expert\":false,\"hard\":false,\"normal\":false,\"standalone\":true}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.8745098,"g":0.8,"b":0.7019608},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend","LuaScriptState":"","XmlUI":""},{"GUID":"ff8177","Name":"Custom_Model_Bag","Transform":{"posX":-19.99999,"posY":1.83530056,"posZ":13.5000057,"rotX":-0.00000681373467,"rotY":179.972427,"rotZ":2.181251e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"bag coin aléatoire","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662301991904/7E84BE33F1D0A3E18D240D80DC3C8131FD44D609/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"497aa9\":{\"lock\":false,\"pos\":{\"x\":-19.9999732971191,\"y\":1.77885520458221,\"z\":26.0000305175781},\"rot\":{\"x\":-5.08979246660601E-06,\"y\":178.862152099609,\"z\":2.24386809577481E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7e39d0\":{\"lock\":false,\"pos\":{\"x\":14.9532041549683,\"y\":1.52007722854614,\"z\":23.5901031494141},\"rot\":{\"x\":0.0108902426436543,\"y\":180.014831542969,\"z\":0.00495097553357482},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"497aa9","Name":"Card","Transform":{"posX":14.9532051,"posY":1.52007723,"posZ":23.5901012,"rotX":0.0109876012,"rotY":178.862152,"rotZ":0.00473098457,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bal du Diable","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02252\",\n  \"locationBack\": {\n    \"connections\": \"Square|Plus\",\n    \"icons\": \"Hourglass\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Square|Plus\",\n    \"icons\": \"Hourglass\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117315,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7e39d0","Name":"Card","Transform":{"posX":-19.99997,"posY":1.7789042,"posZ":26.0000381,"rotX":-0.00000511437747,"rotY":180.014832,"rotZ":-1.33943885e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Bal du Diable","Description":"Dunwich.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02253\",\n  \"locationBack\": {\n    \"connections\": \"Square|Plus\",\n    \"icons\": \"Hourglass\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Square|Plus\",\n    \"icons\": \"Hourglass\"\n  },\n  \"traits\": \"Dunwich.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":117316,"SidewaysCard":false,"CustomDeck":{"1173":{"FaceURL":"https://i.imgur.com/0FRbPFZ.jpg","BackURL":"https://i.imgur.com/z0qG3Pt.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}],"AttachedDecals":[{"Transform":{"posX":-0.0021877822,"posY":-0.08963572,"posZ":-0.00288731651,"rotX":270,"rotY":359.869568,"rotZ":0,"scaleX":2.00000215,"scaleY":2.00000238,"scaleZ":2.00000262},"CustomDecal":{"Name":"dunwich_back","ImageURL":"http://cloud-3.steamusercontent.com/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/","Size":7.4}}]},{"GUID":"7911d4","Name":"Custom_PDF","Transform":{"posX":-18.5,"posY":1.47986,"posZ":-4.9973,"rotX":-6.81567e-8,"rotY":180.0081,"rotZ":4.21820836e-8,"scaleX":2.05722,"scaleY":1,"scaleZ":2.05722},"Nickname":"L'héritage de Dunwich","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomPDF":{"PDFUrl":"http://cloud-3.steamusercontent.com/ugc/1936013662297838134/7B252BBBADFB0EC739FD3A88383BD62887F4122B/","PDFPassword":"","PDFPage":0,"PDFPageOffset":0},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7aacde","Name":"Custom_Tile","Transform":{"posX":3.00000024,"posY":1.50197494,"posZ":-5.499951,"rotX":0.0108904662,"rotY":180.0132,"rotZ":0.00495092524,"scaleX":1.6428808,"scaleY":1,"scaleZ":1.6428808},"Nickname":"Mise en place du Chaos Bag","Description":"L'Héritage de Dunwich","GMNotes":"{\"data\":\"The Dunwich Legacy\",\"easy\":true,\"expert\":true,\"hard\":true,\"normal\":true,\"standalone\":false}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.8745098,"g":0.8,"b":0.7019608},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend","LuaScriptState":"","XmlUI":""},{"GUID":"dfa75b","Name":"Custom_Model_Bag","Transform":{"posX":21.5000038,"posY":0.9799973,"posZ":45.0000038,"rotX":-0.00000494450751,"rotY":180.023254,"rotZ":5.123596e-7,"scaleX":1.20052135,"scaleY":0.249882281,"scaleZ":1.3145982},"Nickname":"VII : Perdu dans le Temps et l'Espace","Description":"L'Héritage de Dunwich","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118403758335/596601A40E86B6A360B58E645E976023DBAD4D85/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"1ba7b3\":{\"lock\":false,\"pos\":{\"x\":-31.5000019073486,\"y\":1.77885711193085,\"z\":4.49999618530273},\"rot\":{\"x\":-4.88709201817983E-06,\"y\":180,\"z\":4.58596716157444E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2fc6f3\":{\"lock\":false,\"pos\":{\"x\":1.95495886146091E-09,\"y\":1.50527560710907,\"z\":10.5},\"rot\":{\"x\":-0.00494835106655955,\"y\":270.002990722656,\"z\":0.0108971269801259},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3abdac\":{\"lock\":false,\"pos\":{\"x\":-27.5000038146973,\"y\":1.77885723114014,\"z\":4.49999570846558},\"rot\":{\"x\":-4.9372201829101E-06,\"y\":179.999969482422,\"z\":1.4213051713341E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5915f7\":{\"lock\":false,\"pos\":{\"x\":12.5000009536743,\"y\":1.5412460565567,\"z\":-5.99990081787109},\"rot\":{\"x\":0.00494821136817336,\"y\":90.0009155273438,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"69221b\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.76764500141144,\"z\":-3},\"rot\":{\"x\":-0.000590966548770666,\"y\":180.000183105469,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"910c66\":{\"lock\":false,\"pos\":{\"x\":-4,\"y\":1.51922571659088,\"z\":10.5},\"rot\":{\"x\":0.0108930813148618,\"y\":179.982513427734,\"z\":0.00494494149461389},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a0c612\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.6016,\"z\":-6.5},\"rot\":{\"x\":0.0172,\"y\":180.0109,\"z\":0.0057},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"b31ae7\":{\"lock\":false,\"pos\":{\"x\":23.5000991821289,\"y\":1.51380920410156,\"z\":-5.50000095367432},\"rot\":{\"x\":0.0108930775895715,\"y\":179.981781005859,\"z\":0.00494478503242135},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ba3cb2\":{\"lock\":false,\"pos\":{\"x\":-23.0000057220459,\"y\":1.77885711193085,\"z\":4.49999523162842},\"rot\":{\"x\":-4.87623492517741E-06,\"y\":180,\"z\":9.99228007003694E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c46ba3\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.54081428050995,\"z\":-5.99989986419678},\"rot\":{\"x\":0.00494852941483259,\"y\":90.0021820068359,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"1ba7b3","Name":"Card","Transform":{"posX":-31.50002,"posY":1.77890611,"posZ":4.499975,"rotX":-0.00000518355228,"rotY":179.999969,"rotZ":5.381171e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Déchirure dans le Temps","Description":"Autre Monde.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02322\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Plus|Tilde\",\n    \"icons\": \"Crescent\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Plus|Tilde\",\n    \"icons\": \"Crescent\"\n  },\n  \"traits\": \"Otherworld.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121204,"SidewaysCard":false,"CustomDeck":{"1212":{"FaceURL":"https://i.imgur.com/fR29y6J.jpg","BackURL":"https://i.imgur.com/bw3G2NP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2fc6f3","Name":"Custom_Tile","Transform":{"posX":-1.67367034e-7,"posY":1.50527549,"posZ":10.5,"rotX":-0.004948393,"rotY":270.003,"rotZ":0.0108978692,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"3abdac","Name":"Card","Transform":{"posX":-27.500021,"posY":1.77890611,"posZ":4.49997854,"rotX":-0.00000512123142,"rotY":180.000092,"rotZ":-8.32765252e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Le Bord de l'Univers","Description":"Autre Monde.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02321\",\n  \"locationBack\": {\n    \"connections\": \"Plus|Tilde\",\n    \"icons\": \"Crescent\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Plus|Tilde\",\n    \"icons\": \"Crescent\"\n  },\n  \"traits\": \"Otherworld.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121202,"SidewaysCard":false,"CustomDeck":{"1212":{"FaceURL":"https://i.imgur.com/fR29y6J.jpg","BackURL":"https://i.imgur.com/bw3G2NP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5915f7","Name":"Deck","Transform":{"posX":12.5000029,"posY":1.541246,"posZ":-5.999908,"rotX":0.004948232,"rotY":90.00106,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Intrigue","Description":"Perdu dans le Temps et l'Espace","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[121303,121302,121301,121300],"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"cf091d","Name":"Card","Transform":{"posX":12.5000029,"posY":1.68636429,"posZ":-5.999905,"rotX":0.00491856271,"rotY":90.00098,"rotZ":359.988953,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"La Fin de toute Chose","Description":"Intrigue 4a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 2,\n  \"id\": \"02315\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121303,"SidewaysCard":true,"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"bbcaea","Name":"Card","Transform":{"posX":12.5000029,"posY":1.64861608,"posZ":-5.999905,"rotX":0.004949704,"rotY":90.00098,"rotZ":359.988922,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Passer au Travers","Description":"Intrigue 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 6,\n  \"id\": \"02314\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121302,"SidewaysCard":true,"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ef19df","Name":"Card","Transform":{"posX":12.5000029,"posY":1.60810816,"posZ":-5.99990559,"rotX":0.00441824971,"rotY":90.00098,"rotZ":359.988617,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Passé, Présent et Avenir","Description":"Intrigue 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 4,\n  \"id\": \"02313\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121301,"SidewaysCard":true,"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3f5640","Name":"Card","Transform":{"posX":12.5000086,"posY":1.6217438,"posZ":-5.99991655,"rotX":0.007923193,"rotY":90.00098,"rotZ":359.987762,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Tout est Un","Description":"Intrigue 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 4,\n  \"id\": \"02312\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121300,"SidewaysCard":true,"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"69221b","Name":"Deck","Transform":{"posX":30.5,"posY":1.767645,"posZ":-3,"rotX":-0.0005910965,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Rencontre","Description":"Perdu dans le Temps et l'Espace","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[15805,15806,15807,15810,17931,17930,17934,15620,15623,15621,15622,15625,15624,15508,15512,15509,15511,15515,15514,18940,18943,18939,18941,18942,18936,18938,18937,18925,18935,18934,18931,18933,18932,559600,18927,18929,18928,18926,18924,18923,18920,18922],"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"5596":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230438588/2F85DF80EC27FD760D8FBBE1C8EE22542CB8E51D/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230284904/1EE0B15842CC713A6A68B5D4682A3D46E03E44CE/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"1aaf3a","Name":"Card","Transform":{"posX":30.4999943,"posY":2.01252341,"posZ":-3.00000024,"rotX":359.963379,"rotY":180.009155,"rotZ":179.988876,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Offre de Pouvoir","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01178\",\n  \"traits\": \"Pact.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15805,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d64d65","Name":"Card","Transform":{"posX":30.5,"posY":12.6230478,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Offre de Pouvoir","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01178\",\n  \"traits\": \"Pact.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15806,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8a6a1d","Name":"Card","Transform":{"posX":30.5,"posY":12.423048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Observateur Yithien","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01177\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15807,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8f8689","Name":"Card","Transform":{"posX":30.5,"posY":12.2230473,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Observateur Yithien","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01177\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15810,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"70c221","Name":"Card","Transform":{"posX":30.5,"posY":12.0230474,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Serviteur du Rôdeur","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"id\": \"02104\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17931,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c8d931","Name":"Card","Transform":{"posX":30.5,"posY":11.8230476,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Agglomérat de Sphères","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"id\": \"02103\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17930,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"87be51","Name":"Card","Transform":{"posX":30.5,"posY":11.6230478,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Agglomérat de Sphères","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"id\": \"02103\",\n  \"traits\": \"Monster. Abomination.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17934,"SidewaysCard":false,"CustomDeck":{"179":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6533fc","Name":"Card","Transform":{"posX":30.5,"posY":11.423048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Barrière Mystique","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02102\",\n  \"traits\": \"Hex. Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15620,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e2a503","Name":"Card","Transform":{"posX":30.5,"posY":10.885561,"posZ":-2.99999976,"rotX":-0.000590709038,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Barrière Mystique","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02102\",\n  \"traits\": \"Hex. Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15623,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ff0620","Name":"Card","Transform":{"posX":30.5,"posY":11.0230474,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terreur de l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02101\",\n  \"traits\": \"Hex. Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15621,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"62531f","Name":"Card","Transform":{"posX":30.5,"posY":10.8230476,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Terreur de l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02101\",\n  \"traits\": \"Hex. Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15622,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"11d71d","Name":"Card","Transform":{"posX":30.5,"posY":10.6230478,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Propulsé dans l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02100\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15625,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"217f6b","Name":"Card","Transform":{"posX":30.5,"posY":10.423048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Propulsé dans l'Au-Delà","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02100\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15624,"SidewaysCard":false,"CustomDeck":{"156":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc2af0","Name":"Card","Transform":{"posX":30.5,"posY":10.2230473,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15508,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ed11ad","Name":"Card","Transform":{"posX":30.5,"posY":10.0230474,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15512,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b52985","Name":"Card","Transform":{"posX":30.5,"posY":9.485561,"posZ":-2.99999976,"rotX":-0.000590737851,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Au-Delà du Voile","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02084\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15509,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3bd92a","Name":"Card","Transform":{"posX":30.5,"posY":9.623048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15511,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5b9c33","Name":"Card","Transform":{"posX":30.5,"posY":9.423048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15515,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e0e2","Name":"Card","Transform":{"posX":30.5,"posY":9.223047,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Visions des Avenirs Passés","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02083\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15514,"SidewaysCard":false,"CustomDeck":{"155":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"decb33","Name":"Card","Transform":{"posX":30.5,"posY":9.023047,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Vaste Étendue","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02333\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18940,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7c86f3","Name":"Card","Transform":{"posX":30.5,"posY":8.823048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Vaste Étendue","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02333\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18943,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"90de79","Name":"Card","Transform":{"posX":30.5,"posY":8.623048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Vaste Étendue","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02333\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18939,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b871a8","Name":"Card","Transform":{"posX":30.5,"posY":8.423048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Trou de Ver","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02332\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18941,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"12eb81","Name":"Card","Transform":{"posX":30.5,"posY":8.223047,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Trou de Ver","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02332\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18942,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2e6993","Name":"Card","Transform":{"posX":30.5,"posY":7.685561,"posZ":-2.99999976,"rotX":-0.00059092266,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Réalité Disloquée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02331\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18936,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2d9ca4","Name":"Card","Transform":{"posX":30.5,"posY":7.823047,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Réalité Disloquée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02331\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18938,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d0fb3a","Name":"Card","Transform":{"posX":30.5,"posY":7.62304735,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Réalité Disloquée","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02331\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18937,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"99871f","Name":"Card","Transform":{"posX":30.5,"posY":5.756176,"posZ":-3.00000024,"rotX":-0.0005902051,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Déchirure dans l'Espace","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02324\",\n  \"locationFront\": {\n    \"connections\": \"Diamond|Triangle|Square\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18925,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b28ae5","Name":"Card","Transform":{"posX":30.5,"posY":7.08556175,"posZ":-2.99999976,"rotX":-0.00059082685,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chercheur d'Étoiles Yithien","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02330\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18935,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4205d1","Name":"Card","Transform":{"posX":30.5,"posY":7.22304726,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Chercheur d'Étoiles Yithien","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02330\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18934,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e73a65","Name":"Card","Transform":{"posX":30.5,"posY":7.023048,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voyageur Interstellaire","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02329\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18931,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c2e9f1","Name":"Card","Transform":{"posX":30.5,"posY":6.82304859,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voyageur Interstellaire","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02329\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18933,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6b284a","Name":"Card","Transform":{"posX":30.5,"posY":6.623049,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Voyageur Interstellaire","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"02329\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18932,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"04c970","Name":"CardCustom","Transform":{"posX":30.5,"posY":6.4230485,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Portail Dimensionnel","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02328\",\n  \"locationFront\": {\n    \"connections\": \"Triangle|Crescent\",\n    \"icons\": \"Tilde\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":559600,"SidewaysCard":false,"CustomDeck":{"5596":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230438588/2F85DF80EC27FD760D8FBBE1C8EE22542CB8E51D/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1770458304230284904/1EE0B15842CC713A6A68B5D4682A3D46E03E44CE/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a7cf96","Name":"Card","Transform":{"posX":30.5,"posY":6.22304869,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Marches de Y'hagharl","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02327\",\n  \"locationFront\": {\n    \"connections\": \"Diamond|Crescent\",\n    \"icons\": \"Plus\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18927,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a6fd0b","Name":"Card","Transform":{"posX":30.5,"posY":6.023049,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pont Sans Fin","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02326\",\n  \"locationFront\": {\n    \"connections\": \"Square|Tilde\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18929,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9d2ebb","Name":"Card","Transform":{"posX":30.5,"posY":5.82304859,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Pont Sans Fin","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02326\",\n  \"locationFront\": {\n    \"connections\": \"Square|Tilde\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"count\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18928,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"af2f15","Name":"Card","Transform":{"posX":30.5,"posY":5.623049,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Cascade Prismatique","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02325\",\n  \"locationFront\": {\n    \"connections\": \"Square|Plus\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"count\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18926,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"249b77","Name":"Card","Transform":{"posX":30.5,"posY":5.4230485,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Cascade Prismatique","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02325\",\n  \"locationFront\": {\n    \"connections\": \"Square|Plus\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"count\": 3,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18924,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"841239","Name":"Card","Transform":{"posX":30.5,"posY":5.22304869,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Déchirure dans l'Espace","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02324\",\n  \"locationFront\": {\n    \"connections\": \"Diamond|Triangle|Square\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18923,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"61d7d7","Name":"Card","Transform":{"posX":30.5,"posY":5.023049,"posZ":-3,"rotX":-0.0005907977,"rotY":180.000183,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Déchirure dans l'Espace","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02324\",\n  \"locationFront\": {\n    \"connections\": \"Diamond|Triangle|Square\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18920,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"919139","Name":"Card","Transform":{"posX":30.5000076,"posY":1.6251123,"posZ":-2.99999619,"rotX":-0.00442591542,"rotY":180.000214,"rotZ":180.004684,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Déchirure dans l'Espace","Description":"Autre Monde. Extradimensionnel.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02324\",\n  \"locationFront\": {\n    \"connections\": \"Diamond|Triangle|Square\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"count\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"traits\": \"Otherworld. Extradimensional.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18922,"SidewaysCard":false,"CustomDeck":{"189":{"FaceURL":"https://i.imgur.com/EEPF7vQ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"910c66","Name":"Card","Transform":{"posX":-4,"posY":1.51922572,"posZ":10.5,"rotX":0.0108930944,"rotY":179.982513,"rotZ":0.00494487723,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Une Autre Dimension","Description":"Détachée de la Réalité\nAutre Monde.","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"02320\",\n  \"locationBack\": {\n    \"connections\": \"Square|Diamond|Triangle\",\n    \"icons\": \"Circle\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Square|Diamond|Triangle\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Otherworld.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121203,"SidewaysCard":false,"CustomDeck":{"1212":{"FaceURL":"https://i.imgur.com/fR29y6J.jpg","BackURL":"https://i.imgur.com/bw3G2NP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a0c612","Name":"Custom_Tile","Transform":{"posX":2.999997,"posY":1.60163224,"posZ":-6.49999571,"rotX":0.0171769615,"rotY":180.01091,"rotZ":0.00565530732,"scaleX":1.6428808,"scaleY":1,"scaleZ":1.6428808},"Nickname":"Mise en place du Chaos Bag","Description":"VII : Perdu dans le Temps et l'Espace","GMNotes":"{\"data\":\"Lost in Time and Space\",\"easy\":false,\"expert\":false,\"hard\":false,\"normal\":false,\"standalone\":true}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.8745098,"g":0.8,"b":0.7019608},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend","LuaScriptState":"","XmlUI":""},{"GUID":"b31ae7","Name":"Card","Transform":{"posX":23.5001,"posY":1.5138092,"posZ":-5.500004,"rotX":0.0108930841,"rotY":179.981934,"rotZ":0.00494476827,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Référence","Description":"Perdu dans le Temps et l'Espace","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121200,"SidewaysCard":false,"CustomDeck":{"1212":{"FaceURL":"https://i.imgur.com/fR29y6J.jpg","BackURL":"https://i.imgur.com/bw3G2NP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ba3cb2","Name":"Card","Transform":{"posX":-23.0000153,"posY":1.77890611,"posZ":4.49998665,"rotX":-0.000005073917,"rotY":180.000031,"rotZ":-1.04922027e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Yog-Sothoth","Description":"Le Rôdeur au-delà du Seuil","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"02323\",\n  \"traits\": \"Ancient One. Elite.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121201,"SidewaysCard":false,"CustomDeck":{"1212":{"FaceURL":"https://i.imgur.com/fR29y6J.jpg","BackURL":"https://i.imgur.com/bw3G2NP.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c46ba3","Name":"Deck","Transform":{"posX":17.5000019,"posY":1.54081428,"posZ":-5.99990129,"rotX":0.00494842557,"rotY":90.00211,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Deck Acte","Description":"Perdu dans le Temps et l'Espace","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[121307,121306,121305,121304],"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"818c48","Name":"Card","Transform":{"posX":17.5000019,"posY":1.68593264,"posZ":-5.99990273,"rotX":0.004891279,"rotY":90.0021744,"rotZ":359.988556,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Trouver une Autre Voie","Description":"Acte 4a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02319\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121307,"SidewaysCard":true,"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d07bdc","Name":"Card","Transform":{"posX":17.5000019,"posY":1.64818418,"posZ":-5.99990273,"rotX":0.00493680825,"rotY":90.0021744,"rotZ":359.988739,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Fermer la Faille","Description":"Acte 3a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 3,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02318\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121306,"SidewaysCard":true,"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"04ebee","Name":"Card","Transform":{"posX":17.5000019,"posY":1.60767651,"posZ":-5.999903,"rotX":0.00441896,"rotY":90.0021744,"rotZ":359.988617,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Dans l'Au-Delà","Description":"Acte 2a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"02317\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121305,"SidewaysCard":true,"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f3e2f4","Name":"Card","Transform":{"posX":17.5000076,"posY":1.621312,"posZ":-5.999914,"rotX":0.007921769,"rotY":90.0021744,"rotZ":359.987762,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Hors de ce Monde","Description":"Acte 1a","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"02316\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":121304,"SidewaysCard":true,"CustomDeck":{"1213":{"FaceURL":"https://i.imgur.com/btYreKl.jpg","BackURL":"https://i.imgur.com/uLiAXi8.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}],"AttachedDecals":[{"Transform":{"posX":-0.0021877822,"posY":-0.08963572,"posZ":-0.00288731651,"rotX":270,"rotY":359.869568,"rotZ":0,"scaleX":2.00000215,"scaleY":2.00000238,"scaleZ":2.00000262},"CustomDecal":{"Name":"dunwich_back","ImageURL":"http://cloud-3.steamusercontent.com/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/","Size":7.4}}]}]}