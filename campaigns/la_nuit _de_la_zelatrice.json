{"GUID":"0941ea","Name":"Custom_Model_Bag","Transform":{"posX":-93.0020447,"posY":0.9800006,"posZ":19.22567,"rotX":-0.000005359664,"rotY":180.00473,"rotZ":3.74657674e-7,"scaleX":0.6144237,"scaleY":0.08580595,"scaleZ":0.6144237},"Nickname":"La nuit de la Zélatrice","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/core_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/762723517667628371/18438B0A0045038A7099648AA3346DFCAA267C66/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,5}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 4\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-1.25,0.1,6}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.25,0.3,7}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.25,0.3,6}, rotation={0,0,0}, height=500, width=1200,\r\n          font_size=300, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.25,0.3,8}, rotation={0,0,0}, height=500, width=1200,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n          if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={1.25,0.3,8}, rotation={0,0,0}, height=500, width=1200,\r\n                    font_size=230, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={1.25,0.3,7}, rotation={0,0,0}, height=500, width=1200,\r\n                    font_size=300, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-6}, rotation={0,0,0}, height=500, width=1200,\r\n            font_size=300, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={1.4,1,5.85}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-1.4,1,5.85}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={5.85,0.1,0}, rotation={0,270,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"065026\":{\"lock\":false,\"pos\":{\"x\":-29.0001182556152,\"y\":1.77885699272156,\"z\":5.99988031387329},\"rot\":{\"x\":-5.1074598559353E-06,\"y\":180.000183105469,\"z\":3.96680803760319E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1118ce\":{\"lock\":false,\"pos\":{\"x\":-33.0001335144043,\"y\":1.77885699272156,\"z\":5.99987316131592},\"rot\":{\"x\":-4.87741908727912E-06,\"y\":180.000595092773,\"z\":-1.36274024953309E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"15e4c9\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.54189014434814,\"z\":-5.99989318847656},\"rot\":{\"x\":-6.58934441162273E-05,\"y\":90.0304946899414,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"20066e\":{\"lock\":false,\"pos\":{\"x\":-28.5000247955322,\"y\":1.83525240421295,\"z\":3.49997901916504},\"rot\":{\"x\":5.10425115862745E-06,\"y\":359.976165771484,\"z\":-4.75942584898803E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"27d340\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.54189014434814,\"z\":-5.99969530105591},\"rot\":{\"x\":-6.59808138152584E-05,\"y\":90.0357055664063,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2abd86\":{\"lock\":false,\"pos\":{\"x\":-27,\"y\":1.5802,\"z\":4.5},\"rot\":{\"x\":0,\"y\":0.0075,\"z\":0},\"tint\":{\"a\":1,\"b\":0.0899989679455757,\"g\":0.230998694896698,\"r\":0.442998707294464}},\"2d24ae\":{\"lock\":false,\"pos\":{\"x\":12.4999990463257,\"y\":1.01659035682678,\"z\":45},\"rot\":{\"x\":-1.46337200135349E-07,\"y\":179.984039306641,\"z\":-0.00010485573875485},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2eee61\":{\"lock\":true,\"pos\":{\"x\":4.5,\"y\":1.52009999752045,\"z\":18},\"rot\":{\"x\":0,\"y\":180,\"z\":-9.99999974737875E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"31e379\":{\"lock\":false,\"pos\":{\"x\":-1.99999868869781,\"y\":1.52010405063629,\"z\":11.5},\"rot\":{\"x\":1.3680290976481E-05,\"y\":179.999572753906,\"z\":-6.58130520605482E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"32bf1a\":{\"lock\":false,\"pos\":{\"x\":-1.99996876716614,\"y\":1.52010560035706,\"z\":18},\"rot\":{\"x\":1.36237931656069E-05,\"y\":179.997894287109,\"z\":-6.58802237012424E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"37e16f\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.54082214832306,\"z\":5},\"rot\":{\"x\":359.224945068359,\"y\":179.994491577148,\"z\":-9.98574687400833E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3b697a\":{\"lock\":false,\"pos\":{\"x\":13.4999742507935,\"y\":1.52012181282043,\"z\":11.5},\"rot\":{\"x\":1.36925564220292E-05,\"y\":179.998977661133,\"z\":-6.59025317872874E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3c4c18\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.50651466846466,\"z\":11},\"rot\":{\"x\":-6.59579236526042E-05,\"y\":90.0053024291992,\"z\":-1.37837996589951E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3d3516\":{\"lock\":false,\"pos\":{\"x\":30.4999008178711,\"y\":1.68580639362335,\"z\":-3},\"rot\":{\"x\":-0.000591088959481567,\"y\":180,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3f25b4\":{\"lock\":false,\"pos\":{\"x\":-28.0000038146973,\"y\":1.58021831512451,\"z\":4.99999666213989},\"rot\":{\"x\":5.75809053771081E-06,\"y\":0.0387008786201477,\"z\":-3.56573536919313E-07},\"tint\":{\"a\":1,\"b\":0.231706738471985,\"g\":0,\"r\":0.0990566089749336}},\"43a714\":{\"lock\":false,\"pos\":{\"x\":-32,\"y\":1.5802,\"z\":4.5},\"rot\":{\"x\":0,\"y\":359.9885,\"z\":0},\"tint\":{\"a\":1,\"b\":0.0899989679455757,\"g\":0.230998694896698,\"r\":0.442998707294464}},\"48d3a6\":{\"lock\":true,\"pos\":{\"x\":5.9981,\"y\":1.5054,\"z\":-5.5002},\"rot\":{\"x\":0.082,\"y\":180.0216,\"z\":0.0665},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"506767\":{\"lock\":false,\"pos\":{\"x\":-21.000114440918,\"y\":1.77885723114014,\"z\":3.49987649917603},\"rot\":{\"x\":-4.93871448270511E-06,\"y\":180.001174926758,\"z\":1.46039567994194E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"50a9d7\":{\"lock\":false,\"pos\":{\"x\":-1.5000011920929,\"y\":1.50650060176849,\"z\":14.5},\"rot\":{\"x\":-1.36200333145098E-05,\"y\":359.988189697266,\"z\":6.58865028526634E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"51a9c5\":{\"lock\":false,\"pos\":{\"x\":-1.99997794628143,\"y\":1.52010250091553,\"z\":5.00002765655518},\"rot\":{\"x\":1.36777489387896E-05,\"y\":180,\"z\":-6.5986103436444E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"544a5c\":{\"lock\":false,\"pos\":{\"x\":-22.0000057220459,\"y\":1.81506705284119,\"z\":5.49999332427979},\"rot\":{\"x\":-5.39732991455821E-06,\"y\":180.000259399414,\"z\":2.40275511487198E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"586187\":{\"lock\":false,\"pos\":{\"x\":6.08941507339478,\"y\":1.57010996341705,\"z\":4.95894956588745},\"rot\":{\"x\":2.57040483120363E-05,\"y\":180.52229309082,\"z\":-7.87549070082605E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5d6da8\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.8373,\"z\":10.5},\"rot\":{\"x\":-0.0034,\"y\":179.9697,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5f4d79\":{\"lock\":false,\"pos\":{\"x\":9.5,\"y\":1.50651323795319,\"z\":14.5},\"rot\":{\"x\":-5.62675922992639E-05,\"y\":44.9958992004395,\"z\":3.68588916899171E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"619ae1\":{\"lock\":false,\"pos\":{\"x\":-31.500020980835,\"y\":1.83744239807129,\"z\":3.49987959861755},\"rot\":{\"x\":359.845733642578,\"y\":359.971527099609,\"z\":0.000212871978874318},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"675f68\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.77885663509369,\"z\":10.5000019073486},\"rot\":{\"x\":-5.11328426000546E-06,\"y\":180.001083374023,\"z\":-2.05855812396294E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"68baa4\":{\"lock\":false,\"pos\":{\"x\":-25.5000133514404,\"y\":1.83525228500366,\"z\":3.4999840259552},\"rot\":{\"x\":5.08055791215156E-06,\"y\":359.973968505859,\"z\":-4.08776287486035E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"6a2978\":{\"lock\":false,\"pos\":{\"x\":9.5,\"y\":1.50651252269745,\"z\":11.5},\"rot\":{\"x\":-6.5919870394282E-05,\"y\":89.9960021972656,\"z\":-1.3585315173259E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"6a75e2\":{\"lock\":false,\"pos\":{\"x\":6.5,\"y\":1.50650990009308,\"z\":15},\"rot\":{\"x\":-2.11942824535072E-05,\"y\":150.001495361328,\"z\":-6.48006462142803E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"6cb29b\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.7788,\"z\":10.5},\"rot\":{\"x\":0.0002,\"y\":180.0118,\"z\":180.0013},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6d76b8\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.52011263370514,\"z\":11.5},\"rot\":{\"x\":1.37148253998021E-05,\"y\":180,\"z\":-6.60329678794369E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6ed02b\":{\"lock\":false,\"pos\":{\"x\":-22.9259433746338,\"y\":1.76660239696503,\"z\":2.87370920181274},\"rot\":{\"x\":5.19397917742026E-06,\"y\":0.000203013958525844,\"z\":-4.30274610607739E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"6ed2e9\":{\"lock\":false,\"pos\":{\"x\":-24.5000019073486,\"y\":1.81506657600403,\"z\":10.4999971389771},\"rot\":{\"x\":-5.13147551828297E-06,\"y\":180.000213623047,\"z\":2.65384016984171E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"71b102\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.54188430309296,\"z\":-5.99989414215088},\"rot\":{\"x\":-6.58896169625223E-05,\"y\":89.9973754882813,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"71dcec\":{\"lock\":false,\"pos\":{\"x\":-20.9563140869141,\"y\":1.7662525177002,\"z\":1.28138875961304},\"rot\":{\"x\":5.22264053870458E-06,\"y\":0.000915797194465995,\"z\":1.94051125390615E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"721582\":{\"lock\":true,\"pos\":{\"x\":1.49820005893707,\"y\":1.52009999752045,\"z\":11.5018997192383},\"rot\":{\"x\":0,\"y\":180.034103393555,\"z\":-9.99999901978299E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":9.49990463256836,\"y\":1.50651073455811,\"z\":17.9996700286865},\"rot\":{\"x\":-2.58781383308815E-05,\"y\":90.0210494995117,\"z\":-0.00140084023587406},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"735bb1\":{\"lock\":false,\"pos\":{\"x\":-30.3266048431396,\"y\":1.76698791980743,\"z\":4.8163104057312},\"rot\":{\"x\":0.000260689965216443,\"y\":0.0148748084902763,\"z\":-0.00118889997247607},\"tint\":{\"a\":0,\"b\":0.555448532104492,\"g\":0.677700459957123,\"r\":0}},\"75ffdc\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.50651121139526,\"z\":8},\"rot\":{\"x\":5.03482988278847E-05,\"y\":299.992492675781,\"z\":4.50463776360266E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7625af\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.52012026309967,\"z\":5.00001764297485},\"rot\":{\"x\":1.37394508783473E-05,\"y\":180.000457763672,\"z\":-6.59427678328939E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"775f4f\":{\"lock\":false,\"pos\":{\"x\":-1.50000035762787,\"y\":1.50649905204773,\"z\":8},\"rot\":{\"x\":-1.35889295052039E-05,\"y\":359.988189697266,\"z\":6.47167253191583E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"78d9f1\":{\"lock\":false,\"pos\":{\"x\":13.4999904632568,\"y\":1.5201233625412,\"z\":18},\"rot\":{\"x\":1.37208980959258E-05,\"y\":179.99853515625,\"z\":-6.59057550365105E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7dfaa2\":{\"lock\":false,\"pos\":{\"x\":-23.038013458252,\"y\":1.58021926879883,\"z\":5.47368431091309},\"rot\":{\"x\":-3.87257870215763E-07,\"y\":0.00679443683475256,\"z\":6.60671685182024E-06},\"tint\":{\"a\":1,\"b\":0,\"g\":0.366520881652832,\"r\":0.70588231086731}},\"7ef767\":{\"lock\":false,\"pos\":{\"x\":-33.5000152587891,\"y\":1.77885663509369,\"z\":10.499981880188},\"rot\":{\"x\":-5.00540454595466E-06,\"y\":180.002685546875,\"z\":5.0970172082998E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7f1031\":{\"lock\":false,\"pos\":{\"x\":12.4999666213989,\"y\":1.53707039356232,\"z\":-5.99983501434326},\"rot\":{\"x\":-6.58583958283998E-05,\"y\":90.0024871826172,\"z\":-1.36875632961164E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7f1793\":{\"lock\":false,\"pos\":{\"x\":-11,\"y\":1.50649333000183,\"z\":29.5},\"rot\":{\"x\":1.37969254865311E-05,\"y\":179.996383666992,\"z\":-6.59188808640465E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"800ce6\":{\"lock\":false,\"pos\":{\"x\":10,\"y\":1.50651228427887,\"z\":8},\"rot\":{\"x\":-2.13581097341375E-05,\"y\":150.001373291016,\"z\":-6.39605423202738E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"83358c\":{\"lock\":false,\"pos\":{\"x\":2.0000011920929,\"y\":1.50650310516357,\"z\":8},\"rot\":{\"x\":-3.70996895071585E-05,\"y\":134.996047973633,\"z\":-5.70869669900276E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"858c84\":{\"lock\":false,\"pos\":{\"x\":5.46199989318848,\"y\":1.52011227607727,\"z\":17.9915008544922},\"rot\":{\"x\":3.5079792723991E-05,\"y\":178.650054931641,\"z\":-0.000197071771253832},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8f58c9\":{\"lock\":true,\"pos\":{\"x\":14.5,\"y\":1.52009999752045,\"z\":11.478099822998},\"rot\":{\"x\":0,\"y\":180,\"z\":-9.99999974737875E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"91b616\":{\"lock\":false,\"pos\":{\"x\":5.49944591522217,\"y\":1.52011382579803,\"z\":17.9998760223389},\"rot\":{\"x\":1.77583933691494E-05,\"y\":180.007736206055,\"z\":-9.31126560317352E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"96951b\":{\"lock\":false,\"pos\":{\"x\":23.5003051757813,\"y\":1.52012932300568,\"z\":-5.50010251998901},\"rot\":{\"x\":1.36425651362515E-05,\"y\":179.995193481445,\"z\":179.999938964844},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"976182\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.47985994815826,\"z\":-4.99999952316284},\"rot\":{\"x\":-9.09464219489564E-08,\"y\":180.000061035156,\"z\":-2.7448749051473E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"9a72a0\":{\"lock\":false,\"pos\":{\"x\":10,\"y\":1.50651395320892,\"z\":14.9999990463257},\"rot\":{\"x\":4.52828062407207E-05,\"y\":210.011611938477,\"z\":-4.69783662992995E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a3d6eb\":{\"lock\":false,\"pos\":{\"x\":34.6251983642578,\"y\":1.5454158782959,\"z\":0.0881001353263855},\"rot\":{\"x\":0.000591002986766398,\"y\":-0.000111502013169229,\"z\":-0.00107025646138936},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"a56641\":{\"lock\":false,\"pos\":{\"x\":-34.5,\"y\":1.5802,\"z\":4.5},\"rot\":{\"x\":0,\"y\":0.0072,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0.366520881652832,\"r\":0.70588231086731}},\"a783c6\":{\"lock\":false,\"pos\":{\"x\":-23,\"y\":1.94723927974701,\"z\":5.99999809265137},\"rot\":{\"x\":4.01157885789871E-05,\"y\":359.974365234375,\"z\":-3.14395838358905E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"a8984f\":{\"lock\":false,\"pos\":{\"x\":-29.5,\"y\":1.5802,\"z\":4.5},\"rot\":{\"x\":0,\"y\":359.9889,\"z\":0},\"tint\":{\"a\":1,\"b\":0.0899989828467369,\"g\":0.23099872469902,\"r\":0.442998737096787}},\"aa0e7e\":{\"lock\":true,\"pos\":{\"x\":5.9981,\"y\":1.5054,\"z\":-5.5002},\"rot\":{\"x\":0.082,\"y\":180.0262,\"z\":0.0665},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"ab38db\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.52011275291443,\"z\":9.5},\"rot\":{\"x\":1.37357865241938E-05,\"y\":180.000122070313,\"z\":-6.57858690829016E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ae5d87\":{\"lock\":false,\"pos\":{\"x\":3.50000047683716,\"y\":1.01659023761749,\"z\":45},\"rot\":{\"x\":1.33673651703248E-07,\"y\":180.004913330078,\"z\":-0.000104457903944422},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"b303d8\":{\"lock\":false,\"pos\":{\"x\":30.4999008178711,\"y\":1.69062042236328,\"z\":-3},\"rot\":{\"x\":-0.000590869225561619,\"y\":180,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b53a81\":{\"lock\":false,\"pos\":{\"x\":-34.5000228881836,\"y\":1.83525228500366,\"z\":3.49997687339783},\"rot\":{\"x\":2.91155629383866E-06,\"y\":359.979766845703,\"z\":2.56190560321556E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"b5d0df\":{\"lock\":false,\"pos\":{\"x\":12.4999990463257,\"y\":1.54188430309296,\"z\":-5.99969339370728},\"rot\":{\"x\":-6.5895939769689E-05,\"y\":90.0068969726563,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b73478\":{\"lock\":false,\"pos\":{\"x\":23.500207901001,\"y\":1.52012932300568,\"z\":-5.5},\"rot\":{\"x\":1.37225279104314E-05,\"y\":180.000137329102,\"z\":-6.59052238916047E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"bbbd93\":{\"lock\":false,\"pos\":{\"x\":6.5,\"y\":1.50650835037231,\"z\":8},\"rot\":{\"x\":4.48046630481258E-05,\"y\":210.009811401367,\"z\":-4.89400954393204E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"bf3258\":{\"lock\":false,\"pos\":{\"x\":35,\"y\":1.58937966823578,\"z\":3},\"rot\":{\"x\":-0.000591089832596481,\"y\":179.999877929688,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"bf4741\":{\"lock\":false,\"pos\":{\"x\":8,\"y\":1.52011549472809,\"z\":11.5},\"rot\":{\"x\":1.38070308821625E-05,\"y\":180,\"z\":-6.58818025840446E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c29bad\":{\"lock\":false,\"pos\":{\"x\":-34.2787284851074,\"y\":1.76650249958038,\"z\":2.39896440505981},\"rot\":{\"x\":5.34694709131145E-06,\"y\":0.000312683609081432,\"z\":-4.69462861474312E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"c3e250\":{\"lock\":true,\"pos\":{\"x\":12,\"y\":1.52009999752045,\"z\":18},\"rot\":{\"x\":0,\"y\":180,\"z\":-9.99999974737875E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c455c3\":{\"lock\":false,\"pos\":{\"x\":6.10356569290161,\"y\":1.57010686397552,\"z\":17.9999046325684},\"rot\":{\"x\":2.51883266173536E-05,\"y\":180.013458251953,\"z\":-7.89343757787719E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c94836\":{\"lock\":false,\"pos\":{\"x\":23.500207901001,\"y\":1.52012932300568,\"z\":-5.49989604949951},\"rot\":{\"x\":1.36973667395068E-05,\"y\":179.997283935547,\"z\":179.999938964844},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c98e27\":{\"lock\":false,\"pos\":{\"x\":-21.8887042999268,\"y\":1.76655244827271,\"z\":2.5741970539093},\"rot\":{\"x\":4.91827131554601E-06,\"y\":-0.000206049633561634,\"z\":2.62699217046247E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"d716a1\":{\"lock\":false,\"pos\":{\"x\":5.49999094009399,\"y\":1.50650715827942,\"z\":7.99997091293335},\"rot\":{\"x\":-1.37280439957976E-05,\"y\":359.988616943359,\"z\":6.71357338433154E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d85d68\":{\"lock\":false,\"pos\":{\"x\":2.00000143051147,\"y\":1.5065039396286,\"z\":11.5},\"rot\":{\"x\":-6.58624776406214E-05,\"y\":89.9829025268555,\"z\":-1.35131513161468E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d9c370\":{\"lock\":false,\"pos\":{\"x\":2.00000166893005,\"y\":1.50650238990784,\"z\":5},\"rot\":{\"x\":-6.61104786559008E-05,\"y\":89.9963607788086,\"z\":-1.2984886780032E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"dcc30e\":{\"lock\":false,\"pos\":{\"x\":-28.203405380249,\"y\":1.76655244827271,\"z\":2.38939428329468},\"rot\":{\"x\":4.76336617794004E-06,\"y\":-1.08535286926781E-05,\"z\":-1.28530047049935E-07},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"dde1c5\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.50650668144226,\"z\":11},\"rot\":{\"x\":-6.5968262788374E-05,\"y\":90.0053024291992,\"z\":-1.43143188324757E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"dfd4ae\":{\"lock\":false,\"pos\":{\"x\":7.99999952316284,\"y\":1.01659023761749,\"z\":45},\"rot\":{\"x\":1.22929250778725E-07,\"y\":180.003051757813,\"z\":-0.000104086509963963},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e1f778\":{\"lock\":false,\"pos\":{\"x\":2.00000095367432,\"y\":1.50650548934937,\"z\":18},\"rot\":{\"x\":-6.58195931464434E-05,\"y\":89.9960861206055,\"z\":-1.34331239678431E-05},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e2afeb\":{\"lock\":true,\"pos\":{\"x\":11.5,\"y\":1.52009999752045,\"z\":4.5},\"rot\":{\"x\":0,\"y\":179.998596191406,\"z\":-9.99999974737875E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e2dd09\":{\"lock\":true,\"pos\":{\"x\":4.5,\"y\":1.52009999752045,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180,\"z\":-9.99999974737875E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e5b493\":{\"lock\":true,\"pos\":{\"x\":5.999,\"y\":1.5055,\"z\":-5.5001},\"rot\":{\"x\":0.0814,\"y\":180.0047,\"z\":0.0693},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e71a40\":{\"lock\":false,\"pos\":{\"x\":33.4974517822266,\"y\":1.47985982894897,\"z\":14.5000305175781},\"rot\":{\"x\":1.366050668139E-07,\"y\":180.009323120117,\"z\":5.72682779420575E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e9fb60\":{\"lock\":false,\"pos\":{\"x\":-34.5000038146973,\"y\":1.76525223255157,\"z\":4.49999475479126},\"rot\":{\"x\":-5.69253916182788E-06,\"y\":180.001174926758,\"z\":4.81025097087695E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"ec483e\":{\"lock\":false,\"pos\":{\"x\":5.39830160140991,\"y\":1.57008564472198,\"z\":19.442699432373},\"rot\":{\"x\":-0.000767409976106137,\"y\":178.625061035156,\"z\":-0.000316016055876389},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f00436\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.52012228965759,\"z\":-5.99983406066895},\"rot\":{\"x\":-6.5919455664698E-05,\"y\":89.9955215454102,\"z\":-1.36919588840101E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f47ca7\":{\"lock\":false,\"pos\":{\"x\":33.4995994567871,\"y\":1.47985982894897,\"z\":14.499400138855},\"rot\":{\"x\":-1.09422622074362E-08,\"y\":179.969100952148,\"z\":-2.81838463678241E-09},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"f6335d\":{\"lock\":false,\"pos\":{\"x\":-29.0000114440918,\"y\":1.77885663509369,\"z\":10.4999885559082},\"rot\":{\"x\":-5.11652569912258E-06,\"y\":180.002090454102,\"z\":1.38475130029292E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f93de1\":{\"lock\":false,\"pos\":{\"x\":3.5,\"y\":1.5019,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":180.0129,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"fa730d\":{\"lock\":false,\"pos\":{\"x\":5.48494338989258,\"y\":1.52011060714722,\"z\":4.96446084976196},\"rot\":{\"x\":1.82656822289573E-05,\"y\":180.522338867188,\"z\":-9.29395828279667E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fe8c8e\":{\"lock\":false,\"pos\":{\"x\":-22.9986267089844,\"y\":1.82124900817871,\"z\":5.99833822250366},\"rot\":{\"x\":-2.47664283961058E-05,\"y\":359.907836914063,\"z\":8.1551872426644E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"ff560b\":{\"lock\":false,\"pos\":{\"x\":5.50001001358032,\"y\":1.52009892463684,\"z\":3.00000309944153},\"rot\":{\"x\":0.000149908577441238,\"y\":179.999740600586,\"z\":-0.000880025734659284},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"2d24ae","Name":"Custom_Model_Bag","Transform":{"posX":12.5000038,"posY":0.9799975,"posZ":45.0000038,"rotX":-0.000003690523,"rotY":179.984009,"rotZ":0.00000273715546,"scaleX":1.20819664,"scaleY":0.823770463,"scaleZ":1.31803274},"Nickname":"III : Le Dévoreur du Dessous","Description":"La Nuit de la Zélatrice","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118401833419/71458A91294AB8D6130299D06BD006862A37CDC6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"0c739c\":{\"lock\":false,\"pos\":{\"x\":-26.5,\"y\":1.8055,\"z\":30.5},\"rot\":{\"x\":0,\"y\":180.0016,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1118ce\":{\"lock\":false,\"pos\":{\"x\":-28.5,\"y\":1.7789,\"z\":10.5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1768ba\":{\"lock\":false,\"pos\":{\"x\":-28.0065,\"y\":1.8353,\"z\":5.5049},\"rot\":{\"x\":0,\"y\":179.995,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"2eee61\":{\"lock\":true,\"pos\":{\"x\":4.5,\"y\":1.5201,\"z\":18},\"rot\":{\"x\":0,\"y\":180,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3c4c18\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.5044,\"z\":11},\"rot\":{\"x\":0.0049,\"y\":90.0053,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3d3516\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.6858,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"41e017\":{\"lock\":false,\"pos\":{\"x\":-29,\"y\":1.8055,\"z\":30.5},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4927be\":{\"lock\":false,\"pos\":{\"x\":12.501,\"y\":1.5364,\"z\":-6.0169},\"rot\":{\"x\":0.005,\"y\":90.0367,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"675f68\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.7789,\"z\":10.5},\"rot\":{\"x\":0,\"y\":180.001,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6a75e2\":{\"lock\":false,\"pos\":{\"x\":6.5,\"y\":1.5056,\"z\":15},\"rot\":{\"x\":0.0119,\"y\":150.0015,\"z\":-0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"721582\":{\"lock\":true,\"pos\":{\"x\":1.4982,\"y\":1.5201,\"z\":11.5019},\"rot\":{\"x\":0,\"y\":180.0341,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7cde26\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.7789,\"z\":10.5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7ef767\":{\"lock\":false,\"pos\":{\"x\":-33,\"y\":1.7789,\"z\":10.5},\"rot\":{\"x\":0,\"y\":180.0023,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7f1793\":{\"lock\":false,\"pos\":{\"x\":-11,\"y\":1.5098,\"z\":29.5},\"rot\":{\"x\":0.0109,\"y\":179.9966,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"800ce6\":{\"lock\":false,\"pos\":{\"x\":10,\"y\":1.5039,\"z\":8},\"rot\":{\"x\":0.0119,\"y\":150.0014,\"z\":-0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"879a80\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.536,\"z\":-6.0196},\"rot\":{\"x\":0.005,\"y\":90.0296,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8f58c9\":{\"lock\":true,\"pos\":{\"x\":14.5,\"y\":1.5201,\"z\":11.4781},\"rot\":{\"x\":0,\"y\":180,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"914d6a\":{\"lock\":false,\"pos\":{\"x\":8,\"y\":1.5183,\"z\":11},\"rot\":{\"x\":0.0109,\"y\":179.9999,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"96951b\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.5229},\"rot\":{\"x\":0.0109,\"y\":179.9688,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"982a6c\":{\"lock\":false,\"pos\":{\"x\":-28.4999885559082,\"y\":1.77890419960022,\"z\":26.5000133514404},\"rot\":{\"x\":-5.01962040289072E-06,\"y\":180.000015258789,\"z\":2.54455045478608E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9964d9\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.5847,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":179.9998,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9a72a0\":{\"lock\":false,\"pos\":{\"x\":10,\"y\":1.5053,\"z\":15},\"rot\":{\"x\":0.007,\"y\":210.0116,\"z\":0.0097},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"ac03c1\":{\"lock\":false,\"pos\":{\"x\":-31.5,\"y\":1.8055,\"z\":30.5},\"rot\":{\"x\":0,\"y\":180,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"afb657\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.54730975627899,\"z\":4.5},\"rot\":{\"x\":-3.76873732221839E-09,\"y\":180,\"z\":-0.000100028359156568},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b19c6e\":{\"lock\":false,\"pos\":{\"x\":12,\"y\":1.54730975627899,\"z\":18},\"rot\":{\"x\":-1.14284857133384E-08,\"y\":180,\"z\":-9.99969051918015E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b2f07e\":{\"lock\":false,\"pos\":{\"x\":-27.3812,\"y\":1.7663,\"z\":23.6945},\"rot\":{\"x\":0,\"y\":-0.0001,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"bbbd93\":{\"lock\":false,\"pos\":{\"x\":6.5,\"y\":1.5042,\"z\":8},\"rot\":{\"x\":0.007,\"y\":210.0098,\"z\":0.0097},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"c3e250\":{\"lock\":true,\"pos\":{\"x\":12,\"y\":1.5201,\"z\":18},\"rot\":{\"x\":0,\"y\":180,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c73640\":{\"lock\":false,\"pos\":{\"x\":-25.9999771118164,\"y\":1.77890419960022,\"z\":26.5000247955322},\"rot\":{\"x\":-5.08801531395875E-06,\"y\":180,\"z\":-1.55059368012189E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c98e27\":{\"lock\":false,\"pos\":{\"x\":-21.8884,\"y\":1.7666,\"z\":2.5742},\"rot\":{\"x\":0,\"y\":0,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"d0689f\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.54730975627899,\"z\":4.5},\"rot\":{\"x\":-1.29614941002387E-09,\"y\":180,\"z\":-9.99917829176411E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d1532d\":{\"lock\":false,\"pos\":{\"x\":-22,\"y\":1.8353,\"z\":5.5},\"rot\":{\"x\":0,\"y\":179.9981,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"d3d96a\":{\"lock\":false,\"pos\":{\"x\":-33,\"y\":1.7653,\"z\":5},\"rot\":{\"x\":0,\"y\":179.9958,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"dcc30e\":{\"lock\":false,\"pos\":{\"x\":-28.2032,\"y\":1.7666,\"z\":2.3893},\"rot\":{\"x\":0,\"y\":0.0001,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"dde1c5\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.505,\"z\":11},\"rot\":{\"x\":0.0049,\"y\":90.0053,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e2afeb\":{\"lock\":true,\"pos\":{\"x\":11.5,\"y\":1.5201,\"z\":4.5},\"rot\":{\"x\":0,\"y\":179.9986,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e2dd09\":{\"lock\":true,\"pos\":{\"x\":4.5,\"y\":1.5201,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f238c5\":{\"lock\":false,\"pos\":{\"x\":-24.0039,\"y\":1.8151,\"z\":10.5159},\"rot\":{\"x\":0,\"y\":180.0011,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f66f01\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.54730975627899,\"z\":18},\"rot\":{\"x\":2.10039630132997E-08,\"y\":180,\"z\":-0.000100007418950554},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"1118ce","Name":"Card","Transform":{"posX":-28.5000019,"posY":1.77890563,"posZ":10.4999981,"rotX":-0.00000492640447,"rotY":180.000015,"rotZ":2.106053e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"healthPerInv\": \"true\",\n  \"id\": \"01116\",\n  \"traits\": \"Humanoid. Monster. Ghoul. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":303404,"SidewaysCard":false,"CustomDeck":{"3034":{"FaceURL":"https://i.imgur.com/bd8pJXD.jpg","BackURL":"https://i.imgur.com/HM7vGhb.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":false,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1768ba","Name":"Custom_Model_Bag","Transform":{"posX":-28.0065041,"posY":1.83530128,"posZ":5.504896,"rotX":-0.00000523848075,"rotY":179.99501,"rotZ":1.609098e-8,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Agents des Grands Anciens","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/5077277234352555974/3DAC1EAF948BF7EAE623BD2339FD84277860D260/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"0c739c\":{\"lock\":false,\"pos\":{\"x\":-26.5,\"y\":1.8055,\"z\":30.5},\"rot\":{\"x\":0,\"y\":180.0016,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"41e017\":{\"lock\":false,\"pos\":{\"x\":-29,\"y\":1.8055,\"z\":30.5},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9964d9\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.5847,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":179.9998,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ac03c1\":{\"lock\":false,\"pos\":{\"x\":-31.5,\"y\":1.8055,\"z\":30.5},\"rot\":{\"x\":0,\"y\":180,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"0c739c","Name":"Deck","Transform":{"posX":-28.9998646,"posY":1.80548573,"posZ":30.4999371,"rotX":-0.00000508604262,"rotY":180.00116,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"SidewaysCard":false,"DeckIDs":[17412,17409,17413,17411],"CustomDeck":{"174":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"bb23f3","Name":"Card","Transform":{"posX":-28.9999943,"posY":1.88600647,"posZ":30.5000076,"rotX":-0.00146276841,"rotY":180.001633,"rotZ":180.001358,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"id\": \"01179\",\n  \"traits\": \"Monster. Dark Young.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17412,"SidewaysCard":false,"CustomDeck":{"174":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0e3a1d","Name":"Card","Transform":{"posX":-28.9999943,"posY":4.91337061,"posZ":30.5000076,"rotX":-0.000004870453,"rotY":180.001633,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01180\",\n  \"traits\": \"Humanoid. Monster.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17409,"SidewaysCard":false,"CustomDeck":{"174":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"987e6a","Name":"Card","Transform":{"posX":-28.9999943,"posY":5.06088972,"posZ":30.5000076,"rotX":-0.000004874438,"rotY":180.001633,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01180\",\n  \"traits\": \"Humanoid. Monster.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17413,"SidewaysCard":false,"CustomDeck":{"174":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b7c5b8","Name":"Card","Transform":{"posX":-28.9999943,"posY":4.86088943,"posZ":30.5000076,"rotX":-0.000004874438,"rotY":180.001633,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01180\",\n  \"traits\": \"Humanoid. Monster.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17411,"SidewaysCard":false,"CustomDeck":{"174":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"41e017","Name":"Deck","Transform":{"posX":30.4996,"posY":1.58471155,"posZ":-2.999889,"rotX":-0.0005909617,"rotY":179.99968,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"SidewaysCard":false,"DeckIDs":[15810,15806,15805,15807],"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"8f8689","Name":"Card","Transform":{"posX":30.5000019,"posY":1.66523135,"posZ":-2.99999881,"rotX":0.00132937555,"rotY":180.0001,"rotZ":180.0028,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01177\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15810,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d64d65","Name":"Card","Transform":{"posX":30.5,"posY":4.69259644,"posZ":-2.99999976,"rotX":-0.000590639655,"rotY":180.0001,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01178\",\n  \"traits\": \"Pact.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15806,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1aaf3a","Name":"Card","Transform":{"posX":30.5,"posY":4.840115,"posZ":-2.99999976,"rotX":-0.00059102563,"rotY":180.0001,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01178\",\n  \"traits\": \"Pact.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15805,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8a6a1d","Name":"Card","Transform":{"posX":30.5,"posY":4.64011526,"posZ":-2.99999976,"rotX":-0.00059102563,"rotY":180.0001,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01177\",\n  \"traits\": \"Monster. Yithian.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15807,"SidewaysCard":false,"CustomDeck":{"158":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"9964d9","Name":"Deck","Transform":{"posX":-26.5000324,"posY":1.80548584,"posZ":30.5001221,"rotX":-0.00000481545658,"rotY":180.000336,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"SidewaysCard":false,"DeckIDs":[16417,16415,16414,16416],"CustomDeck":{"164":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"1519bf","Name":"Card","Transform":{"posX":-26.4999943,"posY":1.88600659,"posZ":30.5000076,"rotX":0.00189316261,"rotY":179.999786,"rotZ":180.001724,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01175\",\n  \"traits\": \"Monster. Byakhee.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16417,"SidewaysCard":false,"CustomDeck":{"164":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b8af25","Name":"Card","Transform":{"posX":-26.4999943,"posY":5.18069172,"posZ":30.5000076,"rotX":-0.00000517092076,"rotY":179.999786,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01176\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16415,"SidewaysCard":false,"CustomDeck":{"164":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2b52a3","Name":"Card","Transform":{"posX":-26.4999943,"posY":5.06088972,"posZ":30.5000076,"rotX":-0.000005146022,"rotY":179.999786,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01176\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16414,"SidewaysCard":false,"CustomDeck":{"164":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3f5eeb","Name":"Card","Transform":{"posX":-26.4999943,"posY":4.86088943,"posZ":30.5000076,"rotX":-0.000005146022,"rotY":179.999786,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01175\",\n  \"traits\": \"Monster. Byakhee.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16416,"SidewaysCard":false,"CustomDeck":{"164":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"ac03c1","Name":"Deck","Transform":{"posX":-31.499794,"posY":1.80548584,"posZ":30.5001354,"rotX":-0.000005110198,"rotY":180.001434,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"SidewaysCard":false,"DeckIDs":[16829,16832,16826,16828],"CustomDeck":{"168":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"732f8c","Name":"Card","Transform":{"posX":-31.4999924,"posY":1.88600659,"posZ":30.5000057,"rotX":0.00189336087,"rotY":180.000031,"rotZ":180.001724,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01181\",\n  \"traits\": \"Humanoid. Monster. Deep One.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16829,"SidewaysCard":false,"CustomDeck":{"168":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"26f500","Name":"Card","Transform":{"posX":-31.4999924,"posY":5.26088953,"posZ":30.5000057,"rotX":-0.0000047136773,"rotY":180.000031,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01182\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16832,"SidewaysCard":false,"CustomDeck":{"168":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1bb731","Name":"Card","Transform":{"posX":-31.4999924,"posY":5.06088972,"posZ":30.5000057,"rotX":-0.0000047136773,"rotY":180.000031,"rotZ":180,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01182\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16826,"SidewaysCard":false,"CustomDeck":{"168":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e6a332","Name":"Card","Transform":{"posX":-31.4999924,"posY":1.87234712,"posZ":30.5000057,"rotX":0.0007016733,"rotY":180.000031,"rotZ":180.000641,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01181\",\n  \"traits\": \"Humanoid. Monster. Deep One.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16828,"SidewaysCard":false,"CustomDeck":{"168":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}]},{"GUID":"2eee61","Name":"CardCustom","Transform":{"posX":4.5,"posY":1.5201,"posZ":18,"rotX":0,"rotY":180,"rotZ":-0.0001,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3c4c18","Name":"Custom_Tile","Transform":{"posX":11.499999,"posY":1.50437748,"posZ":11,"rotX":0.00494887074,"rotY":90.0053,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"7d6731","Name":"Custom_Tile","Transform":{"posX":10.5,"posY":1.50651288,"posZ":8,"rotX":-0.00006605493,"rotY":89.991394,"rotZ":-0.000013733883,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"3d3516","Name":"Deck","Transform":{"posX":30.5,"posY":1.68580627,"posZ":-3,"rotX":-0.000590977,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[15702,15703,15704,18720,18720,18719,18718,18721,18717,17725,18432,18433,18500,18437,18435,18434,18436,16518,16524,16521,16520,16519,16522,16523,17727],"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"177":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"1c3c50","Name":"Card","Transform":{"posX":35,"posY":9.003587,"posZ":1.99999976,"rotX":-0.000590846466,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15702,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"67cfd5","Name":"Card","Transform":{"posX":35,"posY":9.141073,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15703,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7b9eb5","Name":"Card","Transform":{"posX":35,"posY":8.941073,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15704,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3da314","Name":"Card","Transform":{"posX":35,"posY":8.741074,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18720,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"033ad3","Name":"Card","Transform":{"posX":35,"posY":8.541074,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18720,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8a91f9","Name":"Card","Transform":{"posX":35,"posY":8.341073,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18719,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"089a5c","Name":"Card","Transform":{"posX":35,"posY":8.141073,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01170\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18718,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"898692","Name":"Card","Transform":{"posX":35,"posY":7.94107342,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18721,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7db7c9","Name":"Card","Transform":{"posX":35,"posY":7.74107361,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18717,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ba1147","Name":"Card","Transform":{"posX":35,"posY":5.661513,"posZ":1.9999994,"rotX":-0.000590059441,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01158\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17725,"SidewaysCard":false,"CustomDeck":{"177":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e9a446","Name":"Card","Transform":{"posX":35,"posY":7.203587,"posZ":1.99999976,"rotX":-0.0005907338,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18432,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"07ff5e","Name":"Card","Transform":{"posX":35,"posY":7.341073,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18433,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0783ce","Name":"Card","Transform":{"posX":35,"posY":7.141073,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18500,"SidewaysCard":false,"CustomDeck":{"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"68be1e","Name":"Card","Transform":{"posX":35,"posY":6.94107437,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18437,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5e2ae4","Name":"Card","Transform":{"posX":35,"posY":6.74107456,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18435,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"365129","Name":"Card","Transform":{"posX":35,"posY":6.54107428,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18434,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2e3a70","Name":"Card","Transform":{"posX":35,"posY":6.34107447,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18436,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1eb691","Name":"Card","Transform":{"posX":35,"posY":6.141074,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01162\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16518,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"bf2930","Name":"Card","Transform":{"posX":35,"posY":5.94107437,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01162\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16524,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7db61d","Name":"Card","Transform":{"posX":35,"posY":5.74107456,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01162\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16521,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ef3d34","Name":"Card","Transform":{"posX":35,"posY":5.54107428,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01161\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16520,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0feb76","Name":"Card","Transform":{"posX":35,"posY":5.003588,"posZ":1.99999976,"rotX":-0.0005907127,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01160\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16519,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"199ce8","Name":"Card","Transform":{"posX":35,"posY":5.141074,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01160\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16522,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5459e3","Name":"Card","Transform":{"posX":35,"posY":4.94107437,"posZ":1.99999952,"rotX":-0.0005907301,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01160\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16523,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ea3a3c","Name":"Card","Transform":{"posX":35,"posY":1.64044833,"posZ":2.00000024,"rotX":0.001309179,"rotY":180,"rotZ":180.002823,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01158\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17727,"SidewaysCard":false,"CustomDeck":{"177":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"4927be","Name":"Deck","Transform":{"posX":12.5009985,"posY":1.53642869,"posZ":-6.01689672,"rotX":0.004955067,"rotY":90.03672,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[1134208,1134207,1134206],"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"cc6133","Name":"Card","Transform":{"posX":12.5009995,"posY":4.79183245,"posZ":-6.016901,"rotX":0.004954963,"rotY":90.0367661,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 5,\n  \"id\": \"01145\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134208,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e64101","Name":"Card","Transform":{"posX":12.5009995,"posY":4.59183264,"posZ":-6.016901,"rotX":0.004954963,"rotY":90.0367661,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 5,\n  \"id\": \"01144\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134207,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ec7072","Name":"Card","Transform":{"posX":12.5010061,"posY":1.61312556,"posZ":-6.01691628,"rotX":0.00565109,"rotY":90.0367661,"rotZ":359.986481,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 4,\n  \"id\": \"01143\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134206,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"6a75e2","Name":"Custom_Tile","Transform":{"posX":6.5,"posY":1.50556958,"posZ":15,"rotX":0.011906703,"rotY":150.0015,"rotZ":-0.00115867215,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"112f6f","Name":"Custom_Tile","Transform":{"posX":5.5,"posY":1.506507,"posZ":8,"rotX":-0.0000660457154,"rotY":90.0085,"rotZ":-0.00001386095,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"721582","Name":"CardCustom","Transform":{"posX":1.4982,"posY":1.5201,"posZ":11.5019,"rotX":0,"rotY":180.0341,"rotZ":-0.00009999999,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7cde26","Name":"Card","Transform":{"posX":-19.9999981,"posY":1.77890563,"posZ":10.500001,"rotX":-0.000005083504,"rotY":180.000015,"rotZ":1.81089632e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01156\",\n  \"locationBack\": {\n    \"connections\": \"Tilde\",\n    \"icons\": \"Plus\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Tilde\",\n    \"icons\": \"Plus\"\n  },\n  \"traits\": \"Cave.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134302,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7ef767","Name":"Card","Transform":{"posX":-33.0000038,"posY":1.77890563,"posZ":10.4999962,"rotX":-0.000004949721,"rotY":180.00235,"rotZ":-2.65294631e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 6,\n  \"id\": \"01157\",\n  \"traits\": \"Ancient One. Elite.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14609,"SidewaysCard":false,"CustomDeck":{"146":{"FaceURL":"https://i.imgur.com/VXHLtJq.jpg","BackURL":"https://i.imgur.com/OtWDh7r.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7f1793","Name":"Custom_Tile","Transform":{"posX":-11.000001,"posY":1.50983739,"posZ":29.5,"rotX":0.0108918352,"rotY":179.996613,"rotZ":0.004947524,"scaleX":2.990664,"scaleY":1,"scaleZ":2.990664},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656149661/77558A52EABCD27A042728FD5503589709D83DAA/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656150312/5A2A9AF4DC26B1987FC0964F2AC01C6E9FA15728/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":0,"Thickness":0.2,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"800ce6","Name":"Custom_Tile","Transform":{"posX":10,"posY":1.50393665,"posZ":8,"rotX":0.01190655,"rotY":150.0014,"rotZ":-0.00115829986,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"112f6f","Name":"Custom_Tile","Transform":{"posX":5.5,"posY":1.506507,"posZ":8,"rotX":-0.0000660457154,"rotY":90.0085,"rotZ":-0.00001386095,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"879a80","Name":"Deck","Transform":{"posX":17.5009975,"posY":1.53599644,"posZ":-6.019596,"rotX":0.004953639,"rotY":90.02963,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[1134211,1134210,1134209],"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"71f2c2","Name":"Card","Transform":{"posX":17.5009975,"posY":4.7914,"posZ":-6.01959753,"rotX":0.00495363725,"rotY":90.02963,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01148\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134211,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"63c376","Name":"Card","Transform":{"posX":17.5009975,"posY":4.5914,"posZ":-6.01959753,"rotX":0.00495363725,"rotY":90.02963,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01147\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134210,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"221680","Name":"Card","Transform":{"posX":17.5010052,"posY":1.61264217,"posZ":-6.019613,"rotX":0.007845472,"rotY":90.02963,"rotZ":359.985657,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 3,\n  \"cycle\": \"Standalone\",\n  \"id\": \"01146\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134209,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"8f58c9","Name":"CardCustom","Transform":{"posX":14.5,"posY":1.5201,"posZ":11.4781,"rotX":0,"rotY":180,"rotZ":-0.0001,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"914d6a","Name":"Card","Transform":{"posX":8,"posY":1.51828444,"posZ":11,"rotX":0.0108914822,"rotY":179.9999,"rotZ":0.00494819134,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01149\",\n  \"locationBack\": {\n    \"connections\": \"Square|Plus|ArkhamWoods\",\n    \"icons\": \"Tilde\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Square|Plus|ArkhamWoods\",\n    \"icons\": \"Tilde\"\n  },\n  \"traits\": \"Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134301,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"96951b","Name":"Card","Transform":{"posX":23.5013,"posY":1.51380479,"posZ":-5.522901,"rotX":0.0108942231,"rotY":179.9688,"rotZ":180.004944,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14600,"SidewaysCard":false,"CustomDeck":{"146":{"FaceURL":"https://i.imgur.com/VXHLtJq.jpg","BackURL":"https://i.imgur.com/OtWDh7r.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"9a72a0","Name":"Custom_Tile","Transform":{"posX":10,"posY":1.50526738,"posZ":15,"rotX":0.006956544,"rotY":210.0116,"rotZ":0.009737236,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"112f6f","Name":"Custom_Tile","Transform":{"posX":5.5,"posY":1.506507,"posZ":8,"rotX":-0.0000660457154,"rotY":90.0085,"rotZ":-0.00001386095,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"b2f07e","Name":"Custom_Model","Transform":{"posX":-27.3811989,"posY":1.76629961,"posZ":23.6945019,"rotX":0.00000524395864,"rotY":-0.000091783455,"rotZ":7.756418e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Retirés de la partie\"}","XmlUI":""},{"GUID":"bbbd93","Name":"Custom_Tile","Transform":{"posX":6.5,"posY":1.504239,"posZ":8,"rotX":0.00695679663,"rotY":210.009781,"rotZ":0.00973724853,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"112f6f","Name":"Custom_Tile","Transform":{"posX":5.5,"posY":1.506507,"posZ":8,"rotX":-0.0000660457154,"rotY":90.0085,"rotZ":-0.00001386095,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"c3e250","Name":"CardCustom","Transform":{"posX":12,"posY":1.5201,"posZ":18,"rotX":0,"rotY":180,"rotZ":-0.0001,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c98e27","Name":"Custom_Model","Transform":{"posX":-21.8884029,"posY":1.76660144,"posZ":2.57419729,"rotX":0.0000051525285,"rotY":0.0000463851575,"rotZ":3.041735e-7,"scaleX":1.29999971,"scaleY":1.29999971,"scaleZ":1.29999971},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Mise en place des lieux\"}","XmlUI":""},{"GUID":"d1532d","Name":"Custom_Model_Bag","Transform":{"posX":-22.0000019,"posY":1.83530128,"posZ":5.49999857,"rotX":-0.00000486127828,"rotY":179.998123,"rotZ":2.66368744e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Mise en place bois d'arkham","Description":"merci à Chr1Z pour le script","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.614982545,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1936013662298221191/EC85795E33EC43FD82F9617B47C13D0CBE057FB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"982a6c\":{\"lock\":false,\"pos\":{\"x\":-28.4999885559082,\"y\":1.77890419960022,\"z\":26.5000133514404},\"rot\":{\"x\":-5.01962040289072E-06,\"y\":180.000015258789,\"z\":2.54455045478608E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"afb657\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.54730975627899,\"z\":4.5},\"rot\":{\"x\":-3.76873732221839E-09,\"y\":180,\"z\":-0.000100028359156568},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b19c6e\":{\"lock\":false,\"pos\":{\"x\":12,\"y\":1.54730975627899,\"z\":18},\"rot\":{\"x\":-1.14284857133384E-08,\"y\":180,\"z\":-9.99969051918015E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c73640\":{\"lock\":false,\"pos\":{\"x\":-25.9999771118164,\"y\":1.77890419960022,\"z\":26.5000247955322},\"rot\":{\"x\":-5.08801531395875E-06,\"y\":180,\"z\":-1.55059368012189E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d0689f\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.54730975627899,\"z\":4.5},\"rot\":{\"x\":-1.29614941002387E-09,\"y\":180,\"z\":-9.99917829176411E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f66f01\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.54730975627899,\"z\":18},\"rot\":{\"x\":2.10039630132997E-08,\"y\":180,\"z\":-0.000100007418950554},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"982a6c","Name":"Card","Transform":{"posX":-25.9999676,"posY":1.7789042,"posZ":26.5000362,"rotX":-0.00000516611635,"rotY":180.000031,"rotZ":1.61106854e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01152\",\n  \"locationBack\": {\n    \"connections\": \"Tilde|Triangle|Tee\",\n    \"icons\": \"Diamond|ArkhamWoods\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Tilde\",\n    \"icons\": \"Square|ArkhamWoods\"\n  },\n  \"traits\": \"Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134307,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"afb657","Name":"Card","Transform":{"posX":4.5,"posY":1.54730976,"posZ":4.5,"rotX":-4.550096e-9,"rotY":180,"rotZ":-0.000100006771,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01154\",\n  \"locationBack\": {\n    \"connections\": \"Tilde|Tee|Crescent\",\n    \"icons\": \"SlantedEquals|ArkhamWoods\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Tilde\",\n    \"icons\": \"Square|ArkhamWoods\"\n  },\n  \"traits\": \"Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134303,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b19c6e","Name":"Card","Transform":{"posX":12,"posY":1.54730976,"posZ":18,"rotX":8.668864e-9,"rotY":180,"rotZ":-0.00009999568,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01153\",\n  \"locationBack\": {\n    \"connections\": \"Tilde|Crescent|Triangle\",\n    \"icons\": \"Hourglass|ArkhamWoods\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Tilde\",\n    \"icons\": \"Square|ArkhamWoods\"\n  },\n  \"traits\": \"Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134306,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c73640","Name":"Card","Transform":{"posX":11.5,"posY":1.54730976,"posZ":4.5,"rotX":1.61216285e-8,"rotY":180,"rotZ":-0.000100031211,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01150\",\n  \"locationBack\": {\n    \"connections\": \"Tilde|Hourglass|Diamond\",\n    \"icons\": \"Triangle|ArkhamWoods\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Tilde\",\n    \"icons\": \"Square|ArkhamWoods\"\n  },\n  \"traits\": \"Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134312,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d0689f","Name":"Card","Transform":{"posX":-28.499979,"posY":1.7789042,"posZ":26.500021,"rotX":-0.000004941113,"rotY":180.000061,"rotZ":-1.228896e-9,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01155\",\n  \"locationBack\": {\n    \"connections\": \"Tilde|SlantedEquals|Hourglass\",\n    \"icons\": \"Crescent|ArkhamWoods\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Tilde\",\n    \"icons\": \"Square|ArkhamWoods\"\n  },\n  \"traits\": \"Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134305,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f66f01","Name":"Card","Transform":{"posX":4.5,"posY":1.54730976,"posZ":18,"rotX":-1.09828513e-9,"rotY":180,"rotZ":-0.00009999847,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01151\",\n  \"locationBack\": {\n    \"connections\": \"Tilde|Diamond|SlantedEquals\",\n    \"icons\": \"Tee|ArkhamWoods\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Tilde\",\n    \"icons\": \"Square|ArkhamWoods\"\n  },\n  \"traits\": \"Woods.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134304,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"d3d96a","Name":"Custom_Tile","Transform":{"posX":-33.0000038,"posY":1.76530123,"posZ":4.999996,"rotX":-0.00000504688069,"rotY":179.9958,"rotZ":4.84443454e-8,"scaleX":0.81,"scaleY":1,"scaleZ":0.81},"Nickname":"","Description":"","GMNotes":"elderthing","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/ttnspKt.png","ImageSecondaryURL":"","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":2,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"dcc30e","Name":"Custom_Model","Transform":{"posX":-28.2032032,"posY":1.76660144,"posZ":2.389295,"rotX":0.000004970451,"rotY":0.0000443933059,"rotZ":8.141032e-8,"scaleX":1.29999971,"scaleY":1.29999971,"scaleZ":1.29999971},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Decks Agents\\ndes Grands Anciens\"}","XmlUI":""},{"GUID":"dde1c5","Name":"Custom_Tile","Transform":{"posX":4.5,"posY":1.504982,"posZ":11,"rotX":0.004948886,"rotY":90.0053,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"7d6731","Name":"Custom_Tile","Transform":{"posX":10.5,"posY":1.50651288,"posZ":8,"rotX":-0.00006605493,"rotY":89.991394,"rotZ":-0.000013733883,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"e2afeb","Name":"CardCustom","Transform":{"posX":11.5,"posY":1.5201,"posZ":4.5,"rotX":0,"rotY":179.9986,"rotZ":-0.0001,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e2dd09","Name":"CardCustom","Transform":{"posX":4.5,"posY":1.5201,"posZ":4.5,"rotX":0,"rotY":180,"rotZ":-0.0001,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":true,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1106400,"SidewaysCard":false,"CustomDeck":{"11064":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","BackURL":"http://cloud-3.steamusercontent.com/ugc/1874088192656181477/79874E6695B40674EB042AE509B14E016AC3DB57/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"f238c5","Name":"Deck","Transform":{"posX":-24.0039,"posY":1.81511557,"posZ":10.5158987,"rotX":-0.00000509945448,"rotY":180.001114,"rotZ":-4.46112161e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[1134406,1134403,1134404,1134405,1134402,1134400],"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"6a003b","Name":"Card","Transform":{"posX":-24.0039,"posY":4.870519,"posZ":10.5158958,"rotX":-0.00000522386972,"rotY":180.001129,"rotZ":4.75357865e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01140\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134406,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cf842a","Name":"Card","Transform":{"posX":-24.0039,"posY":5.07051945,"posZ":10.5158958,"rotX":-0.00000522386972,"rotY":180.001129,"rotZ":4.75357865e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01139\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134403,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"51bc8b","Name":"Card","Transform":{"posX":-24.0039,"posY":5.187047,"posZ":10.5158958,"rotX":0.000211902559,"rotY":180.001129,"rotZ":-0.000119034084,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01141\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134404,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"71b11d","Name":"Card","Transform":{"posX":-24.0039,"posY":5.470519,"posZ":10.5158958,"rotX":-0.00000522386972,"rotY":180.001129,"rotZ":4.75357865e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01137\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134405,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"fd8721","Name":"Card","Transform":{"posX":-24.0039,"posY":5.67051935,"posZ":10.5158958,"rotX":-0.00000522386972,"rotY":180.001129,"rotZ":4.75357865e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01138\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134402,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"456d65","Name":"Card","Transform":{"posX":-24.0039,"posY":1.903311,"posZ":10.5158958,"rotX":0.00303023471,"rotY":180.001129,"rotZ":-0.00361946574,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 6,\n  \"health\": 4,\n  \"id\": \"01121b\",\n  \"traits\": \"Humanoïde. Cultiste. Élite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134400,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}]},{"GUID":"976182","Name":"Custom_PDF","Transform":{"posX":-20.5,"posY":1.47986,"posZ":-4.99999952,"rotX":-1.75876266e-7,"rotY":180.000061,"rotZ":-1.99980192e-7,"scaleX":2.11755562,"scaleY":1,"scaleZ":2.11755562},"Nickname":"La nuit de la Zélatrice","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomPDF":{"PDFUrl":"http://cloud-3.steamusercontent.com/ugc/1936013382993000503/979F1604C73735397920D74C2E70D4B7AE67CEF0/","PDFPassword":"","PDFPage":0,"PDFPageOffset":0},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ae5d87","Name":"Custom_Model_Bag","Transform":{"posX":3.50000525,"posY":0.9799975,"posZ":45.0000038,"rotX":-0.00000362652281,"rotY":180.0049,"rotZ":0.0000022557374,"scaleX":1.20819664,"scaleY":0.823770463,"scaleZ":1.31803274},"Nickname":"I : Le Rassemblement","Description":"La Nuit de la Zélatrice","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118401831969/B2DD7BD25E0965ED4983C5435687D6479033ED15/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"05d8ce\":{\"lock\":false,\"pos\":{\"x\":-28.5,\"y\":1.7789,\"z\":14.5},\"rot\":{\"x\":0,\"y\":179.9988,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1118ce\":{\"lock\":false,\"pos\":{\"x\":-33.0003,\"y\":1.7789,\"z\":5.9998},\"rot\":{\"x\":0,\"y\":180.0011,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2571a9\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.7789,\"z\":14.5},\"rot\":{\"x\":0,\"y\":179.9988,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"309079\":{\"lock\":false,\"pos\":{\"x\":-29,\"y\":1.8353,\"z\":6},\"rot\":{\"x\":0,\"y\":179.9888,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"325f06\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.536,\"z\":-6.0196},\"rot\":{\"x\":0.005,\"y\":90.0326,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"415af7\":{\"lock\":false,\"pos\":{\"x\":-23.5,\"y\":1.7789,\"z\":14.5},\"rot\":{\"x\":0,\"y\":180.0009,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6ed02b\":{\"lock\":false,\"pos\":{\"x\":-22.4597,\"y\":1.7667,\"z\":7.848},\"rot\":{\"x\":0,\"y\":0.0003,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":-32,\"y\":1.7653,\"z\":14.5},\"rot\":{\"x\":0,\"y\":359.9881,\"z\":0},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"8d1418\":{\"lock\":false,\"pos\":{\"x\":-31,\"y\":1.7653,\"z\":14.5},\"rot\":{\"x\":0,\"y\":180.017,\"z\":0},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a195b9\":{\"lock\":false,\"pos\":{\"x\":-22.5,\"y\":1.8353,\"z\":6},\"rot\":{\"x\":0,\"y\":179.9872,\"z\":0},\"tint\":{\"a\":1,\"b\":0.358120113611221,\"g\":0.752613186836243,\"r\":0}},\"ab38db\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5186,\"z\":11.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b017b6\":{\"lock\":false,\"pos\":{\"x\":12.501,\"y\":1.5364,\"z\":-6.0168},\"rot\":{\"x\":0.005,\"y\":90.0364,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b303d8\":{\"lock\":false,\"pos\":{\"x\":30.4999,\"y\":1.6906,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b33a26\":{\"lock\":false,\"pos\":{\"x\":-33,\"y\":1.7653,\"z\":14.5},\"rot\":{\"x\":0,\"y\":179.9975,\"z\":0},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"bce4db\":{\"lock\":false,\"pos\":{\"x\":-21,\"y\":1.7789,\"z\":14.5},\"rot\":{\"x\":0,\"y\":180.0003,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c94836\":{\"lock\":false,\"pos\":{\"x\":23.5002,\"y\":1.5138,\"z\":-5.4999},\"rot\":{\"x\":0.0109,\"y\":179.9974,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"20701b","Name":"Custom_Model_Bag","Transform":{"posX":3,"posY":1.88230073,"posZ":45,"rotX":0.0000452306849,"rotY":179.996765,"rotZ":-0.0002801595,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Réinitialisation","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0.7526132,"b":0.358120263},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"Number":0,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Déplacer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1200,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n  --  self.createButton({\r\n  --      label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n    --    position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n    --    font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  --  })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n","LuaScriptState":"{\"ml\":{\"ab38db\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5186,\"z\":11.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":""},{"GUID":"05d8ce","Name":"Card","Transform":{"posX":-28.5000019,"posY":1.77890527,"posZ":14.499999,"rotX":-0.000005143537,"rotY":179.99881,"rotZ":1.21421976e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01112\",\n  \"locationBack\": {\n    \"connections\": \"Triangle|Plus|Diamond\",\n    \"icons\": \"Square\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Triangle|Plus|Diamond\",\n    \"icons\": \"Square\"\n  },\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":303402,"SidewaysCard":false,"CustomDeck":{"3034":{"FaceURL":"https://i.imgur.com/bd8pJXD.jpg","BackURL":"https://i.imgur.com/HM7vGhb.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1118ce","Name":"Card","Transform":{"posX":-33.00031,"posY":1.778906,"posZ":5.999796,"rotX":-0.00000476180639,"rotY":180.00116,"rotZ":-8.718301e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"healthPerInv\": \"true\",\n  \"id\": \"01116\",\n  \"traits\": \"Humanoid. Monster. Ghoul. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":303404,"SidewaysCard":false,"CustomDeck":{"3034":{"FaceURL":"https://i.imgur.com/bd8pJXD.jpg","BackURL":"https://i.imgur.com/HM7vGhb.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2571a9","Name":"Card","Transform":{"posX":-26,"posY":1.77890527,"posZ":14.5,"rotX":-0.000004998623,"rotY":179.998825,"rotZ":-1.10051106e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01113\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Triangle\"\n  },\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":303405,"SidewaysCard":false,"CustomDeck":{"3034":{"FaceURL":"https://i.imgur.com/bd8pJXD.jpg","BackURL":"https://i.imgur.com/HM7vGhb.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"309079","Name":"Custom_Model_Bag","Transform":{"posX":-29.0000019,"posY":1.835301,"posZ":5.99999762,"rotX":-0.000004933431,"rotY":179.988785,"rotZ":5.46615233e-8,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Soutiens/faiblesses d'histoire","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/5077277234347423622/F89B4508C6E2782780C2B5593FB68379E0FB2DB6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"","LuaScriptState":"{\"ml\":[]}","XmlUI":"","ContainedObjects":[{"GUID":"1064a9","Name":"Card","Transform":{"posX":-29,"posY":1.93748844,"posZ":5.5,"rotX":0.00309317186,"rotY":180.000031,"rotZ":0.0009075573,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Lita Chantler","Description":"","GMNotes":"{\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01117\",\n  \"sanity\": 3,\n  \"traits\": \"Ally.\",\n  \"type\": \"Asset\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":13001,"SidewaysCard":false,"CustomDeck":{"130":{"FaceURL":"https://i.imgur.com/FZoFgHV.jpg","BackURL":"https://i.imgur.com/4Wv3z37.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"325f06","Name":"Deck","Transform":{"posX":17.5009975,"posY":1.53599644,"posZ":-6.019597,"rotX":0.00495418161,"rotY":90.03263,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[1134205,1134204,1134203],"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"cda9ce","Name":"Card","Transform":{"posX":17.501,"posY":4.7914,"posZ":-6.01959753,"rotX":0.00495439,"rotY":90.03262,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01110\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134205,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0cf6ad","Name":"Card","Transform":{"posX":17.501,"posY":4.5914,"posZ":-6.01959753,"rotX":0.00495439,"rotY":90.03262,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 3,\n  \"cycle\": \"Standalone\",\n  \"id\": \"01109\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134204,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c0ada8","Name":"Card","Transform":{"posX":17.5010071,"posY":1.612642,"posZ":-6.019613,"rotX":0.007849092,"rotY":90.03262,"rotZ":359.985657,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"clueThresholdPerInvestigator\": 2,\n  \"cycle\": \"Standalone\",\n  \"id\": \"01108\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134203,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"415af7","Name":"Card","Transform":{"posX":-23.5,"posY":1.77890527,"posZ":14.500001,"rotX":-0.000004876049,"rotY":180.000885,"rotZ":-1.424821e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01114\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Plus\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Plus\"\n  },\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":303407,"SidewaysCard":false,"CustomDeck":{"3034":{"FaceURL":"https://i.imgur.com/bd8pJXD.jpg","BackURL":"https://i.imgur.com/HM7vGhb.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6ed02b","Name":"Custom_Model","Transform":{"posX":-22.4597,"posY":1.76665092,"posZ":7.84799862,"rotX":0.00000511245662,"rotY":0.000199576651,"rotZ":-2.049352e-7,"scaleX":1.34999979,"scaleY":1.34999979,"scaleZ":1.34999979},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":250,\"text\":\"Mise en place Acte 2\"}","XmlUI":""},{"GUID":"7234af","Name":"Custom_Tile","Transform":{"posX":-32,"posY":1.76530063,"posZ":14.4999971,"rotX":0.00000511125472,"rotY":359.988037,"rotZ":8.60515144e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"8d1418","Name":"Custom_Tile","Transform":{"posX":-31.0000019,"posY":1.76530063,"posZ":14.4999981,"rotX":-0.00000515241,"rotY":180.017029,"rotZ":-8.5923233e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"a195b9","Name":"Custom_Model_Bag","Transform":{"posX":-22.5000019,"posY":1.835301,"posZ":5.999998,"rotX":-0.00000579777225,"rotY":179.987259,"rotZ":4.11835771e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"Mise en place Acte 2","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0.7526132,"b":0.358118981},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"Number":0,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/5077277234352508399/8DB7A1FD5E82C7AF183E83F0600C5A904DCB4A65/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Déplacer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1200,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n  --  self.createButton({\r\n  --      label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n    --    position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n    --    font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  --  })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"05d8ce\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5186,\"z\":11.5},\"rot\":{\"x\":0.0109,\"y\":179.9987,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2571a9\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5203,\"z\":20.5},\"rot\":{\"x\":0.0109,\"y\":179.9987,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"415af7\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5168,\"z\":2.5},\"rot\":{\"x\":0.0109,\"y\":180.0008,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.5046,\"z\":11.5},\"rot\":{\"x\":0.0049,\"y\":90.0109,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"8d1418\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5058,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":180.0171,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"ab38db\":{\"lock\":false,\"pos\":{\"x\":-31,\"y\":1.7789,\"z\":29.5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b33a26\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5041,\"z\":7},\"rot\":{\"x\":0.0109,\"y\":179.9976,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"bce4db\":{\"lock\":false,\"pos\":{\"x\":15,\"y\":1.5178,\"z\":11.5},\"rot\":{\"x\":0.0109,\"y\":180.0003,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":""},{"GUID":"ab38db","Name":"Card","Transform":{"posX":6,"posY":1.51855218,"posZ":11.5,"rotX":0.01089159,"rotY":180,"rotZ":0.00494829146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01111\",\n  \"locationBack\": {\n    \"connections\": \"\",\n    \"icons\": \"Circle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"\",\n    \"icons\": \"Circle\"\n  },\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":303401,"SidewaysCard":false,"CustomDeck":{"3034":{"FaceURL":"https://i.imgur.com/bd8pJXD.jpg","BackURL":"https://i.imgur.com/HM7vGhb.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b017b6","Name":"Deck","Transform":{"posX":12.5009985,"posY":1.53642869,"posZ":-6.01679754,"rotX":0.004954982,"rotY":90.0364151,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[1134202,1134201,1134200],"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"ebc802","Name":"Card","Transform":{"posX":12.500927,"posY":5.672425,"posZ":-6.01676941,"rotX":0.00516622467,"rotY":90.0371857,"rotZ":359.990845,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 10,\n  \"id\": \"01107\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134202,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b90411","Name":"Card","Transform":{"posX":12.5009193,"posY":5.63828325,"posZ":-6.01681662,"rotX":0.00487411628,"rotY":90.0376358,"rotZ":359.991425,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 7,\n  \"id\": \"01106\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134201,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"51f503","Name":"Card","Transform":{"posX":12.500988,"posY":1.57918739,"posZ":-6.016843,"rotX":0.005448922,"rotY":90.02693,"rotZ":359.986267,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 3,\n  \"id\": \"01105\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134200,"SidewaysCard":true,"CustomDeck":{"11342":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511752670/AA5FB87F0930200310B4F387596BF06A346D7D99/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511753298/793669A03E6BF9EBC802F023DE03593C5644B58E/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"b303d8","Name":"Deck","Transform":{"posX":30.4999,"posY":1.69062042,"posZ":-3,"rotX":-0.0005910914,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[15702,15703,15704,18038,18101,18100,17201,17202,17338,17204,18432,18433,17036,18500,18437,18435,18434,18436,16518,16524,16521,16520,16519,16522,16523,17100],"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"170":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"171":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"180":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"181":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"1c3c50","Name":"Card","Transform":{"posX":30.4999084,"posY":9.880199,"posZ":-2.999996,"rotX":359.8663,"rotY":179.999466,"rotZ":180.474335,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15702,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"67cfd5","Name":"Card","Transform":{"posX":30.4999,"posY":9.346024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15703,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7b9eb5","Name":"Card","Transform":{"posX":30.4999,"posY":9.146023,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01166\",\n  \"traits\": \"Omen.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":15704,"SidewaysCard":false,"CustomDeck":{"157":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b1178a","Name":"Card","Transform":{"posX":30.4999,"posY":8.946023,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01159\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18038,"SidewaysCard":false,"CustomDeck":{"180":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3c41d5","Name":"Card","Transform":{"posX":30.4999,"posY":8.746023,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01159\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18101,"SidewaysCard":false,"CustomDeck":{"181":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8041a2","Name":"Card","Transform":{"posX":30.4999,"posY":8.546023,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01159\",\n  \"traits\": \"Creature.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18100,"SidewaysCard":false,"CustomDeck":{"181":{"FaceURL":"https://i.imgur.com/AdR3VIZ.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"082199","Name":"Card","Transform":{"posX":30.4999,"posY":8.346024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17201,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc1997","Name":"Card","Transform":{"posX":30.4999,"posY":8.146023,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17202,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3ec405","Name":"Card","Transform":{"posX":30.4999,"posY":7.946023,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17338,"SidewaysCard":false,"CustomDeck":{"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4214a2","Name":"Card","Transform":{"posX":30.4999,"posY":7.746023,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17204,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"e9a446","Name":"Card","Transform":{"posX":30.4999,"posY":7.54602337,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18432,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"07ff5e","Name":"Card","Transform":{"posX":30.49984,"posY":7.30370474,"posZ":-3.000135,"rotX":359.811981,"rotY":179.998566,"rotZ":180.921722,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01165\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18433,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"dd6818","Name":"Card","Transform":{"posX":30.4999,"posY":5.661936,"posZ":-3.00000048,"rotX":-0.0005897061,"rotY":180,"rotZ":180.001053,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01118\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17036,"SidewaysCard":false,"CustomDeck":{"170":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0783ce","Name":"Card","Transform":{"posX":30.4999,"posY":7.146023,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18500,"SidewaysCard":false,"CustomDeck":{"185":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"68be1e","Name":"Card","Transform":{"posX":30.4999,"posY":6.946024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01164\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18437,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5e2ae4","Name":"Card","Transform":{"posX":30.4999,"posY":6.746024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18435,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"365129","Name":"Card","Transform":{"posX":30.4999,"posY":6.54602432,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18434,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"2e3a70","Name":"Card","Transform":{"posX":30.4999,"posY":6.346024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01163\",\n  \"traits\": \"Terror.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18436,"SidewaysCard":false,"CustomDeck":{"184":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1eb691","Name":"Card","Transform":{"posX":30.4999,"posY":6.146024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01162\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16518,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"bf2930","Name":"Card","Transform":{"posX":30.4999,"posY":5.946024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01162\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16524,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7db61d","Name":"Card","Transform":{"posX":30.4999,"posY":5.746024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01162\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16521,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"ef3d34","Name":"Card","Transform":{"posX":30.5002155,"posY":5.216385,"posZ":-2.9994185,"rotX":359.96814,"rotY":179.999664,"rotZ":180.0116,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01161\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16520,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"0feb76","Name":"Card","Transform":{"posX":30.4999,"posY":5.346024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01160\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16519,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"199ce8","Name":"Card","Transform":{"posX":30.4999,"posY":5.146024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01160\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16522,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5459e3","Name":"Card","Transform":{"posX":30.4999,"posY":4.946024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01160\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16523,"SidewaysCard":false,"CustomDeck":{"165":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c2ebc5","Name":"Card","Transform":{"posX":30.4999,"posY":4.746024,"posZ":-3.00000024,"rotX":-0.0005909908,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01119\",\n  \"traits\": \"Humanoid. Monster. Ghoul.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17100,"SidewaysCard":false,"CustomDeck":{"171":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"b33a26","Name":"Custom_Tile","Transform":{"posX":-33.0000038,"posY":1.76530063,"posZ":14.4999981,"rotX":-0.00000496612665,"rotY":179.997543,"rotZ":-4.466483e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"4d3553","Name":"Custom_Tile","Transform":{"posX":-17.11995,"posY":1.60650957,"posZ":3.85999179,"rotX":359.9831,"rotY":359.984558,"rotZ":359.920074,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-17.1199474,"posY":1.60650969,"posZ":3.85999274,"rotX":359.983124,"rotY":359.984467,"rotZ":359.9201,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"bce4db","Name":"Card","Transform":{"posX":-20.9999981,"posY":1.77890527,"posZ":14.500001,"rotX":-0.000005084974,"rotY":180.0003,"rotZ":6.253321e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01115\",\n  \"locationBack\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Diamond\"\n  },\n  \"locationFront\": {\n    \"connections\": \"Square\",\n    \"icons\": \"Diamond\"\n  },\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":303406,"SidewaysCard":false,"CustomDeck":{"3034":{"FaceURL":"https://i.imgur.com/bd8pJXD.jpg","BackURL":"https://i.imgur.com/HM7vGhb.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c94836","Name":"Card","Transform":{"posX":23.5002,"posY":1.5138092,"posZ":-5.4999,"rotX":0.010891757,"rotY":179.997421,"rotZ":180.004959,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":13500,"SidewaysCard":false,"CustomDeck":{"135":{"FaceURL":"https://i.imgur.com/HM7vGhb.jpg","BackURL":"https://i.imgur.com/bd8pJXD.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"dfd4ae","Name":"Custom_Model_Bag","Transform":{"posX":7.999999,"posY":0.9799975,"posZ":45,"rotX":-0.00000486355,"rotY":180.003067,"rotZ":8.69227463e-8,"scaleX":1.20819664,"scaleY":0.823770463,"scaleZ":1.31803274},"Nickname":"II : Les Masques e Minuit","Description":"La Nuit de la Zélatrice","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/829135118401832703/EEE4C42DE08AEC1CFABF66A0458F5050E8F23449/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"07c850\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5169,\"z\":2.5},\"rot\":{\"x\":0.0109,\"y\":180.0102,\"z\":0.0047},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"116f27\":{\"lock\":false,\"pos\":{\"x\":6.5004,\"y\":1.5651,\"z\":2.5},\"rot\":{\"x\":0.0109,\"y\":180.0203,\"z\":0.0051},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1b8ec3\":{\"lock\":false,\"pos\":{\"x\":5.5001,\"y\":1.5203,\"z\":20.5},\"rot\":{\"x\":0.0109,\"y\":179.9988,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1d70e7\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5186,\"z\":11.5},\"rot\":{\"x\":0.0109,\"y\":179.9999,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1ff9df\":{\"lock\":false,\"pos\":{\"x\":-3.5001,\"y\":1.5211,\"z\":20.5},\"rot\":{\"x\":0.0109,\"y\":179.9999,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"20066e\":{\"lock\":false,\"pos\":{\"x\":-28.5000286102295,\"y\":1.83530128002167,\"z\":3.49997568130493},\"rot\":{\"x\":4.88578371005133E-06,\"y\":359.976135253906,\"z\":-1.0144480455665E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2abd86\":{\"lock\":false,\"pos\":{\"x\":-27,\"y\":1.5802,\"z\":4.5},\"rot\":{\"x\":0,\"y\":0.0075,\"z\":0},\"tint\":{\"a\":1,\"b\":0.0899989679455757,\"g\":0.230998694896698,\"r\":0.442998707294464}},\"32bf1a\":{\"lock\":false,\"pos\":{\"x\":-3.50005030632019,\"y\":1.52108347415924,\"z\":20.500020980835},\"rot\":{\"x\":0.0108915930613875,\"y\":179.997848510742,\"z\":0.00494789751246572},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"37e16f\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.54082214832306,\"z\":5},\"rot\":{\"x\":359.224945068359,\"y\":179.994491577148,\"z\":-9.98574687400833E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3c0ae5\":{\"lock\":false,\"pos\":{\"x\":12.5205,\"y\":1.5316,\"z\":-6.0029},\"rot\":{\"x\":0.0049,\"y\":90.0045,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"43a714\":{\"lock\":false,\"pos\":{\"x\":-32,\"y\":1.5802,\"z\":4.5},\"rot\":{\"x\":0,\"y\":359.9885,\"z\":0},\"tint\":{\"a\":1,\"b\":0.0899989679455757,\"g\":0.230998694896698,\"r\":0.442998707294464}},\"4a75fd\":{\"lock\":false,\"pos\":{\"x\":34.5001,\"y\":1.5894,\"z\":2.5},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4b82c0\":{\"lock\":false,\"pos\":{\"x\":14.5,\"y\":1.5195,\"z\":20.5},\"rot\":{\"x\":0.0109,\"y\":179.9997,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"506767\":{\"lock\":false,\"pos\":{\"x\":-21.0001258850098,\"y\":1.77890622615814,\"z\":3.4998619556427},\"rot\":{\"x\":-4.91968239657581E-06,\"y\":180.001312255859,\"z\":-7.1468278406428E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"50a9d7\":{\"lock\":false,\"pos\":{\"x\":-3.50000143051147,\"y\":1.50662338733673,\"z\":16},\"rot\":{\"x\":359.989105224609,\"y\":359.988159179688,\"z\":-0.00495058111846447},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5907c5\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.5229},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5f4d79\":{\"lock\":false,\"pos\":{\"x\":10.0000009536743,\"y\":1.50545752048492,\"z\":16},\"rot\":{\"x\":-0.00420368509367108,\"y\":45.0000114440918,\"z\":359.988800048828},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"619ae1\":{\"lock\":false,\"pos\":{\"x\":-31.5000247955322,\"y\":1.83749127388,\"z\":3.49987506866455},\"rot\":{\"x\":359.845733642578,\"y\":359.971435546875,\"z\":0.000224213217734359},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"68baa4\":{\"lock\":false,\"pos\":{\"x\":-25.5000171661377,\"y\":1.83530128002167,\"z\":3.4999794960022},\"rot\":{\"x\":4.69116002932424E-06,\"y\":359.974060058594,\"z\":-8.89059066366826E-08},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"6a14f5\":{\"lock\":false,\"pos\":{\"x\":6.1032,\"y\":1.5703,\"z\":20.5},\"rot\":{\"x\":0.0109,\"y\":179.9988,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"6a2978\":{\"lock\":false,\"pos\":{\"x\":9.99999904632568,\"y\":1.50460207462311,\"z\":11.5},\"rot\":{\"x\":0.00494715059176087,\"y\":89.9960403442383,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"71dcec\":{\"lock\":false,\"pos\":{\"x\":-20.9563179016113,\"y\":1.7663015127182,\"z\":1.28138554096222},\"rot\":{\"x\":4.53655457022251E-06,\"y\":0.00102886056993157,\"z\":-7.41490140399037E-08},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":10,\"y\":1.50631284713745,\"z\":20.5},\"rot\":{\"x\":0.00495121767744422,\"y\":90.0210189819336,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"735bb1\":{\"lock\":false,\"pos\":{\"x\":-30.3266086578369,\"y\":1.76703691482544,\"z\":4.81630706787109},\"rot\":{\"x\":0.000260483182501048,\"y\":0.0149317560717463,\"z\":-0.00118867866694927},\"tint\":{\"a\":0,\"b\":0.555448532104492,\"g\":0.677700459957123,\"r\":0}},\"73ae3c\":{\"lock\":false,\"pos\":{\"x\":14.5,\"y\":1.5161,\"z\":2.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"75ffdc\":{\"lock\":false,\"pos\":{\"x\":9.99999809265137,\"y\":1.50374662876129,\"z\":7.00000333786011},\"rot\":{\"x\":359.988800048828,\"y\":315.020080566406,\"z\":0.00420007342472672},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"775f4f\":{\"lock\":false,\"pos\":{\"x\":-3.50000143051147,\"y\":1.5049124956131,\"z\":7},\"rot\":{\"x\":359.989105224609,\"y\":359.988220214844,\"z\":-0.00494956411421299},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7f1031\":{\"lock\":false,\"pos\":{\"x\":12.4999713897705,\"y\":1.53161799907684,\"z\":-5.99984931945801},\"rot\":{\"x\":0.00494859740138054,\"y\":90.0026626586914,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"83358c\":{\"lock\":false,\"pos\":{\"x\":0.999998688697815,\"y\":1.50452387332916,\"z\":7.00000333786011},\"rot\":{\"x\":0.011200207285583,\"y\":134.996047973633,\"z\":-0.00420463085174561},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"858c84\":{\"lock\":false,\"pos\":{\"x\":5.46199989318848,\"y\":1.52011227607727,\"z\":17.9915008544922},\"rot\":{\"x\":3.5079792723991E-05,\"y\":178.650054931641,\"z\":-0.000197071771253832},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9ff45b\":{\"lock\":false,\"pos\":{\"x\":-3.5001,\"y\":1.5177,\"z\":2.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a18a8e\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5194,\"z\":11.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a3d6eb\":{\"lock\":false,\"pos\":{\"x\":34.6251983642578,\"y\":1.5454158782959,\"z\":0.0881000831723213},\"rot\":{\"x\":0.000591009797062725,\"y\":-0.000113845992018469,\"z\":-0.00107026123441756},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"a56641\":{\"lock\":false,\"pos\":{\"x\":-34.5,\"y\":1.5802,\"z\":4.5},\"rot\":{\"x\":0,\"y\":0.0072,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0.366520881652832,\"r\":0.70588231086731}},\"a8984f\":{\"lock\":false,\"pos\":{\"x\":-29.5,\"y\":1.5802,\"z\":4.5},\"rot\":{\"x\":0,\"y\":359.9889,\"z\":0},\"tint\":{\"a\":1,\"b\":0.0899989828467369,\"g\":0.23099872469902,\"r\":0.442998737096787}},\"af5bf4\":{\"lock\":false,\"pos\":{\"x\":14.5001,\"y\":1.5178,\"z\":11.5},\"rot\":{\"x\":0.0109,\"y\":179.9999,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b53a81\":{\"lock\":false,\"pos\":{\"x\":-34.5000267028809,\"y\":1.83530128002167,\"z\":3.49997210502625},\"rot\":{\"x\":5.03547516927938E-06,\"y\":359.979827880859,\"z\":7.5296377133327E-08},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"d716a1\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.50413525104523,\"z\":7},\"rot\":{\"x\":359.989105224609,\"y\":359.988616943359,\"z\":-0.00495004048570991},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d85d68\":{\"lock\":false,\"pos\":{\"x\":0.999998688697815,\"y\":1.50537931919098,\"z\":11.5},\"rot\":{\"x\":0.00494424067437649,\"y\":89.9828720092773,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d9c370\":{\"lock\":false,\"pos\":{\"x\":0.999998569488525,\"y\":1.50366842746735,\"z\":2.49999809265137},\"rot\":{\"x\":0.00494704628363252,\"y\":89.9963912963867,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e1f778\":{\"lock\":false,\"pos\":{\"x\":0.999999046325684,\"y\":1.50709009170532,\"z\":20.5},\"rot\":{\"x\":0.00494713475927711,\"y\":89.9961776733398,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e52cd3\":{\"lock\":false,\"pos\":{\"x\":5.5119,\"y\":1.5338,\"z\":2.5245},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ec483e\":{\"lock\":false,\"pos\":{\"x\":5.39830160140991,\"y\":1.57008564472198,\"z\":19.442699432373},\"rot\":{\"x\":-0.000767409976106137,\"y\":178.625061035156,\"z\":-0.000316016055876389},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f00436\":{\"lock\":false,\"pos\":{\"x\":17.5000019073486,\"y\":1.51423239707947,\"z\":-5.99983692169189},\"rot\":{\"x\":0.00494731962680817,\"y\":89.9954986572266,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ff560b\":{\"lock\":false,\"pos\":{\"x\":5.50001001358032,\"y\":1.52009892463684,\"z\":3.00000309944153},\"rot\":{\"x\":0.000149908577441238,\"y\":179.999740600586,\"z\":-0.000880025734659284},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"07c850","Name":"CardCustom","Transform":{"posX":5.5,"posY":1.51688123,"posZ":2.49999881,"rotX":0.0109226117,"rotY":180.010178,"rotZ":0.0047307713,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01126\",\n  \"locationBack\": {\n    \"connections\": \"Diamond|Plus|Circle\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond|Plus|Circle\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1160200,"SidewaysCard":false,"CustomDeck":{"11602":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095519975029/A8A7F70F9A835DEA56D6F78383D06664E7E85C1F/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095519978640/2341E617DD89937230F185E888ADB306C76D150B/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"116f27","Name":"CardCustom","Transform":{"posX":6.50040054,"posY":1.56687522,"posZ":2.499999,"rotX":0.0109520424,"rotY":180.0203,"rotZ":0.005056828,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01127\",\n  \"locationBack\": {\n    \"connections\": \"Diamond|Plus|Circle\",\n    \"icons\": \"Square\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond|Plus|Circle\",\n    \"icons\": \"Square\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1160100,"SidewaysCard":false,"CustomDeck":{"11601":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095519975029/A8A7F70F9A835DEA56D6F78383D06664E7E85C1F/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095519977333/7524C4342AE4DA56521BBEF32550E2F7E91827FF/","NumWidth":1,"NumHeight":1,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1b8ec3","Name":"Card","Transform":{"posX":5.50010061,"posY":1.52030575,"posZ":20.5,"rotX":0.0108957672,"rotY":179.9988,"rotZ":0.00492078671,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01131\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134315,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1d70e7","Name":"Card","Transform":{"posX":5.5,"posY":1.51859534,"posZ":11.5,"rotX":0.010891485,"rotY":179.9999,"rotZ":0.00494817924,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01125\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Diamond|Square|Tilde|Hourglass\",\n    \"icons\": \"Circle\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Diamond|Square|Tilde|Hourglass\",\n    \"icons\": \"Circle\"\n  },\n  \"traits\": \"Arkham. Central.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134327,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"1ff9df","Name":"Card","Transform":{"posX":-3.50010085,"posY":1.52108347,"posZ":20.5,"rotX":0.0108915167,"rotY":179.9999,"rotZ":0.004948198,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01134\",\n  \"locationBack\": {\n    \"connections\": \"Diamond|Triangle|FromNorthside\",\n    \"icons\": \"Tee\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond|Triangle|FromNorthside\",\n    \"icons\": \"Tee\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134318,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"20066e","Name":"Custom_Model_Bag","Transform":{"posX":-28.5000324,"posY":1.8353014,"posZ":3.49997187,"rotX":0.00000498925965,"rotY":359.976135,"rotZ":2.299008e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"3 joueurs","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1874088192658980232/0CBB6300B63C21ED68BEFDD24E4AC8F5FCC643D0/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={1.15,0.3,-2.1}, rotation={0,180,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={1.15,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={-1.15,0.3,-2.1}, rotation={0,180,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={1.15,0.3,-3.5}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={-1.15,0.3,-3.5}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={-1.15,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"073a47\":{\"lock\":false,\"pos\":{\"x\":5.49998617172241,\"y\":1.52095484733582,\"z\":24.0001621246338},\"rot\":{\"x\":0.0110440133139491,\"y\":180.311447143555,\"z\":0.00385319232009351},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"15bd9e\":{\"lock\":false,\"pos\":{\"x\":8.4999942779541,\"y\":1.58024668693542,\"z\":2.999760389328},\"rot\":{\"x\":0.00949290581047535,\"y\":179.991363525391,\"z\":0.00418034754693508},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":1}},\"5ed4a9\":{\"lock\":false,\"pos\":{\"x\":5.49996900558472,\"y\":1.58460009098053,\"z\":24.4997863769531},\"rot\":{\"x\":0.0104993060231209,\"y\":180.312088012695,\"z\":0.00329537107609212},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":1}},\"b3c74a\":{\"lock\":false,\"pos\":{\"x\":8.49998950958252,\"y\":1.51660704612732,\"z\":2.50023055076599},\"rot\":{\"x\":0.0110879121348262,\"y\":179.995391845703,\"z\":0.00368110812269151},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c49876\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.65692222118378,\"z\":-3},\"rot\":{\"x\":-0.000591093732509762,\"y\":180,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"073a47","Name":"Card","Transform":{"posX":5.49998569,"posY":1.52095211,"posZ":24.0001621,"rotX":0.0110729132,"rotY":180.311462,"rotZ":0.00366388285,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01131\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18723,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"15bd9e","Name":"Custom_Token","Transform":{"posX":8.499992,"posY":1.58023691,"posZ":2.99976015,"rotX":0.009691169,"rotY":179.9913,"rotZ":0.002112854,"scaleX":0.3,"scaleY":1,"scaleZ":0.3},"Nickname":"Doom counter\n","Description":"Left click - Increase\nRight click - Decrease","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/949592555964782208/CC876694A6684B3C2680CE2FE3259F574AE0AD97/","ImageSecondaryURL":"","ImageScalar":1,"WidthScale":0,"CustomToken":{"Thickness":0.1,"MergeDistancePixels":5,"StandUp":false,"Stackable":false}},"LuaScript":"MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,100}\r\n    end\r\n\r\n\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      function_owner=self,\r\n      position={0,0.05,0},\r\n      height=600,\r\n      width=1000,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=600,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n\r\n\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark ]\"\r\n    else\r\n        lightButtonText = \"[ Set light ]\"\r\n    end\r\n \r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n      updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend","LuaScriptState":"[true,1]","XmlUI":""},{"GUID":"5ed4a9","Name":"Custom_Token","Transform":{"posX":5.499967,"posY":1.58458173,"posZ":24.4997883,"rotX":0.009330124,"rotY":180.312119,"rotZ":0.00225897459,"scaleX":0.3,"scaleY":1,"scaleZ":0.3},"Nickname":"Doom counter\n","Description":"Left click - Increase\nRight click - Decrease","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/949592555964782208/CC876694A6684B3C2680CE2FE3259F574AE0AD97/","ImageSecondaryURL":"","ImageScalar":1,"WidthScale":0,"CustomToken":{"Thickness":0.1,"MergeDistancePixels":5,"StandUp":false,"Stackable":false}},"LuaScript":"MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,100}\r\n    end\r\n\r\n\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      function_owner=self,\r\n      position={0,0.05,0},\r\n      height=600,\r\n      width=1000,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=600,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n\r\n\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark ]\"\r\n    else\r\n        lightButtonText = \"[ Set light ]\"\r\n    end\r\n \r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n      updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend","LuaScriptState":"[true,1]","XmlUI":""},{"GUID":"b3c74a","Name":"Card","Transform":{"posX":8.49998951,"posY":1.51660562,"posZ":2.50023031,"rotX":0.0111050652,"rotY":179.995392,"rotZ":0.003572886,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01131\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18723,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c49876","Name":"Deck","Transform":{"posX":30.5009823,"posY":1.65692222,"posZ":-3.00046086,"rotX":-0.0005911734,"rotY":180.005722,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[17601,17604,17603,18719,17602,17605,16901,16900,17201,17202,17338,17204,16606,16607,16608,16610,18717,18721,18718],"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"a0246f","Name":"Card","Transform":{"posX":30.5,"posY":7.77482748,"posZ":-2.99999976,"rotX":0.00000655230269,"rotY":180,"rotZ":180.0008,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17601,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"22ab0f","Name":"Card","Transform":{"posX":30.5,"posY":7.91232443,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17604,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c8cd46","Name":"Card","Transform":{"posX":30.5,"posY":7.712325,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17603,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"efb29e","Name":"Card","Transform":{"posX":30.5,"posY":5.66346741,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18719,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"861640","Name":"Card","Transform":{"posX":30.5,"posY":7.51232433,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01136\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17602,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7a35f5","Name":"Card","Transform":{"posX":30.5,"posY":7.31232452,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01136\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17605,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c1f477","Name":"Card","Transform":{"posX":30.5,"posY":7.112325,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16901,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4b7dd0","Name":"Card","Transform":{"posX":30.5,"posY":6.912326,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16900,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"082199","Name":"Card","Transform":{"posX":30.5,"posY":6.71232557,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17201,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc1997","Name":"Card","Transform":{"posX":30.5,"posY":6.512326,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17202,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3ec405","Name":"Card","Transform":{"posX":30.5,"posY":6.312326,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17338,"SidewaysCard":false,"CustomDeck":{"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4214a2","Name":"Card","Transform":{"posX":30.5,"posY":6.11232567,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17204,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"714f71","Name":"Card","Transform":{"posX":30.5,"posY":5.912326,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16606,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e5d2","Name":"Card","Transform":{"posX":30.5,"posY":5.71232557,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16607,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5c7a4c","Name":"Card","Transform":{"posX":30.5,"posY":5.512326,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16608,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4f0667","Name":"Card","Transform":{"posX":30.5,"posY":5.312326,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16610,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7db7c9","Name":"Card","Transform":{"posX":30.5,"posY":4.7748394,"posZ":-2.99999976,"rotX":-0.0005908726,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18717,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"898692","Name":"Card","Transform":{"posX":30.5,"posY":4.912326,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18721,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"089a5c","Name":"Card","Transform":{"posX":30.5,"posY":4.71232557,"posZ":-3,"rotX":-0.0005909435,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01170\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18718,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}]},{"GUID":"3c0ae5","Name":"Deck","Transform":{"posX":12.5205,"posY":1.53161561,"posZ":-6.00290346,"rotX":0.0049489066,"rotY":90.0045,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":true,"DeckIDs":[14001,14000],"CustomDeck":{"140":{"FaceURL":"https://i.imgur.com/twwXtHK.jpg","BackURL":"https://i.imgur.com/odMn3kg.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"7a10f1","Name":"Card","Transform":{"posX":12.5204639,"posY":1.60617387,"posZ":-6.00288963,"rotX":0.00426546531,"rotY":90.00437,"rotZ":359.988464,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 8,\n  \"id\": \"01122\",\n  \"type\": \"Agenda\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14001,"SidewaysCard":true,"CustomDeck":{"140":{"FaceURL":"https://i.imgur.com/twwXtHK.jpg","BackURL":"https://i.imgur.com/odMn3kg.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"999299","Name":"Card","Transform":{"posX":12.5204678,"posY":1.60441113,"posZ":-6.00289774,"rotX":0.007811575,"rotY":90.00437,"rotZ":359.9857,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"backEnemy\": {\n    \"health\": 4,\n    \"traits\": \"Humanoïde. Cultiste. Élite.\",\n    \"victory\": 2\n  },\n  \"cycle\": \"Standalone\",\n  \"doomThreshold\": 6,\n  \"id\": \"01121a\",\n  \"type\": \"Agenda\",\n  \"upsidedown\": \"true\",\n  \"victory\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14000,"SidewaysCard":true,"CustomDeck":{"140":{"FaceURL":"https://i.imgur.com/twwXtHK.jpg","BackURL":"https://i.imgur.com/odMn3kg.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"4a75fd","Name":"Deck","Transform":{"posX":34.5001,"posY":1.58939421,"posZ":2.5,"rotX":-0.000591092,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[1134402,1134405,1134404,1134403,1134406],"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"fd8721","Name":"Card","Transform":{"posX":34.4984436,"posY":1.67376566,"posZ":2.50089955,"rotX":0.00132745237,"rotY":180.010727,"rotZ":180.0028,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01138\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134402,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"71b11d","Name":"Card","Transform":{"posX":34.4984436,"posY":4.897279,"posZ":2.5008986,"rotX":-0.0005908854,"rotY":180.010727,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01137\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134405,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"51bc8b","Name":"Card","Transform":{"posX":34.4984436,"posY":5.044798,"posZ":2.5008986,"rotX":-0.000591260847,"rotY":180.010727,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01141\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134404,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cf842a","Name":"Card","Transform":{"posX":34.4984436,"posY":4.844798,"posZ":2.5008986,"rotX":-0.000591260847,"rotY":180.010727,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01139\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134403,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6a003b","Name":"Card","Transform":{"posX":34.4984436,"posY":1.65240717,"posZ":2.50089884,"rotX":0.0000201059847,"rotY":180.010727,"rotZ":180.001633,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 3,\n  \"id\": \"01140\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134406,"SidewaysCard":false,"CustomDeck":{"11344":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511789491/44F79391074479DCB67EB457E5F0F82A076AA9BA/","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"4b82c0","Name":"Card","Transform":{"posX":14.500001,"posY":1.51952887,"posZ":20.5,"rotX":0.0108915567,"rotY":179.99968,"rotZ":0.004948144,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01132\",\n  \"locationBack\": {\n    \"connections\": \"Circle|Triangle|FromEasttown\",\n    \"icons\": \"Crescent\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle|Triangle|FromEasttown\",\n    \"icons\": \"Crescent\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134325,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"506767","Name":"Card","Transform":{"posX":-21.0001278,"posY":1.77890623,"posZ":3.49986,"rotX":-0.00000490587627,"rotY":180.001373,"rotZ":-1.56656341e-7,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 5,\n  \"healthPerInv\": \"true\",\n  \"id\": \"01116\",\n  \"traits\": \"Humanoid. Monster. Ghoul. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 2\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":303404,"SidewaysCard":false,"CustomDeck":{"3034":{"FaceURL":"https://i.imgur.com/bd8pJXD.jpg","BackURL":"https://i.imgur.com/HM7vGhb.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"50a9d7","Name":"Custom_Tile","Transform":{"posX":-3.500002,"posY":1.50662339,"posZ":16,"rotX":359.9891,"rotY":359.988129,"rotZ":-0.004949387,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"5907c5","Name":"Card","Transform":{"posX":23.5013,"posY":1.51380479,"posZ":-5.522901,"rotX":0.0108914673,"rotY":180,"rotZ":0.00494822348,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134313,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5f4d79","Name":"Custom_Tile","Transform":{"posX":10.000001,"posY":1.50545752,"posZ":16,"rotX":-0.004203123,"rotY":45.0000076,"rotZ":359.9888,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"619ae1","Name":"Custom_Model_Bag","Transform":{"posX":-31.5000286,"posY":1.83749127,"posZ":3.4998703,"rotX":359.845734,"rotY":359.971375,"rotZ":0.000222196919,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"2 joueurs","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1874088192658978784/62C3EE8077E61D12CDBD797B63944A6ABB9E70B6/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={1.15,0.3,-2.1}, rotation={0,180,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={1.15,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={-1.15,0.3,-2.1}, rotation={0,180,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={1.15,0.3,-3.5}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={-1.15,0.3,-3.5}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={-1.15,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"0cf87d\":{\"lock\":false,\"pos\":{\"x\":8.4999828338623,\"y\":1.51661133766174,\"z\":2.50017094612122},\"rot\":{\"x\":0.011014673858881,\"y\":180.318984985352,\"z\":0.00403433153405786},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"752f38\":{\"lock\":false,\"pos\":{\"x\":8.49996566772461,\"y\":1.58026909828186,\"z\":2.99977445602417},\"rot\":{\"x\":0.0110278548672795,\"y\":180.311309814453,\"z\":0.00318234763108194},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":1}},\"dca62a\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.66173624992371,\"z\":-3},\"rot\":{\"x\":-0.000591103336773813,\"y\":180.005996704102,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"0cf87d","Name":"Card","Transform":{"posX":8.499983,"posY":1.51660633,"posZ":2.50017047,"rotX":0.0110679409,"rotY":180.318985,"rotZ":0.00369128957,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01131\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18723,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"752f38","Name":"Custom_Token","Transform":{"posX":8.499967,"posY":1.58024085,"posZ":2.99977636,"rotX":0.00892464351,"rotY":180.311279,"rotZ":0.00384948147,"scaleX":0.3,"scaleY":1,"scaleZ":0.3},"Nickname":"Doom counter\n","Description":"Left click - Increase\nRight click - Decrease","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/949592555964782208/CC876694A6684B3C2680CE2FE3259F574AE0AD97/","ImageSecondaryURL":"","ImageScalar":1,"WidthScale":0,"CustomToken":{"Thickness":0.1,"MergeDistancePixels":5,"StandUp":false,"Stackable":false}},"LuaScript":"MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,100}\r\n    end\r\n\r\n\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      function_owner=self,\r\n      position={0,0.05,0},\r\n      height=600,\r\n      width=1000,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=600,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n\r\n\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark ]\"\r\n    else\r\n        lightButtonText = \"[ Set light ]\"\r\n    end\r\n \r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n      updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend","LuaScriptState":"[true,1]","XmlUI":""},{"GUID":"dca62a","Name":"Deck","Transform":{"posX":30.507122,"posY":1.66173625,"posZ":-3.00805068,"rotX":-0.0005939694,"rotY":180.129135,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[18719,17602,17601,17604,17603,17605,16901,16900,17201,17202,17338,17204,16606,16607,16608,16610,18717,18721,18718,18719],"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"8a91f9","Name":"Card","Transform":{"posX":30.5,"posY":1.8339293,"posZ":-3,"rotX":-0.000871050754,"rotY":180.006,"rotZ":180.0013,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18719,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"861640","Name":"Card","Transform":{"posX":30.500227,"posY":7.94111,"posZ":-2.9995265,"rotX":0.432275325,"rotY":180.006653,"rotZ":180.240967,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01136\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17602,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a0246f","Name":"Card","Transform":{"posX":30.5000057,"posY":8.515245,"posZ":-2.99999738,"rotX":359.9049,"rotY":180.005737,"rotZ":180.333008,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17601,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"22ab0f","Name":"Card","Transform":{"posX":30.5,"posY":8.117139,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17604,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c8cd46","Name":"Card","Transform":{"posX":30.5,"posY":7.91713858,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17603,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7a35f5","Name":"Card","Transform":{"posX":30.5,"posY":7.51713848,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01136\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17605,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c1f477","Name":"Card","Transform":{"posX":30.5,"posY":7.31713867,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16901,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4b7dd0","Name":"Card","Transform":{"posX":30.5,"posY":7.11713934,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16900,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"082199","Name":"Card","Transform":{"posX":30.5,"posY":6.91714,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17201,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc1997","Name":"Card","Transform":{"posX":30.5,"posY":6.71713972,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17202,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3ec405","Name":"Card","Transform":{"posX":30.5,"posY":6.51714,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17338,"SidewaysCard":false,"CustomDeck":{"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4214a2","Name":"Card","Transform":{"posX":30.5,"posY":6.31713963,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17204,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"714f71","Name":"Card","Transform":{"posX":30.5,"posY":6.11714,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16606,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e5d2","Name":"Card","Transform":{"posX":30.5,"posY":5.91714,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16607,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5c7a4c","Name":"Card","Transform":{"posX":30.5,"posY":5.71713972,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16608,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4f0667","Name":"Card","Transform":{"posX":30.5,"posY":5.51714,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16610,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7db7c9","Name":"Card","Transform":{"posX":30.5,"posY":5.31713963,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18717,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"898692","Name":"Card","Transform":{"posX":30.5,"posY":5.11714,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18721,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"089a5c","Name":"Card","Transform":{"posX":30.5,"posY":4.91714,"posZ":-3.00000024,"rotX":-0.0005910493,"rotY":180.006,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01170\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18718,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"efb29e","Name":"Card","Transform":{"posX":30.5001984,"posY":4.216445,"posZ":-2.99966288,"rotX":359.741547,"rotY":180.005554,"rotZ":180.151154,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18719,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}]},{"GUID":"68baa4","Name":"Custom_Model_Bag","Transform":{"posX":-25.500021,"posY":1.8353014,"posZ":3.4999752,"rotX":0.000005279808,"rotY":359.97403,"rotZ":-1.48293267e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"4 joueurs","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1874088192658981787/6D1F817EB9B4154C2F066222E78DF6A3346EAFBF/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={1.15,0.3,-2.1}, rotation={0,180,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={1.15,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={-1.15,0.3,-2.1}, rotation={0,180,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={1.15,0.3,-3.5}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={-1.15,0.3,-3.5}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={-1.15,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"221054\":{\"lock\":false,\"pos\":{\"x\":16.9982013702393,\"y\":1.58124136924744,\"z\":11.999608039856},\"rot\":{\"x\":0.0105599099770188,\"y\":180.285537719727,\"z\":0.00426271324977279},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":1}},\"806515\":{\"lock\":false,\"pos\":{\"x\":5.4999852180481,\"y\":1.52095770835876,\"z\":24.0001792907715},\"rot\":{\"x\":0.0110113695263863,\"y\":180.319473266602,\"z\":0.0040557305328548},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"94d00e\":{\"lock\":false,\"pos\":{\"x\":5.49996519088745,\"y\":1.58461844921112,\"z\":24.4997615814209},\"rot\":{\"x\":0.0112336380407214,\"y\":180.318634033203,\"z\":0.00388482236303389},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":1}},\"b2ab43\":{\"lock\":false,\"pos\":{\"x\":8.50000286102295,\"y\":1.51660430431366,\"z\":2.50019454956055},\"rot\":{\"x\":0.0111326798796654,\"y\":179.823272705078,\"z\":0.0034546353854239},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d71a3d\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.65210807323456,\"z\":-3},\"rot\":{\"x\":-0.000591193442232907,\"y\":180,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d82e8b\":{\"lock\":false,\"pos\":{\"x\":16.9993419647217,\"y\":1.51758694648743,\"z\":11.4999704360962},\"rot\":{\"x\":0.0110308201983571,\"y\":180.280059814453,\"z\":0.00394436577335},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"dd6376\":{\"lock\":false,\"pos\":{\"x\":8.50003623962402,\"y\":1.5802276134491,\"z\":2.99978637695313},\"rot\":{\"x\":0.00919445045292377,\"y\":179.814575195313,\"z\":0.00316899758763611},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":1}}}}","XmlUI":"","ContainedObjects":[{"GUID":"221054","Name":"Custom_Token","Transform":{"posX":16.9982033,"posY":1.58121657,"posZ":11.9996147,"rotX":0.009695061,"rotY":180.285416,"rotZ":0.00300697028,"scaleX":0.3,"scaleY":1,"scaleZ":0.3},"Nickname":"Doom counter\n","Description":"Left click - Increase\nRight click - Decrease","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/949592555964782208/CC876694A6684B3C2680CE2FE3259F574AE0AD97/","ImageSecondaryURL":"","ImageScalar":1,"WidthScale":0,"CustomToken":{"Thickness":0.1,"MergeDistancePixels":5,"StandUp":false,"Stackable":false}},"LuaScript":"MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,100}\r\n    end\r\n\r\n\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      function_owner=self,\r\n      position={0,0.05,0},\r\n      height=600,\r\n      width=1000,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=600,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n\r\n\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark ]\"\r\n    else\r\n        lightButtonText = \"[ Set light ]\"\r\n    end\r\n \r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n      updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend","LuaScriptState":"[true,1]","XmlUI":""},{"GUID":"806515","Name":"Card","Transform":{"posX":5.499985,"posY":1.52095616,"posZ":24.0001869,"rotX":0.0110279312,"rotY":180.319473,"rotZ":0.003947296,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01131\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18723,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"94d00e","Name":"Custom_Token","Transform":{"posX":5.49996328,"posY":1.58460855,"posZ":24.49977,"rotX":0.0108562643,"rotY":180.318329,"rotZ":0.00335242227,"scaleX":0.3,"scaleY":1,"scaleZ":0.3},"Nickname":"Doom counter\n","Description":"Left click - Increase\nRight click - Decrease","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/949592555964782208/CC876694A6684B3C2680CE2FE3259F574AE0AD97/","ImageSecondaryURL":"","ImageScalar":1,"WidthScale":0,"CustomToken":{"Thickness":0.1,"MergeDistancePixels":5,"StandUp":false,"Stackable":false}},"LuaScript":"MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,100}\r\n    end\r\n\r\n\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      function_owner=self,\r\n      position={0,0.05,0},\r\n      height=600,\r\n      width=1000,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=600,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n\r\n\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark ]\"\r\n    else\r\n        lightButtonText = \"[ Set light ]\"\r\n    end\r\n \r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n      updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend","LuaScriptState":"[true,1]","XmlUI":""},{"GUID":"b2ab43","Name":"Card","Transform":{"posX":8.500003,"posY":1.51660979,"posZ":2.50019431,"rotX":0.011074068,"rotY":179.823257,"rotZ":0.00383380521,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01131\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18723,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"d71a3d","Name":"Deck","Transform":{"posX":30.4965515,"posY":1.65210831,"posZ":-2.99770021,"rotX":-0.00059194467,"rotY":180.04245,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[17601,17604,18721,18718,17603,17602,17605,16901,16900,17201,17202,17338,17204,16606,16607,16608,16610,18717],"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"a0246f","Name":"Card","Transform":{"posX":30.4986515,"posY":7.90751028,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17601,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"22ab0f","Name":"Card","Transform":{"posX":30.4986515,"posY":7.707511,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17604,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"898692","Name":"Card","Transform":{"posX":30.4986515,"posY":5.635177,"posZ":-2.999033,"rotX":-0.0005904363,"rotY":180.019562,"rotZ":180.001053,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18721,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"089a5c","Name":"Card","Transform":{"posX":30.4986515,"posY":7.507511,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01170\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18718,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c8cd46","Name":"Card","Transform":{"posX":30.4986515,"posY":7.30751133,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17603,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"861640","Name":"Card","Transform":{"posX":30.4986515,"posY":7.107511,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01136\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17602,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7a35f5","Name":"Card","Transform":{"posX":30.4986515,"posY":6.907512,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01136\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17605,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c1f477","Name":"Card","Transform":{"posX":30.4986515,"posY":6.707512,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16901,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4b7dd0","Name":"Card","Transform":{"posX":30.4986515,"posY":6.507512,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16900,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"082199","Name":"Card","Transform":{"posX":30.4986515,"posY":5.959993,"posZ":-2.99903274,"rotX":-0.0005908559,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17201,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc1997","Name":"Card","Transform":{"posX":30.4986515,"posY":6.107512,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17202,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3ec405","Name":"Card","Transform":{"posX":30.4986515,"posY":5.90751171,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17338,"SidewaysCard":false,"CustomDeck":{"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4214a2","Name":"Card","Transform":{"posX":30.4986515,"posY":5.707512,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17204,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"714f71","Name":"Card","Transform":{"posX":30.4986515,"posY":5.507512,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16606,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e5d2","Name":"Card","Transform":{"posX":30.4986515,"posY":4.959993,"posZ":-2.99903274,"rotX":-0.0005909534,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16607,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5c7a4c","Name":"Card","Transform":{"posX":30.4986515,"posY":5.107512,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16608,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4f0667","Name":"Card","Transform":{"posX":30.4986515,"posY":4.90751171,"posZ":-2.99903274,"rotX":-0.0005913615,"rotY":180.019562,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16610,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7db7c9","Name":"Card","Transform":{"posX":30.4986534,"posY":1.63381,"posZ":-2.99903178,"rotX":0.00244138436,"rotY":180.019562,"rotZ":180.003876,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18717,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"d82e8b","Name":"Card","Transform":{"posX":16.999342,"posY":1.51758325,"posZ":11.4999723,"rotX":0.011070447,"rotY":180.279739,"rotZ":0.00369138713,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01131\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18723,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"dd6376","Name":"Custom_Token","Transform":{"posX":8.500036,"posY":1.58026206,"posZ":2.99978518,"rotX":0.010855658,"rotY":179.814453,"rotZ":0.003379662,"scaleX":0.3,"scaleY":1,"scaleZ":0.3},"Nickname":"Doom counter\n","Description":"Left click - Increase\nRight click - Decrease","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":0,"b":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/949592555964782208/CC876694A6684B3C2680CE2FE3259F574AE0AD97/","ImageSecondaryURL":"","ImageScalar":1,"WidthScale":0,"CustomToken":{"Thickness":0.1,"MergeDistancePixels":5,"StandUp":false,"Stackable":false}},"LuaScript":"MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,100}\r\n    end\r\n\r\n\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      function_owner=self,\r\n      position={0,0.05,0},\r\n      height=600,\r\n      width=1000,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=600,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n\r\n\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark ]\"\r\n    else\r\n        lightButtonText = \"[ Set light ]\"\r\n    end\r\n \r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n      updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend","LuaScriptState":"[true,1]","XmlUI":""}]},{"GUID":"6a14f5","Name":"Card","Transform":{"posX":6.10320044,"posY":1.57030511,"posZ":20.5,"rotX":0.0109036453,"rotY":179.9988,"rotZ":0.004934744,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01130\",\n  \"locationBack\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Crescent|Tee\",\n    \"icons\": \"Triangle\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134316,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"6a2978","Name":"Custom_Tile","Transform":{"posX":9.999999,"posY":1.50460207,"posZ":11.5,"rotX":0.0049470556,"rotY":89.99604,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"71dcec","Name":"Custom_Model","Transform":{"posX":-20.95632,"posY":1.76630151,"posZ":1.28138506,"rotX":0.000005649612,"rotY":0.00110911054,"rotZ":-9.531845e-8,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Mis de côté, hors jeu\"}","XmlUI":""},{"GUID":"7234af","Name":"Custom_Tile","Transform":{"posX":10,"posY":1.50631285,"posZ":20.5,"rotX":0.004951158,"rotY":90.02095,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"735bb1","Name":"Custom_Model","Transform":{"posX":-30.3266125,"posY":1.76703691,"posZ":4.816304,"rotX":0.00026063266,"rotY":0.0149878664,"rotZ":-0.00118845666,"scaleX":1.74999952,"scaleY":1.74999952,"scaleZ":1.74999952},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0.67770046,"b":0.555448532,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Sélectionnez le nombre de joueurs\"}","XmlUI":""},{"GUID":"73ae3c","Name":"Card","Transform":{"posX":14.5,"posY":1.5161072,"posZ":2.5,"rotX":0.01089145,"rotY":180,"rotZ":0.004948274,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01124\",\n  \"locationBack\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Tilde\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Tilde\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134319,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"75ffdc","Name":"Custom_Tile","Transform":{"posX":9.999998,"posY":1.50374663,"posZ":7.00000334,"rotX":359.9888,"rotY":315.02005,"rotZ":0.0042008115,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"775f4f","Name":"Custom_Tile","Transform":{"posX":-3.500002,"posY":1.5049125,"posZ":7,"rotX":359.9891,"rotY":359.988251,"rotZ":-0.004949744,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"83358c","Name":"Custom_Tile","Transform":{"posX":0.9999987,"posY":1.50452387,"posZ":7.00000334,"rotX":0.0112003712,"rotY":134.996048,"rotZ":-0.004204968,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"9ff45b","Name":"Card","Transform":{"posX":-3.50010085,"posY":1.51766181,"posZ":2.50000024,"rotX":0.01089147,"rotY":180,"rotZ":0.00494822953,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01128\",\n  \"locationBack\": {\n    \"connections\": \"Diamond|Square\",\n    \"icons\": \"Plus\",\n    \"uses\": {\n      \"countPerInvestigator\": 1,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    }\n  },\n  \"locationFront\": {\n    \"connections\": \"Diamond|Square\",\n    \"icons\": \"Plus\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134320,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a18a8e","Name":"Card","Transform":{"posX":-3.49999976,"posY":1.51937258,"posZ":11.5,"rotX":0.0108916238,"rotY":180,"rotZ":0.004948287,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01129\",\n  \"locationBack\": {\n    \"connections\": \"Tee|Plus|Circle|Square\",\n    \"icons\": \"Diamond\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Tee|Plus|Circle|Square\",\n    \"icons\": \"Diamond\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134322,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"a3d6eb","Name":"Custom_Model","Transform":{"posX":34.6252,"posY":1.54541588,"posZ":0.08810006,"rotX":0.0005910762,"rotY":-0.000113715614,"rotZ":-0.00107045239,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Text Tool","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0,"g":0,"b":0,"a":0},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":false,"Snap":false,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":false,"Tooltip":false,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomMesh":{"MeshURL":"http://cloud-3.steamusercontent.com/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/","DiffuseURL":"","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":1,"TypeIndex":0,"CastShadows":true},"LuaScript":"-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend","LuaScriptState":"{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":250,\"text\":\"Deck cultiste\"}","XmlUI":""},{"GUID":"af5bf4","Name":"Card","Transform":{"posX":14.5001,"posY":1.51781809,"posZ":11.5,"rotX":0.0108915931,"rotY":179.9999,"rotZ":0.004948267,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"id\": \"01133\",\n  \"locationBack\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Hourglass\",\n    \"uses\": {\n      \"countPerInvestigator\": 2,\n      \"token\": \"clue\",\n      \"type\": \"Clue\"\n    },\n    \"victory\": 1\n  },\n  \"locationFront\": {\n    \"connections\": \"Circle\",\n    \"icons\": \"Hourglass\"\n  },\n  \"traits\": \"Arkham.\",\n  \"type\": \"Location\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":1134328,"SidewaysCard":false,"CustomDeck":{"11343":{"FaceURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511781412/D8F44D80FB70AB8E8E4B244ADBBAA7C987A3E1E6/","BackURL":"http://cloud-3.steamusercontent.com/ugc/2027220095511782657/D63647B07074125AF8C510C9D082231579139E32/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"b53a81","Name":"Custom_Model_Bag","Transform":{"posX":-34.5000343,"posY":1.83530128,"posZ":3.49996686,"rotX":0.000003180552,"rotY":359.9799,"rotZ":5.47213631e-7,"scaleX":0.7,"scaleY":0.7,"scaleZ":0.7},"Nickname":"1 joueur","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"MaterialIndex":-1,"MeshIndex":-1,"CustomMesh":{"MeshURL":"https://pastebin.com/raw/ALrYhQGb","DiffuseURL":"http://cloud-3.steamusercontent.com/ugc/1874088192658976187/D9A7BC3A49D61E3E7DF55C9A03549645BAC3611D/","NormalURL":"","ColliderURL":"","Convex":true,"MaterialIndex":3,"TypeIndex":6,"CustomShader":{"SpecularColor":{"r":1,"g":1,"b":1},"SpecularIntensity":0,"SpecularSharpness":2,"FresnelStrength":0},"CastShadows":true},"Bag":{"Order":0},"LuaScript":"-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={1.15,0.3,-2.1}, rotation={0,180,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={1.15,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={-1.15,0.3,-2.1}, rotation={0,180,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={1.15,0.3,-3.5}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={-1.15,0.3,-3.5}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={-1.15,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend","LuaScriptState":"{\"ml\":{\"66f25b\":{\"lock\":false,\"pos\":{\"x\":30.4999,\"y\":1.6666,\"z\":-3},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}","XmlUI":"","ContainedObjects":[{"GUID":"66f25b","Name":"Deck","Transform":{"posX":30.4995213,"posY":1.66655016,"posZ":-2.999748,"rotX":-0.0005910176,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":false,"SidewaysCard":false,"DeckIDs":[17601,17604,17603,17602,17605,16901,16900,17201,17202,17338,17204,16606,16607,16608,16610,18720,18720,18719,18718,18721,18717],"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0},"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":"","ContainedObjects":[{"GUID":"a0246f","Name":"Card","Transform":{"posX":30.4999,"posY":8.184456,"posZ":-3,"rotX":0.00000637617,"rotY":180,"rotZ":180.0008,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17601,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"22ab0f","Name":"Card","Transform":{"posX":30.4999,"posY":8.321953,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17604,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c8cd46","Name":"Card","Transform":{"posX":30.4999,"posY":8.121953,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01135\",\n  \"traits\": \"Curse.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17603,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"861640","Name":"Card","Transform":{"posX":30.4999,"posY":7.921953,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01136\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17602,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7a35f5","Name":"Card","Transform":{"posX":30.4999,"posY":7.72195244,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01136\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17605,"SidewaysCard":false,"CustomDeck":{"176":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"c1f477","Name":"Card","Transform":{"posX":30.4999,"posY":7.52195263,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16901,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4b7dd0","Name":"Card","Transform":{"posX":30.4999,"posY":7.321953,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01174\",\n  \"traits\": \"Obstacle.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16900,"SidewaysCard":false,"CustomDeck":{"169":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"082199","Name":"Card","Transform":{"posX":30.4999,"posY":7.12195349,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17201,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"cc1997","Name":"Card","Transform":{"posX":30.4999,"posY":6.921954,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01168\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17202,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3ec405","Name":"Card","Transform":{"posX":30.4999,"posY":6.3844676,"posZ":-3,"rotX":-0.0005911059,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17338,"SidewaysCard":false,"CustomDeck":{"173":{"FaceURL":"https://i.imgur.com/7H57eeO.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4214a2","Name":"Card","Transform":{"posX":30.4999,"posY":6.52195358,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01167\",\n  \"traits\": \"Hazard.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":17204,"SidewaysCard":false,"CustomDeck":{"172":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"714f71","Name":"Card","Transform":{"posX":30.4999,"posY":6.321954,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16606,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"92e5d2","Name":"Card","Transform":{"posX":30.4999,"posY":6.121954,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01173\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16607,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"5c7a4c","Name":"Card","Transform":{"posX":30.4999,"posY":5.92195368,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16608,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"4f0667","Name":"Card","Transform":{"posX":30.4999,"posY":5.721954,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"id\": \"01172\",\n  \"traits\": \"Monster. Nightgaunt.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":16610,"SidewaysCard":false,"CustomDeck":{"166":{"FaceURL":"https://i.imgur.com/nB9kjFF.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"3da314","Name":"Card","Transform":{"posX":30.4999,"posY":5.52195358,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18720,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"033ad3","Name":"Card","Transform":{"posX":30.4999,"posY":5.321954,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18720,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"8a91f9","Name":"Card","Transform":{"posX":30.4999,"posY":5.121954,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"cycle\": \"Standalone\",\n  \"health\": 1,\n  \"id\": \"01169\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\",\n  \"uses\": {\n    \"count\": 1,\n    \"token\": \"doom\",\n    \"type\": \"Doom\"\n  }\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18719,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"089a5c","Name":"Card","Transform":{"posX":30.4999,"posY":4.92195368,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 2,\n  \"id\": \"01170\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"type\": \"Enemy\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18718,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"898692","Name":"Card","Transform":{"posX":30.4999,"posY":4.721954,"posZ":-3.00000024,"rotX":-0.000591051648,"rotY":180,"rotZ":180.001068,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18721,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""},{"GUID":"7db7c9","Name":"Card","Transform":{"posX":33.05495,"posY":2.61148381,"posZ":-0.6799072,"rotX":0.0108915949,"rotY":180.000015,"rotZ":180.004959,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01171\",\n  \"traits\": \"Hex.\",\n  \"type\": \"Treachery\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":18717,"SidewaysCard":false,"CustomDeck":{"187":{"FaceURL":"https://i.imgur.com/f8FRV80.jpg","BackURL":"http://cloud-3.steamusercontent.com/ugc/931553051989537266/4F8EF28EECA8E2376771AD6B18CA93622216C17A/","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":false,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]}]},{"GUID":"d716a1","Name":"Custom_Tile","Transform":{"posX":5.5,"posY":1.50413525,"posZ":7,"rotX":359.9891,"rotY":359.988617,"rotZ":-0.00494983466,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"d85d68","Name":"Custom_Tile","Transform":{"posX":0.99999845,"posY":1.50537932,"posZ":11.5,"rotX":0.004944304,"rotY":89.98287,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"d9c370","Name":"Custom_Tile","Transform":{"posX":0.9999982,"posY":1.50366843,"posZ":2.49999762,"rotX":0.004947122,"rotY":89.9964142,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"e1f778","Name":"Custom_Tile","Transform":{"posX":0.9999987,"posY":1.50709009,"posZ":20.5,"rotX":0.00494709471,"rotY":89.99617,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/vppt2my.png","ImageSecondaryURL":"https://i.imgur.com/vppt2my.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":"","States":{"2":{"GUID":"44b0c5","Name":"Custom_Tile","Transform":{"posX":-39.7933121,"posY":1.63758957,"posZ":2.038383,"rotX":359.9201,"rotY":269.9961,"rotZ":0.0168742146,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/HyfE8m8.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""},"3":{"GUID":"5b38c6","Name":"Custom_Tile","Transform":{"posX":-38.8217163,"posY":1.99356019,"posZ":0.4159239,"rotX":359.9201,"rotY":272.9828,"rotZ":0.01687373,"scaleX":0.8,"scaleY":1,"scaleZ":0.8},"Nickname":"","Description":"","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.6045295,"g":0.6045295,"b":0.6045295},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"https://i.imgur.com/dHKBLoD.png","ImageSecondaryURL":"https://i.imgur.com/HyfE8m8.png","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"","LuaScriptState":"","XmlUI":""}}},{"GUID":"f00436","Name":"Card","Transform":{"posX":17.5000019,"posY":1.5142324,"posZ":-5.999837,"rotX":0.004947278,"rotY":89.9955,"rotZ":359.9891,"scaleX":1,"scaleY":1,"scaleZ":1},"Nickname":"Acte","Description":"","GMNotes":"{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"id\": \"01123\",\n  \"type\": \"Act\"\n}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.713235259,"g":0.713235259,"b":0.713235259},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":true,"Hands":true,"CardID":14002,"SidewaysCard":true,"CustomDeck":{"140":{"FaceURL":"https://i.imgur.com/twwXtHK.jpg","BackURL":"https://i.imgur.com/odMn3kg.jpg","NumWidth":10,"NumHeight":7,"BackIsHidden":true,"UniqueBack":true,"Type":0}},"LuaScript":"","LuaScriptState":"","XmlUI":""}]},{"GUID":"e71a40","Name":"Custom_Tile","Transform":{"posX":33.49745,"posY":1.47986,"posZ":14.5000305,"rotX":-3.79060658e-8,"rotY":180.009323,"rotZ":-3.684243e-7,"scaleX":5.8616,"scaleY":1,"scaleZ":5.8616},"Nickname":"Feuille de Campagne","Description":"La Nuit de la Zélatrice","GMNotes":"","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":1,"g":1,"b":1},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/1877465994984569332/82F8A0D2B25F94B430AF355D7F4AF2C443E41494/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/959719855122482281/AD834A2E74B4568409BA1C9F166E696A69717D68/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":0,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"--[[    Character Sheet Template    by: MrStump\r\n\r\nYou can set up your own character sheet if you follow these steps.\r\n\r\nStep 1) Change the character sheet image\r\n    -Right click on the character sheet, click Custom\r\n    -Replace the image URL with one for your character sheet\r\n    -Click import, make sure your sheet loads\r\n    -SAVE THE GAME (the table setup)\r\n    -LOAD FROM THAT SAVE YOU JUST MADE\r\n\r\nStep 2) Edit script to fit your character sheet\r\n    -Below you will see some general options, and then the big data table\r\n    -The data table is what determines how many of which buttons are made\r\n        -Checkboxes\r\n        -Counters\r\n        -Textboxes\r\n    -By default, there are 3 of each. You can add more or remove entries\r\n    -If you intend to add/remove, be sure only to add/remove ENTRIES\r\n        -This is what an entry looks like:\r\n            {\r\n                pos   = {-0.977,0.1,-0.589},\r\n                size  = 800,\r\n                state = false\r\n            },\r\n        -Deleting the whole thing would remove that specific item on the sheet\r\n        -Copy and pasting it after another entry would create another\r\n    -Each entry type has unique data points (pos, size, state, etc)\r\n        -Do not try to add in your own data points or remove them individually\r\n        -There is a summary of what each point does at the top of its category\r\n\r\nStep 3) Save and check script changes\r\n    -Hit Save & Apply in the script window to save your code\r\n    -You can edit your code as needed and Save+Apply as often as needed\r\n    -When you are finished, make disableSave = false below then Save+apply\r\n        -This enables saving, so your sheet will remember whats on it.\r\n\r\nBonus) Finding/Editing Positions for elements\r\n    I have included a tool to get positions for buttons in {x,y,z} form\r\n    Place it where you want the center of your element to be\r\n    Then copy the table from the notes (lower right of screen)\r\n        You can highlight it and CTRL+C\r\n    Paste it into the data table where needed (pos=)\r\n    If you want to manually tweek the values:\r\n        {0,0,0} is the center of the character sheet\r\n        {1,0,0} is right, {-1,0,0} is left\r\n        {0,0,-1} is up, {0,0,1} is down\r\n        0.1 for Y is the height off of the page.\r\n            If it was 0, it would be down inside the model of the sheet\r\n\r\nBegin editing below:    ]]\r\n\r\n--Set this to true while editing and false when you have finished\r\ndisableSave = true\r\n--Remember to set this to false once you are done making changes\r\n--Then, after you save & apply it, save your game too\r\n\r\n--Color information for button text (r,g,b, values of 0-1)\r\nbuttonFontColor = {0,0,0}\r\n--Color information for button background\r\nbuttonColor = {1,1,1}\r\n--Change scale of button (Avoid changing if possible)\r\nbuttonScale = {0.1,0.1,0.1}\r\n\r\n--This is the button placement information\r\ndefaultButtonData = {\r\n      --Add checkboxes\r\n      checkbox = {\r\n          --[[\r\n          pos   = the position (pasted from the helper tool)\r\n          size  = height/width/font_size for checkbox\r\n          state = default starting value for checkbox (true=checked, false=not)\r\n          ]]\r\n          --First checkbox\r\n          {\r\n              pos   = {-0.62,0.1,0.056},\r\n              size  = 400,\r\n              state = false\r\n          },\r\n          --Second checkbox\r\n          {\r\n              pos   = {-0.629,0.1,0.199},\r\n              size  = 400,\r\n              state = false\r\n          },\r\n          --Third checkbox\r\n          {\r\n              pos   = {-0.594,0.1,0.355},\r\n              size  = 400,\r\n              state = false\r\n          },\r\n          --End of checkboxes\r\n      },\r\n      --Add counters that have a + and - button\r\n      counter = {\r\n          --[[\r\n          pos    = the position (pasted from the helper tool)\r\n          size   = height/width/font_size for counter\r\n          value  = default starting value for counter\r\n          hideBG = if background of counter is hidden (true=hidden, false=not)\r\n          ]]\r\n          --Slot one counter 1\r\n          {\r\n              pos    = {-0.7,0.1,-0.4},\r\n              size   = 400,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot one counter 2\r\n          {\r\n              pos    = {-0.52,0.1,-0.4},\r\n              size   = 400,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot one xp 1\r\n          {\r\n              pos    = {-0.517,0.1,-0.5},\r\n              size   = 300,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot two counter 1\r\n          {\r\n              pos    = {-0.274,0.1,-0.4},\r\n              size   = 400,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot two counter 2\r\n          {\r\n              pos    = {-0.074,0.1,-0.4},\r\n              size   = 400,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot two xp 1\r\n          {\r\n              pos    = {-0.061,0.1,-0.5},\r\n              size   = 300,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot three counter 1\r\n          {\r\n              pos    = {0.153,0.1,-0.4},\r\n              size   = 400,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot three counter 2\r\n          {\r\n              pos    = {0.379,0.1,-0.4},\r\n              size   = 400,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot three xp 1\r\n          {\r\n              pos    = {0.38,0.1,-0.5},\r\n              size   = 300,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot four counter 1\r\n          {\r\n              pos    = {0.614,0.1,-0.4},\r\n              size   = 400,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot four counter 2\r\n          {\r\n              pos    = {0.82,0.1,-0.4},\r\n              size   = 400,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --Slot four xp 1\r\n          {\r\n              pos    = {0.827,0.1,-0.5},\r\n              size   = 300,\r\n              value  = 0,\r\n              hideBG = true\r\n          },\r\n          --End of counters\r\n      },\r\n      --Add editable text boxes\r\n      textbox = {\r\n          --[[\r\n          pos       = the position (pasted from the helper tool)\r\n          rows      = how many lines of text you want for this box\r\n          width     = how wide the text box is\r\n          font_size = size of text. This and \"rows\" effect overall height\r\n          label     = what is shown when there is no text. \"\" = nothing\r\n          value     = text entered into box. \"\" = nothing\r\n          alignment = Number to indicate how you want text aligned\r\n                      (1=Automatic, 2=Left, 3=Center, 4=Right, 5=Justified)\r\n          ]]\r\n          --Slot one player\r\n          {\r\n              pos       = {-0.637,0.1,-0.66},\r\n              rows      = 1,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot one investigator\r\n          {\r\n              pos       = {-0.637,0.1,-0.58},\r\n              rows      = 1,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot one story\r\n          {\r\n              pos       = {-0.637,0.1,-0.28},\r\n              rows      = 3,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot two player\r\n          {\r\n              pos       = {-0.2,0.1,-0.66},\r\n              rows      = 1,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot two investigator\r\n          {\r\n              pos       = {-0.2,0.1,-0.58},\r\n              rows      = 1,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot two story\r\n          {\r\n              pos       = {-0.2,0.1,-0.28},\r\n              rows      = 3,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot three player\r\n          {\r\n              pos       = {0.241,0.1,-0.66},\r\n              rows      = 1,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot three investigator\r\n          {\r\n              pos       = {0.237,0.1,-0.58},\r\n              rows      = 1,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot three story\r\n          {\r\n              pos       = {0.24,0.1,-0.28},\r\n              rows      = 3,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot four player\r\n          {\r\n              pos       = {0.671,0.1,-0.66},\r\n              rows      = 1,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot four investigator\r\n          {\r\n              pos       = {0.671,0.1,-0.58},\r\n              rows      = 1,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Slot four story\r\n          {\r\n              pos       = {0.671,0.1,-0.28},\r\n              rows      = 3,\r\n              width     = 2000,\r\n              font_size = 150,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Killed Textbox\r\n          {\r\n              pos       = {-0.4,0.1,0.68},\r\n              rows      = 8,\r\n              width     = 3800,\r\n              font_size = 200,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Campaign Notes\r\n          {\r\n              pos       = {0.507,0.1,0.15},\r\n              rows      = 8,\r\n              width     = 3500,\r\n              font_size = 200,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Cultists interrogated\r\n          {\r\n              pos       = {0.507,0.1,0.509},\r\n              rows      = 4,\r\n              width     = 3500,\r\n              font_size = 200,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --Cultists got away\r\n          {\r\n              pos       = {0.507,0.1,0.771},\r\n              rows      = 4,\r\n              width     = 3500,\r\n              font_size = 200,\r\n              label     = \"Cliquez et saisissez\",\r\n              value     = \"\",\r\n              alignment = 2\r\n          },\r\n          --End of textboxes\r\n      }\r\n}\r\n\r\n\r\n\r\n--Lua beyond this point, I recommend doing something more fun with your life\r\n\r\n\r\n\r\n--Save function\r\nfunction updateSave()\r\n    saved_data = JSON.encode(ref_buttonData)\r\n    if disableSave==true then saved_data=\"\" end\r\n    self.script_state = saved_data\r\nend\r\n\r\n--Startup procedure\r\nfunction onload(saved_data)\r\n    if disableSave==true then saved_data=\"\" end\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        ref_buttonData = loaded_data\r\n    else\r\n        ref_buttonData = defaultButtonData\r\n    end\r\n\r\n    spawnedButtonCount = 0\r\n    createCheckbox()\r\n    createCounter()\r\n    createTextbox()\r\nend\r\n\r\n\r\n\r\n--Click functions for buttons\r\n\r\n\r\n\r\n--Checks or unchecks the given box\r\nfunction click_checkbox(tableIndex, buttonIndex)\r\n    if ref_buttonData.checkbox[tableIndex].state == true then\r\n        ref_buttonData.checkbox[tableIndex].state = false\r\n        self.editButton({index=buttonIndex, label=\"\"})\r\n    else\r\n        ref_buttonData.checkbox[tableIndex].state = true\r\n        self.editButton({index=buttonIndex, label=string.char(10008)})\r\n    end\r\n    updateSave()\r\nend\r\n\r\n--Applies value to given counter display\r\nfunction click_counter(tableIndex, buttonIndex, amount)\r\n    ref_buttonData.counter[tableIndex].value = ref_buttonData.counter[tableIndex].value + amount\r\n    self.editButton({index=buttonIndex, label=ref_buttonData.counter[tableIndex].value})\r\n    updateSave()\r\nend\r\n\r\n--Updates saved value for given text box\r\nfunction click_textbox(i, value, selected)\r\n    if selected == false then\r\n        ref_buttonData.textbox[i].value = value\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Dud function for if you have a background on a counter\r\nfunction click_none() end\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n\r\n--Makes checkboxes\r\nfunction createCheckbox()\r\n    for i, data in ipairs(ref_buttonData.checkbox) do\r\n        --Sets up reference function\r\n        local buttonNumber = spawnedButtonCount\r\n        local funcName = \"checkbox\"..i\r\n        local func = function() click_checkbox(i, buttonNumber) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"\"\r\n        if data.state==true then label=string.char(10008) end\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=data.pos, height=data.size, width=data.size,\r\n            font_size=data.size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n    end\r\nend\r\n\r\n--Makes counters\r\nfunction createCounter()\r\n    for i, data in ipairs(ref_buttonData.counter) do\r\n        --Sets up display\r\n        local displayNumber = spawnedButtonCount\r\n        --Sets up label\r\n        local label = data.value\r\n        --Sets height/width for display\r\n        local size = data.size\r\n        if data.hideBG == true then size = 0 end\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=\"click_none\", function_owner=self,\r\n            position=data.pos, height=size, width=size,\r\n            font_size=data.size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n        --Sets up add 1\r\n        local funcName = \"counterAdd\"..i\r\n        local func = function() click_counter(i, displayNumber, 1) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"+\"\r\n        --Sets up position\r\n        local offsetDistance = (data.size/2 + data.size/4) * (buttonScale[1] * 0.002)\r\n        local pos = {data.pos[1] + offsetDistance, data.pos[2], data.pos[3]}\r\n        --Sets up size\r\n        local size = data.size / 2\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=pos, height=size, width=size,\r\n            font_size=size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n        --Sets up subtract 1\r\n        local funcName = \"counterSub\"..i\r\n        local func = function() click_counter(i, displayNumber, -1) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"-\"\r\n        --Set up position\r\n        local pos = {data.pos[1] - offsetDistance, data.pos[2], data.pos[3]}\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=pos, height=size, width=size,\r\n            font_size=size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n    end\r\nend\r\n\r\nfunction createTextbox()\r\n    for i, data in ipairs(ref_buttonData.textbox) do\r\n        --Sets up reference function\r\n        local funcName = \"textbox\"..i\r\n        local func = function(_,_,val,sel) click_textbox(i,val,sel) end\r\n        self.setVar(funcName, func)\r\n\r\n        self.createInput({\r\n            input_function = funcName,\r\n            function_owner = self,\r\n            label          = data.label,\r\n            alignment      = data.alignment,\r\n            position       = data.pos,\r\n            scale          = buttonScale,\r\n            width          = data.width,\r\n            height         = (data.font_size*data.rows)+24,\r\n            font_size      = data.font_size,\r\n            color          = buttonColor,\r\n            font_color     = buttonFontColor,\r\n            value          = data.value,\r\n        })\r\n    end\r\nend","LuaScriptState":"","XmlUI":""},{"GUID":"f93de1","Name":"Custom_Tile","Transform":{"posX":3.5,"posY":1.50193179,"posZ":-5.500001,"rotX":0.0108905472,"rotY":180.012878,"rotZ":0.00495101837,"scaleX":1.6428808,"scaleY":1,"scaleZ":1.6428808},"Nickname":"Mise en place du Chaos Bag","Description":"La nuit de la Zélatrice","GMNotes":"{\"data\":\"Core Set\",\"easy\":true,\"expert\":true,\"hard\":true,\"normal\":true,\"standalone\":false}","AltLookAngle":{"x":0,"y":0,"z":0},"ColorDiffuse":{"r":0.8745098,"g":0.8,"b":0.7019608},"LayoutGroupSortIndex":0,"Value":0,"Locked":false,"Grid":true,"Snap":true,"IgnoreFoW":false,"MeasureMovement":false,"DragSelectable":true,"Autoraise":true,"Sticky":true,"Tooltip":true,"GridProjection":false,"HideWhenFaceDown":false,"Hands":false,"CustomImage":{"ImageURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageSecondaryURL":"http://cloud-3.steamusercontent.com/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/","ImageScalar":1,"WidthScale":0,"CustomTile":{"Type":3,"Thickness":0.1,"Stackable":false,"Stretch":true}},"LuaScript":"\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend","LuaScriptState":"","XmlUI":""}]}